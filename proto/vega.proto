syntax = "proto3";

package vega;
option go_package = "proto";
enum Side { Buy = 0; Sell = 1; }

enum Interval { I1M = 0; I5M = 1; I15M = 2; I1H = 3; I6H = 4; I1D = 5; }

message Market {
    string name = 1;
}

message Party {
    string name = 1;
    repeated MarketPosition positions = 2;
}

message RiskFactor {
    string market = 1;
    double short = 2;
   	double long = 3;
}

message Order {
    enum Type { GTC = 0; GTT = 1; ENE = 2; FOK = 3; }
    enum Status { Active = 0; Expired = 1; Cancelled = 2; Stopped = 3; Filled = 4; }
    string id = 1;
    string market = 2;
    string party = 3;
    Side side = 4;
    uint64 price = 5;
    uint64 size = 6;
    uint64 remaining = 7;
    Type type = 8;
    uint64 timestamp = 9;
    Status status = 10;
    string expirationDatetime = 11;
    uint64 expirationTimestamp = 12;
    string reference = 13;
}

message OrderCancellation {
    Order order = 1;
}

message OrderConfirmation {
    Order order = 1;
    repeated Trade trades = 2;
    repeated Order passiveOrdersAffected = 3;
}

enum OrderError {
    NONE = 0;
    INVALID_MARKET_ID = 1;
    INVALID_ORDER_ID = 2;
    ORDER_OUT_OF_SEQUENCE = 3;
    INVALID_REMAINING_SIZE = 4;
    TIME_FAILURE = 5;
    ORDER_REMOVAL_FAILURE = 6;
    INVALID_EXPIRATION_DATETIME = 7;
    INVALID_ORDER_REFERENCE = 8;
    EDIT_NOT_ALLOWED = 9;
    ORDER_AMEND_FAILURE = 10;
    ORDER_NOT_FOUND = 11;
}

message Trade {
    string id = 1;
    string market = 2;
    uint64 price = 3;
    uint64 size = 4;
    string buyer = 5;
    string seller = 6;
    Side aggressor = 7;
    string buyOrder = 8;
    string sellOrder = 9;
    uint64 timestamp = 10;
}

message TradeSet {
    repeated Trade trades = 1;
}

message MarketData {
    uint64 bestBid = 1;
    uint64 bestOffer = 2;
    uint64 lastTradedPrice = 3;
}

message Candle {
    uint64 timestamp = 1;
    string datetime = 2;
    uint64 high = 3;
    uint64 low = 4;
    uint64 open = 5;
    uint64 close = 6;
    uint64 volume = 7;
    Interval interval = 8;
}

message PriceLevel {
    uint64 price = 1;
    uint64 numberOfOrders = 2;
    uint64 volume = 3;
    uint64 cumulativeVolume = 4;
}

message MarketDepth {
    string   name = 1;
    repeated PriceLevel buy = 2;
    repeated PriceLevel sell = 3;
}

message MarketPosition {
    string market = 1;
    int64 realisedVolume = 2;
    int64 realisedPNL  = 3;
    int64 unrealisedVolume = 4;
    int64 unrealisedPNL = 5;
    uint64 averageEntryPrice = 6;
    int64 minimumMargin = 7;
}

message Statistics {
    uint64 blockHeight = 1;
    uint64 backlogLength = 2;
    uint64 totalPeers = 3;
    string genesisTime = 4;
    string currentTime = 5;
    string vegaTime = 6;
    AppStatus status = 7;
    uint64 txPerBlock = 8;
    uint64 averageTxBytes = 9;
    uint64 averageOrdersPerBlock = 10;
    uint64 tradesPerSecond = 11;
    uint64 ordersPerSecond = 12;
    Trade  lastTrade = 13;
    Order  lastOrder = 14;
    uint64 totalMarkets = 15;
    uint64 totalParties = 16;
    string appVersionHash = 17;
    string appVersion = 18;
    repeated string Parties = 19;
}

enum AppStatus {
  DISCONNECTED = 0;
  CHAIN_REPLAYING = 1;
  CONNECTED = 2;
}

message Amendment {
    string id = 1;
    string party = 2;
    uint64 price = 3;
    uint64 size = 4;
    string expirationDatetime = 5;
    uint64 expirationTimestamp = 6;
}
