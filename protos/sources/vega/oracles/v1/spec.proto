syntax = "proto3";

package oracles.v1;

option go_package = "code.vegaprotocol.io/vega/protos/vega/oracles/v1";

// An oracle spec describe the oracle data that a product (or a risk model)
// wants to get from the oracle engine.
message OracleSpecConfiguration {
  // pubKeys is the list of authorized public keys that signed the data for this
  // oracle. All the public keys in the oracle data should be contained in these
  // public keys.
  repeated string pub_keys = 1;
  // filters describes which oracle data are considered of interest or not for
  // the product (or the risk model).
  repeated Filter filters = 2;
}

// An oracle spec describe the oracle data that a product (or a risk model)
// wants to get from the oracle engine.
// This message contains additional information used by the API.
message OracleSpec {
  // id is a hash generated from the OracleSpec data.
  string id = 1;
  // Creation Date time
  int64 created_at = 2;
  // Last Updated timestamp
  int64 updated_at = 3;
  // pubKeys is the list of authorized public keys that signed the data for this
  // oracle. All the public keys in the oracle data should be contained in these
  // public keys.
  repeated string pub_keys = 4;
  // filters describes which oracle data are considered of interest or not for
  // the product (or the risk model).
  repeated Filter filters = 5;
  // status describes the status of the oracle spec
  Status status = 6;

  // Status describe the status of the oracle spec
  enum Status {
    // The default value.
    STATUS_UNSPECIFIED = 0;
    // STATUS_ACTIVE describes an active oracle spec.
    STATUS_ACTIVE = 1;
    // STATUS_DEACTIVATED describes an oracle spec that is not listening to data
    // anymore.
    STATUS_DEACTIVATED = 2;
  }
}

// Filter describes the conditions under which an oracle data is considered of
// interest or not.
message Filter {
  // key is the oracle data property key targeted by the filter.
  PropertyKey key = 1;
  // conditions are the conditions that should be matched by the data to be
  // considered of interest.
  repeated Condition conditions = 2;
}

// PropertyKey describes the property key contained in an oracle data.
message PropertyKey {
  // name is the name of the property.
  string name = 1;
  // type is the type of the property.
  Type type = 2;
  // Type describes the type of properties that are supported by the oracle
  // engine.
  enum Type {
    // The default value.
    TYPE_UNSPECIFIED = 0;
    // Any type.
    TYPE_EMPTY = 1;
    // Integer type.
    TYPE_INTEGER = 2;
    // String type.
    TYPE_STRING = 3;
    // Boolean type.
    TYPE_BOOLEAN = 4;
    // Any floating point decimal type.
    TYPE_DECIMAL = 5;
    // Timestamp date type.
    TYPE_TIMESTAMP = 6;
  }
}

// Condition describes the condition that must be validated by the
message Condition {
  // comparator is the type of comparison to make on the value.
  Operator operator = 1;
  // value is used by the comparator.
  string value = 2;
  // Comparator describes the type of comparison.
  enum Operator {
    // The default value
    OPERATOR_UNSPECIFIED = 0;
    // Verify if the property values are strictly equal or not.
    OPERATOR_EQUALS = 1;
    // Verify if the oracle data value is greater than the Condition value.
    OPERATOR_GREATER_THAN = 2;
    // Verify if the oracle data value is greater than or equal to the Condition
    // value.
    OPERATOR_GREATER_THAN_OR_EQUAL = 3;
    // Verify if the oracle data value is less than the Condition value.
    OPERATOR_LESS_THAN = 4;
    // Verify if the oracle data value is less or equal to than the Condition
    // value.
    OPERATOR_LESS_THAN_OR_EQUAL = 5;
  }
}
