// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vega.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Side int32

const (
	Side_Buy  Side = 0
	Side_Sell Side = 1
)

var Side_name = map[int32]string{
	0: "Buy",
	1: "Sell",
}
var Side_value = map[string]int32{
	"Buy":  0,
	"Sell": 1,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}
func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{0}
}

type Interval int32

const (
	Interval_I1M  Interval = 0
	Interval_I5M  Interval = 1
	Interval_I15M Interval = 2
	Interval_I1H  Interval = 3
	Interval_I6H  Interval = 4
	Interval_I1D  Interval = 5
)

var Interval_name = map[int32]string{
	0: "I1M",
	1: "I5M",
	2: "I15M",
	3: "I1H",
	4: "I6H",
	5: "I1D",
}
var Interval_value = map[string]int32{
	"I1M":  0,
	"I5M":  1,
	"I15M": 2,
	"I1H":  3,
	"I6H":  4,
	"I1D":  5,
}

func (x Interval) String() string {
	return proto.EnumName(Interval_name, int32(x))
}
func (Interval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{1}
}

type OrderError int32

const (
	OrderError_NONE                        OrderError = 0
	OrderError_INVALID_MARKET_ID           OrderError = 1
	OrderError_INVALID_ORDER_ID            OrderError = 2
	OrderError_ORDER_OUT_OF_SEQUENCE       OrderError = 3
	OrderError_INVALID_REMAINING_SIZE      OrderError = 4
	OrderError_TIME_FAILURE                OrderError = 5
	OrderError_ORDER_REMOVAL_FAILURE       OrderError = 6
	OrderError_INVALID_EXPIRATION_DATETIME OrderError = 7
	OrderError_INVALID_ORDER_REFERENCE     OrderError = 8
	OrderError_EDIT_NOT_ALLOWED            OrderError = 9
	OrderError_ORDER_AMEND_FAILURE         OrderError = 10
	OrderError_ORDER_NOT_FOUND             OrderError = 11
)

var OrderError_name = map[int32]string{
	0:  "NONE",
	1:  "INVALID_MARKET_ID",
	2:  "INVALID_ORDER_ID",
	3:  "ORDER_OUT_OF_SEQUENCE",
	4:  "INVALID_REMAINING_SIZE",
	5:  "TIME_FAILURE",
	6:  "ORDER_REMOVAL_FAILURE",
	7:  "INVALID_EXPIRATION_DATETIME",
	8:  "INVALID_ORDER_REFERENCE",
	9:  "EDIT_NOT_ALLOWED",
	10: "ORDER_AMEND_FAILURE",
	11: "ORDER_NOT_FOUND",
}
var OrderError_value = map[string]int32{
	"NONE":                        0,
	"INVALID_MARKET_ID":           1,
	"INVALID_ORDER_ID":            2,
	"ORDER_OUT_OF_SEQUENCE":       3,
	"INVALID_REMAINING_SIZE":      4,
	"TIME_FAILURE":                5,
	"ORDER_REMOVAL_FAILURE":       6,
	"INVALID_EXPIRATION_DATETIME": 7,
	"INVALID_ORDER_REFERENCE":     8,
	"EDIT_NOT_ALLOWED":            9,
	"ORDER_AMEND_FAILURE":         10,
	"ORDER_NOT_FOUND":             11,
}

func (x OrderError) String() string {
	return proto.EnumName(OrderError_name, int32(x))
}
func (OrderError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{2}
}

type ChainStatus int32

const (
	ChainStatus_DISCONNECTED ChainStatus = 0
	ChainStatus_REPLAYING    ChainStatus = 1
	ChainStatus_CONNECTED    ChainStatus = 2
)

var ChainStatus_name = map[int32]string{
	0: "DISCONNECTED",
	1: "REPLAYING",
	2: "CONNECTED",
}
var ChainStatus_value = map[string]int32{
	"DISCONNECTED": 0,
	"REPLAYING":    1,
	"CONNECTED":    2,
}

func (x ChainStatus) String() string {
	return proto.EnumName(ChainStatus_name, int32(x))
}
func (ChainStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{3}
}

type Order_Type int32

const (
	Order_GTC Order_Type = 0
	Order_GTT Order_Type = 1
	Order_ENE Order_Type = 2
	Order_FOK Order_Type = 3
)

var Order_Type_name = map[int32]string{
	0: "GTC",
	1: "GTT",
	2: "ENE",
	3: "FOK",
}
var Order_Type_value = map[string]int32{
	"GTC": 0,
	"GTT": 1,
	"ENE": 2,
	"FOK": 3,
}

func (x Order_Type) String() string {
	return proto.EnumName(Order_Type_name, int32(x))
}
func (Order_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{3, 0}
}

type Order_Status int32

const (
	Order_Active    Order_Status = 0
	Order_Expired   Order_Status = 1
	Order_Cancelled Order_Status = 2
	Order_Stopped   Order_Status = 3
	Order_Filled    Order_Status = 4
)

var Order_Status_name = map[int32]string{
	0: "Active",
	1: "Expired",
	2: "Cancelled",
	3: "Stopped",
	4: "Filled",
}
var Order_Status_value = map[string]int32{
	"Active":    0,
	"Expired":   1,
	"Cancelled": 2,
	"Stopped":   3,
	"Filled":    4,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}
func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{3, 1}
}

type Market struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{0}
}
func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (dst *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(dst, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Party struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Positions            []*MarketPosition `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Party) Reset()         { *m = Party{} }
func (m *Party) String() string { return proto.CompactTextString(m) }
func (*Party) ProtoMessage()    {}
func (*Party) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{1}
}
func (m *Party) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Party.Unmarshal(m, b)
}
func (m *Party) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Party.Marshal(b, m, deterministic)
}
func (dst *Party) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Party.Merge(dst, src)
}
func (m *Party) XXX_Size() int {
	return xxx_messageInfo_Party.Size(m)
}
func (m *Party) XXX_DiscardUnknown() {
	xxx_messageInfo_Party.DiscardUnknown(m)
}

var xxx_messageInfo_Party proto.InternalMessageInfo

func (m *Party) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Party) GetPositions() []*MarketPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

type RiskFactor struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Short                float64  `protobuf:"fixed64,2,opt,name=short,proto3" json:"short,omitempty"`
	Long                 float64  `protobuf:"fixed64,3,opt,name=long,proto3" json:"long,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskFactor) Reset()         { *m = RiskFactor{} }
func (m *RiskFactor) String() string { return proto.CompactTextString(m) }
func (*RiskFactor) ProtoMessage()    {}
func (*RiskFactor) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{2}
}
func (m *RiskFactor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskFactor.Unmarshal(m, b)
}
func (m *RiskFactor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskFactor.Marshal(b, m, deterministic)
}
func (dst *RiskFactor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskFactor.Merge(dst, src)
}
func (m *RiskFactor) XXX_Size() int {
	return xxx_messageInfo_RiskFactor.Size(m)
}
func (m *RiskFactor) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskFactor.DiscardUnknown(m)
}

var xxx_messageInfo_RiskFactor proto.InternalMessageInfo

func (m *RiskFactor) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *RiskFactor) GetShort() float64 {
	if m != nil {
		return m.Short
	}
	return 0
}

func (m *RiskFactor) GetLong() float64 {
	if m != nil {
		return m.Long
	}
	return 0
}

type Order struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Market               string       `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Party                string       `protobuf:"bytes,3,opt,name=party,proto3" json:"party,omitempty"`
	Side                 Side         `protobuf:"varint,4,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	Price                uint64       `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64       `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Remaining            uint64       `protobuf:"varint,7,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Type                 Order_Type   `protobuf:"varint,8,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	Timestamp            uint64       `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status               Order_Status `protobuf:"varint,10,opt,name=status,proto3,enum=vega.Order_Status" json:"status,omitempty"`
	ExpirationDatetime   string       `protobuf:"bytes,11,opt,name=expirationDatetime,proto3" json:"expirationDatetime,omitempty"`
	ExpirationTimestamp  uint64       `protobuf:"varint,12,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	Reference            string       `protobuf:"bytes,13,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{3}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Order) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Order) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *Order) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Order) GetRemaining() uint64 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *Order) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_GTC
}

func (m *Order) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_Active
}

func (m *Order) GetExpirationDatetime() string {
	if m != nil {
		return m.ExpirationDatetime
	}
	return ""
}

func (m *Order) GetExpirationTimestamp() uint64 {
	if m != nil {
		return m.ExpirationTimestamp
	}
	return 0
}

func (m *Order) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrderCancellation struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{4}
}
func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellation.Unmarshal(m, b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
}
func (dst *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(dst, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellation.Size(m)
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type OrderConfirmation struct {
	Order                 *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Trades                []*Trade `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"`
	PassiveOrdersAffected []*Order `protobuf:"bytes,3,rep,name=passiveOrdersAffected,proto3" json:"passiveOrdersAffected,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *OrderConfirmation) Reset()         { *m = OrderConfirmation{} }
func (m *OrderConfirmation) String() string { return proto.CompactTextString(m) }
func (*OrderConfirmation) ProtoMessage()    {}
func (*OrderConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{5}
}
func (m *OrderConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderConfirmation.Unmarshal(m, b)
}
func (m *OrderConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderConfirmation.Marshal(b, m, deterministic)
}
func (dst *OrderConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderConfirmation.Merge(dst, src)
}
func (m *OrderConfirmation) XXX_Size() int {
	return xxx_messageInfo_OrderConfirmation.Size(m)
}
func (m *OrderConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderConfirmation proto.InternalMessageInfo

func (m *OrderConfirmation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderConfirmation) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func (m *OrderConfirmation) GetPassiveOrdersAffected() []*Order {
	if m != nil {
		return m.PassiveOrdersAffected
	}
	return nil
}

type Trade struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Market               string   `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Price                uint64   `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Buyer                string   `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Seller               string   `protobuf:"bytes,6,opt,name=seller,proto3" json:"seller,omitempty"`
	Aggressor            Side     `protobuf:"varint,7,opt,name=aggressor,proto3,enum=vega.Side" json:"aggressor,omitempty"`
	BuyOrder             string   `protobuf:"bytes,8,opt,name=buyOrder,proto3" json:"buyOrder,omitempty"`
	SellOrder            string   `protobuf:"bytes,9,opt,name=sellOrder,proto3" json:"sellOrder,omitempty"`
	Timestamp            uint64   `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{6}
}
func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (dst *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(dst, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trade) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Trade) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Trade) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *Trade) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *Trade) GetAggressor() Side {
	if m != nil {
		return m.Aggressor
	}
	return Side_Buy
}

func (m *Trade) GetBuyOrder() string {
	if m != nil {
		return m.BuyOrder
	}
	return ""
}

func (m *Trade) GetSellOrder() string {
	if m != nil {
		return m.SellOrder
	}
	return ""
}

func (m *Trade) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TradeSet struct {
	Trades               []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeSet) Reset()         { *m = TradeSet{} }
func (m *TradeSet) String() string { return proto.CompactTextString(m) }
func (*TradeSet) ProtoMessage()    {}
func (*TradeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{7}
}
func (m *TradeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeSet.Unmarshal(m, b)
}
func (m *TradeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeSet.Marshal(b, m, deterministic)
}
func (dst *TradeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeSet.Merge(dst, src)
}
func (m *TradeSet) XXX_Size() int {
	return xxx_messageInfo_TradeSet.Size(m)
}
func (m *TradeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeSet.DiscardUnknown(m)
}

var xxx_messageInfo_TradeSet proto.InternalMessageInfo

func (m *TradeSet) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type MarketData struct {
	BestBid              uint64   `protobuf:"varint,1,opt,name=bestBid,proto3" json:"bestBid,omitempty"`
	BestOffer            uint64   `protobuf:"varint,2,opt,name=bestOffer,proto3" json:"bestOffer,omitempty"`
	LastTradedPrice      uint64   `protobuf:"varint,3,opt,name=lastTradedPrice,proto3" json:"lastTradedPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketData) Reset()         { *m = MarketData{} }
func (m *MarketData) String() string { return proto.CompactTextString(m) }
func (*MarketData) ProtoMessage()    {}
func (*MarketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{8}
}
func (m *MarketData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketData.Unmarshal(m, b)
}
func (m *MarketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketData.Marshal(b, m, deterministic)
}
func (dst *MarketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketData.Merge(dst, src)
}
func (m *MarketData) XXX_Size() int {
	return xxx_messageInfo_MarketData.Size(m)
}
func (m *MarketData) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketData.DiscardUnknown(m)
}

var xxx_messageInfo_MarketData proto.InternalMessageInfo

func (m *MarketData) GetBestBid() uint64 {
	if m != nil {
		return m.BestBid
	}
	return 0
}

func (m *MarketData) GetBestOffer() uint64 {
	if m != nil {
		return m.BestOffer
	}
	return 0
}

func (m *MarketData) GetLastTradedPrice() uint64 {
	if m != nil {
		return m.LastTradedPrice
	}
	return 0
}

type Candle struct {
	Timestamp            uint64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Datetime             string   `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	High                 uint64   `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`
	Low                  uint64   `protobuf:"varint,4,opt,name=low,proto3" json:"low,omitempty"`
	Open                 uint64   `protobuf:"varint,5,opt,name=open,proto3" json:"open,omitempty"`
	Close                uint64   `protobuf:"varint,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume               uint64   `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Interval             Interval `protobuf:"varint,8,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{9}
}
func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (dst *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(dst, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Candle) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *Candle) GetHigh() uint64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() uint64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetOpen() uint64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() uint64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetInterval() Interval {
	if m != nil {
		return m.Interval
	}
	return Interval_I1M
}

type PriceLevel struct {
	Price                uint64   `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	NumberOfOrders       uint64   `protobuf:"varint,2,opt,name=numberOfOrders,proto3" json:"numberOfOrders,omitempty"`
	Volume               uint64   `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	CumulativeVolume     uint64   `protobuf:"varint,4,opt,name=cumulativeVolume,proto3" json:"cumulativeVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLevel) Reset()         { *m = PriceLevel{} }
func (m *PriceLevel) String() string { return proto.CompactTextString(m) }
func (*PriceLevel) ProtoMessage()    {}
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{10}
}
func (m *PriceLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLevel.Unmarshal(m, b)
}
func (m *PriceLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLevel.Marshal(b, m, deterministic)
}
func (dst *PriceLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLevel.Merge(dst, src)
}
func (m *PriceLevel) XXX_Size() int {
	return xxx_messageInfo_PriceLevel.Size(m)
}
func (m *PriceLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLevel.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLevel proto.InternalMessageInfo

func (m *PriceLevel) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PriceLevel) GetNumberOfOrders() uint64 {
	if m != nil {
		return m.NumberOfOrders
	}
	return 0
}

func (m *PriceLevel) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PriceLevel) GetCumulativeVolume() uint64 {
	if m != nil {
		return m.CumulativeVolume
	}
	return 0
}

type MarketDepth struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Buy                  []*PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MarketDepth) Reset()         { *m = MarketDepth{} }
func (m *MarketDepth) String() string { return proto.CompactTextString(m) }
func (*MarketDepth) ProtoMessage()    {}
func (*MarketDepth) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{11}
}
func (m *MarketDepth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepth.Unmarshal(m, b)
}
func (m *MarketDepth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepth.Marshal(b, m, deterministic)
}
func (dst *MarketDepth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepth.Merge(dst, src)
}
func (m *MarketDepth) XXX_Size() int {
	return xxx_messageInfo_MarketDepth.Size(m)
}
func (m *MarketDepth) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepth.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepth proto.InternalMessageInfo

func (m *MarketDepth) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MarketDepth) GetBuy() []*PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MarketDepth) GetSell() []*PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

type MarketPosition struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	RealisedVolume       int64    `protobuf:"varint,2,opt,name=realisedVolume,proto3" json:"realisedVolume,omitempty"`
	RealisedPNL          int64    `protobuf:"varint,3,opt,name=realisedPNL,proto3" json:"realisedPNL,omitempty"`
	UnrealisedVolume     int64    `protobuf:"varint,4,opt,name=unrealisedVolume,proto3" json:"unrealisedVolume,omitempty"`
	UnrealisedPNL        int64    `protobuf:"varint,5,opt,name=unrealisedPNL,proto3" json:"unrealisedPNL,omitempty"`
	AverageEntryPrice    uint64   `protobuf:"varint,6,opt,name=averageEntryPrice,proto3" json:"averageEntryPrice,omitempty"`
	MinimumMargin        int64    `protobuf:"varint,7,opt,name=minimumMargin,proto3" json:"minimumMargin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketPosition) Reset()         { *m = MarketPosition{} }
func (m *MarketPosition) String() string { return proto.CompactTextString(m) }
func (*MarketPosition) ProtoMessage()    {}
func (*MarketPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{12}
}
func (m *MarketPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketPosition.Unmarshal(m, b)
}
func (m *MarketPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketPosition.Marshal(b, m, deterministic)
}
func (dst *MarketPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketPosition.Merge(dst, src)
}
func (m *MarketPosition) XXX_Size() int {
	return xxx_messageInfo_MarketPosition.Size(m)
}
func (m *MarketPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MarketPosition proto.InternalMessageInfo

func (m *MarketPosition) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *MarketPosition) GetRealisedVolume() int64 {
	if m != nil {
		return m.RealisedVolume
	}
	return 0
}

func (m *MarketPosition) GetRealisedPNL() int64 {
	if m != nil {
		return m.RealisedPNL
	}
	return 0
}

func (m *MarketPosition) GetUnrealisedVolume() int64 {
	if m != nil {
		return m.UnrealisedVolume
	}
	return 0
}

func (m *MarketPosition) GetUnrealisedPNL() int64 {
	if m != nil {
		return m.UnrealisedPNL
	}
	return 0
}

func (m *MarketPosition) GetAverageEntryPrice() uint64 {
	if m != nil {
		return m.AverageEntryPrice
	}
	return 0
}

func (m *MarketPosition) GetMinimumMargin() int64 {
	if m != nil {
		return m.MinimumMargin
	}
	return 0
}

type Statistics struct {
	BlockHeight           uint64      `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	BacklogLength         uint64      `protobuf:"varint,2,opt,name=backlogLength,proto3" json:"backlogLength,omitempty"`
	TotalPeers            uint64      `protobuf:"varint,3,opt,name=totalPeers,proto3" json:"totalPeers,omitempty"`
	GenesisTime           string      `protobuf:"bytes,4,opt,name=genesisTime,proto3" json:"genesisTime,omitempty"`
	CurrentTime           string      `protobuf:"bytes,5,opt,name=currentTime,proto3" json:"currentTime,omitempty"`
	VegaTime              string      `protobuf:"bytes,6,opt,name=vegaTime,proto3" json:"vegaTime,omitempty"`
	Status                ChainStatus `protobuf:"varint,7,opt,name=status,proto3,enum=vega.ChainStatus" json:"status,omitempty"`
	TxPerBlock            uint64      `protobuf:"varint,8,opt,name=txPerBlock,proto3" json:"txPerBlock,omitempty"`
	AverageTxBytes        uint64      `protobuf:"varint,9,opt,name=averageTxBytes,proto3" json:"averageTxBytes,omitempty"`
	AverageOrdersPerBlock uint64      `protobuf:"varint,10,opt,name=averageOrdersPerBlock,proto3" json:"averageOrdersPerBlock,omitempty"`
	TradesPerSecond       uint64      `protobuf:"varint,11,opt,name=tradesPerSecond,proto3" json:"tradesPerSecond,omitempty"`
	OrdersPerSecond       uint64      `protobuf:"varint,12,opt,name=ordersPerSecond,proto3" json:"ordersPerSecond,omitempty"`
	TotalMarkets          uint64      `protobuf:"varint,13,opt,name=totalMarkets,proto3" json:"totalMarkets,omitempty"`
	TotalParties          uint64      `protobuf:"varint,14,opt,name=totalParties,proto3" json:"totalParties,omitempty"`
	AppVersionHash        string      `protobuf:"bytes,15,opt,name=appVersionHash,proto3" json:"appVersionHash,omitempty"`
	AppVersion            string      `protobuf:"bytes,16,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Parties               []string    `protobuf:"bytes,17,rep,name=Parties,proto3" json:"Parties,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}    `json:"-"`
	XXX_unrecognized      []byte      `json:"-"`
	XXX_sizecache         int32       `json:"-"`
}

func (m *Statistics) Reset()         { *m = Statistics{} }
func (m *Statistics) String() string { return proto.CompactTextString(m) }
func (*Statistics) ProtoMessage()    {}
func (*Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{13}
}
func (m *Statistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistics.Unmarshal(m, b)
}
func (m *Statistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistics.Marshal(b, m, deterministic)
}
func (dst *Statistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistics.Merge(dst, src)
}
func (m *Statistics) XXX_Size() int {
	return xxx_messageInfo_Statistics.Size(m)
}
func (m *Statistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistics.DiscardUnknown(m)
}

var xxx_messageInfo_Statistics proto.InternalMessageInfo

func (m *Statistics) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Statistics) GetBacklogLength() uint64 {
	if m != nil {
		return m.BacklogLength
	}
	return 0
}

func (m *Statistics) GetTotalPeers() uint64 {
	if m != nil {
		return m.TotalPeers
	}
	return 0
}

func (m *Statistics) GetGenesisTime() string {
	if m != nil {
		return m.GenesisTime
	}
	return ""
}

func (m *Statistics) GetCurrentTime() string {
	if m != nil {
		return m.CurrentTime
	}
	return ""
}

func (m *Statistics) GetVegaTime() string {
	if m != nil {
		return m.VegaTime
	}
	return ""
}

func (m *Statistics) GetStatus() ChainStatus {
	if m != nil {
		return m.Status
	}
	return ChainStatus_DISCONNECTED
}

func (m *Statistics) GetTxPerBlock() uint64 {
	if m != nil {
		return m.TxPerBlock
	}
	return 0
}

func (m *Statistics) GetAverageTxBytes() uint64 {
	if m != nil {
		return m.AverageTxBytes
	}
	return 0
}

func (m *Statistics) GetAverageOrdersPerBlock() uint64 {
	if m != nil {
		return m.AverageOrdersPerBlock
	}
	return 0
}

func (m *Statistics) GetTradesPerSecond() uint64 {
	if m != nil {
		return m.TradesPerSecond
	}
	return 0
}

func (m *Statistics) GetOrdersPerSecond() uint64 {
	if m != nil {
		return m.OrdersPerSecond
	}
	return 0
}

func (m *Statistics) GetTotalMarkets() uint64 {
	if m != nil {
		return m.TotalMarkets
	}
	return 0
}

func (m *Statistics) GetTotalParties() uint64 {
	if m != nil {
		return m.TotalParties
	}
	return 0
}

func (m *Statistics) GetAppVersionHash() string {
	if m != nil {
		return m.AppVersionHash
	}
	return ""
}

func (m *Statistics) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Statistics) GetParties() []string {
	if m != nil {
		return m.Parties
	}
	return nil
}

type Amendment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Party                string   `protobuf:"bytes,2,opt,name=party,proto3" json:"party,omitempty"`
	Price                uint64   `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ExpirationDatetime   string   `protobuf:"bytes,5,opt,name=expirationDatetime,proto3" json:"expirationDatetime,omitempty"`
	ExpirationTimestamp  uint64   `protobuf:"varint,6,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Amendment) Reset()         { *m = Amendment{} }
func (m *Amendment) String() string { return proto.CompactTextString(m) }
func (*Amendment) ProtoMessage()    {}
func (*Amendment) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_9952cf7d2d500a7f, []int{14}
}
func (m *Amendment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Amendment.Unmarshal(m, b)
}
func (m *Amendment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Amendment.Marshal(b, m, deterministic)
}
func (dst *Amendment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Amendment.Merge(dst, src)
}
func (m *Amendment) XXX_Size() int {
	return xxx_messageInfo_Amendment.Size(m)
}
func (m *Amendment) XXX_DiscardUnknown() {
	xxx_messageInfo_Amendment.DiscardUnknown(m)
}

var xxx_messageInfo_Amendment proto.InternalMessageInfo

func (m *Amendment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Amendment) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Amendment) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Amendment) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Amendment) GetExpirationDatetime() string {
	if m != nil {
		return m.ExpirationDatetime
	}
	return ""
}

func (m *Amendment) GetExpirationTimestamp() uint64 {
	if m != nil {
		return m.ExpirationTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Market)(nil), "vega.Market")
	proto.RegisterType((*Party)(nil), "vega.Party")
	proto.RegisterType((*RiskFactor)(nil), "vega.RiskFactor")
	proto.RegisterType((*Order)(nil), "vega.Order")
	proto.RegisterType((*OrderCancellation)(nil), "vega.OrderCancellation")
	proto.RegisterType((*OrderConfirmation)(nil), "vega.OrderConfirmation")
	proto.RegisterType((*Trade)(nil), "vega.Trade")
	proto.RegisterType((*TradeSet)(nil), "vega.TradeSet")
	proto.RegisterType((*MarketData)(nil), "vega.MarketData")
	proto.RegisterType((*Candle)(nil), "vega.Candle")
	proto.RegisterType((*PriceLevel)(nil), "vega.PriceLevel")
	proto.RegisterType((*MarketDepth)(nil), "vega.MarketDepth")
	proto.RegisterType((*MarketPosition)(nil), "vega.MarketPosition")
	proto.RegisterType((*Statistics)(nil), "vega.Statistics")
	proto.RegisterType((*Amendment)(nil), "vega.Amendment")
	proto.RegisterEnum("vega.Side", Side_name, Side_value)
	proto.RegisterEnum("vega.Interval", Interval_name, Interval_value)
	proto.RegisterEnum("vega.OrderError", OrderError_name, OrderError_value)
	proto.RegisterEnum("vega.ChainStatus", ChainStatus_name, ChainStatus_value)
	proto.RegisterEnum("vega.Order_Type", Order_Type_name, Order_Type_value)
	proto.RegisterEnum("vega.Order_Status", Order_Status_name, Order_Status_value)
}

func init() { proto.RegisterFile("proto/vega.proto", fileDescriptor_vega_9952cf7d2d500a7f) }

var fileDescriptor_vega_9952cf7d2d500a7f = []byte{
	// 1519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xcf, 0x72, 0x1a, 0xcd,
	0x11, 0xd7, 0xb2, 0x0b, 0x82, 0xc6, 0x96, 0x57, 0x63, 0xe9, 0xf3, 0xfa, 0x4f, 0x39, 0xca, 0xc6,
	0xe5, 0x22, 0xaa, 0x94, 0x1c, 0x2b, 0xb1, 0x6f, 0x39, 0x20, 0xb1, 0xb2, 0xb6, 0x0c, 0x0b, 0x19,
	0x90, 0x92, 0xf8, 0x42, 0x2d, 0xec, 0x08, 0xb6, 0xb4, 0xec, 0x52, 0xb3, 0x0b, 0x31, 0x79, 0x83,
	0x5c, 0x72, 0xca, 0x21, 0xa7, 0xdc, 0xf3, 0x10, 0x79, 0x8d, 0xbc, 0x4c, 0x2e, 0x5f, 0xf5, 0xcc,
	0x00, 0x0b, 0xc2, 0x55, 0xf6, 0x89, 0xe9, 0x5f, 0xf7, 0xf4, 0x74, 0xf7, 0xfe, 0xba, 0x67, 0x00,
	0x73, 0xca, 0x93, 0x2c, 0x79, 0x37, 0x67, 0x23, 0xff, 0x4c, 0x2c, 0x89, 0x81, 0x6b, 0xfb, 0x15,
	0x94, 0x5a, 0x3e, 0xbf, 0x67, 0x19, 0x21, 0x60, 0xc4, 0xfe, 0x84, 0x59, 0xda, 0x89, 0x56, 0xab,
	0x50, 0xb1, 0xb6, 0xdb, 0x50, 0xec, 0xf8, 0x3c, 0x5b, 0xec, 0x52, 0x92, 0x73, 0xa8, 0x4c, 0x93,
	0x34, 0xcc, 0xc2, 0x24, 0x4e, 0xad, 0xc2, 0x89, 0x5e, 0xab, 0x9e, 0x1f, 0x9d, 0x89, 0x03, 0xa4,
	0xc7, 0x8e, 0x52, 0xd2, 0xb5, 0x99, 0xed, 0x01, 0xd0, 0x30, 0xbd, 0xbf, 0xf2, 0x87, 0x59, 0xc2,
	0xc9, 0x4f, 0x50, 0x9a, 0x08, 0x53, 0xe5, 0x57, 0x49, 0xe4, 0x08, 0x8a, 0xe9, 0x38, 0xe1, 0x99,
	0x55, 0x38, 0xd1, 0x6a, 0x1a, 0x95, 0x02, 0xc6, 0x10, 0x25, 0xf1, 0xc8, 0xd2, 0x05, 0x28, 0xd6,
	0xf6, 0x3f, 0x0d, 0x28, 0xb6, 0x79, 0xc0, 0x38, 0x39, 0x80, 0x42, 0x18, 0x28, 0x3f, 0x85, 0x30,
	0xc8, 0xf9, 0x2e, 0x6c, 0xfb, 0x9e, 0x62, 0x4a, 0xc2, 0x4d, 0x85, 0x4a, 0x81, 0xbc, 0x06, 0x23,
	0x0d, 0x03, 0x66, 0x19, 0x27, 0x5a, 0xed, 0xe0, 0x1c, 0x64, 0x1a, 0xdd, 0x30, 0x60, 0x54, 0xe0,
	0x62, 0x17, 0x0f, 0x87, 0xcc, 0x2a, 0x9e, 0x68, 0x35, 0x83, 0x4a, 0x01, 0x23, 0x4a, 0xc3, 0xbf,
	0x31, 0xab, 0x24, 0x40, 0xb1, 0x26, 0xaf, 0xa0, 0xc2, 0xd9, 0xc4, 0x0f, 0xe3, 0x30, 0x1e, 0x59,
	0xfb, 0x42, 0xb1, 0x06, 0xc8, 0x1b, 0x30, 0xb2, 0xc5, 0x94, 0x59, 0x65, 0x71, 0x8e, 0x29, 0xcf,
	0x11, 0x09, 0x9c, 0xf5, 0x16, 0x53, 0x46, 0x85, 0x16, 0x7d, 0x64, 0xe1, 0x84, 0xa5, 0x99, 0x3f,
	0x99, 0x5a, 0x15, 0xe9, 0x63, 0x05, 0x90, 0x53, 0x28, 0xa5, 0x99, 0x9f, 0xcd, 0x52, 0x0b, 0x84,
	0x17, 0x92, 0xf7, 0xd2, 0x15, 0x1a, 0xaa, 0x2c, 0xc8, 0x19, 0x10, 0xf6, 0x75, 0x1a, 0x72, 0x1f,
	0xcb, 0xdf, 0xf0, 0x33, 0x86, 0x6e, 0xac, 0xaa, 0x48, 0x7d, 0x87, 0x86, 0xfc, 0x16, 0x9e, 0xae,
	0xd1, 0xde, 0x2a, 0x86, 0x47, 0x22, 0x86, 0x5d, 0x2a, 0x99, 0xef, 0x1d, 0xe3, 0x2c, 0x1e, 0x32,
	0xeb, 0xb1, 0x70, 0xbc, 0x06, 0xec, 0x53, 0x30, 0x30, 0x2f, 0xb2, 0x0f, 0xfa, 0xa7, 0xde, 0xa5,
	0xb9, 0x27, 0x17, 0x3d, 0x53, 0xc3, 0x85, 0xe3, 0x39, 0x66, 0x01, 0x17, 0x57, 0xed, 0xcf, 0xa6,
	0x6e, 0xbb, 0x50, 0x92, 0xd1, 0x13, 0x80, 0x52, 0x7d, 0x98, 0x85, 0x73, 0x66, 0xee, 0x91, 0x2a,
	0xec, 0x3b, 0x78, 0x2c, 0x0b, 0x4c, 0x8d, 0x3c, 0x86, 0xca, 0xa5, 0x1f, 0x0f, 0x59, 0x14, 0xb1,
	0xc0, 0x2c, 0xa0, 0xae, 0x9b, 0x25, 0xd3, 0x29, 0x0b, 0x4c, 0x1d, 0x37, 0x5d, 0x85, 0x42, 0x61,
	0xd8, 0x1f, 0xe1, 0x50, 0x94, 0x43, 0x19, 0x8b, 0x90, 0xc9, 0x2f, 0xa1, 0x98, 0x20, 0x28, 0x48,
	0x52, 0x3d, 0xaf, 0xe6, 0xca, 0x46, 0xa5, 0xc6, 0xfe, 0xb7, 0xb6, 0xdc, 0x98, 0xc4, 0x77, 0x21,
	0x9f, 0x7c, 0xef, 0x46, 0xf2, 0x2b, 0x28, 0x65, 0xdc, 0x0f, 0xd8, 0xb2, 0x11, 0x94, 0x4d, 0x0f,
	0x31, 0xaa, 0x54, 0xa4, 0x0e, 0xc7, 0x53, 0x3f, 0x4d, 0xc3, 0x39, 0x13, 0x7b, 0xd3, 0xfa, 0xdd,
	0x1d, 0x1b, 0x66, 0x2c, 0xb0, 0xf4, 0xfc, 0x1e, 0xe9, 0x77, 0xb7, 0xa5, 0xfd, 0xf7, 0x02, 0x14,
	0x85, 0xd3, 0x1f, 0xe2, 0xbb, 0x60, 0xae, 0xbe, 0x8b, 0xb9, 0x46, 0x8e, 0xb9, 0x47, 0x50, 0x1c,
	0xcc, 0x16, 0x8c, 0x0b, 0x8e, 0x57, 0xa8, 0x14, 0xd0, 0x6f, 0x8a, 0xf5, 0xe6, 0x82, 0xe5, 0x15,
	0xaa, 0x24, 0x52, 0x83, 0x8a, 0x3f, 0x1a, 0x71, 0x96, 0xa6, 0x09, 0x17, 0x3c, 0xdf, 0x6c, 0x9b,
	0xb5, 0x92, 0xbc, 0x80, 0xf2, 0x60, 0xb6, 0x10, 0x89, 0x08, 0xde, 0x57, 0xe8, 0x4a, 0x46, 0xf6,
	0xa0, 0x3f, 0xa9, 0xac, 0x48, 0xf6, 0xac, 0x80, 0xcd, 0x3e, 0x80, 0xad, 0x3e, 0xb0, 0xdf, 0x41,
	0x59, 0x94, 0xa2, 0xcb, 0xb2, 0x5c, 0xfd, 0xb5, 0x6f, 0xd6, 0xdf, 0x8e, 0x01, 0xe4, 0x64, 0x6a,
	0xf8, 0x99, 0x4f, 0x2c, 0xd8, 0x1f, 0xb0, 0x34, 0xbb, 0x50, 0x55, 0x34, 0xe8, 0x52, 0xc4, 0x63,
	0x71, 0xd9, 0xbe, 0xbb, 0x63, 0x5c, 0x54, 0xd3, 0xa0, 0x6b, 0x80, 0xd4, 0xe0, 0x49, 0xe4, 0xa7,
	0x99, 0x70, 0x1d, 0x74, 0x72, 0xa5, 0xdd, 0x86, 0xed, 0xff, 0x69, 0x50, 0xba, 0xf4, 0xe3, 0x20,
	0xda, 0xea, 0x68, 0x6d, 0xbb, 0xa3, 0x5f, 0x40, 0x39, 0x58, 0xf6, 0xa6, 0xfc, 0x7a, 0x2b, 0x19,
	0xbf, 0xd4, 0x38, 0x1c, 0x8d, 0xd5, 0x19, 0x62, 0x4d, 0x4c, 0xd0, 0xa3, 0xe4, 0xaf, 0xea, 0xe3,
	0xe1, 0x12, 0xad, 0x92, 0x29, 0x8b, 0xd5, 0x78, 0x12, 0x6b, 0xfc, 0x9e, 0xc3, 0x28, 0x49, 0x97,
	0xe3, 0x49, 0x0a, 0xf8, 0x3d, 0xe7, 0x49, 0x34, 0x9b, 0x30, 0x35, 0x9c, 0x94, 0x44, 0x4e, 0xa1,
	0x1c, 0xc6, 0x19, 0xe3, 0x73, 0x3f, 0x52, 0xd3, 0xe9, 0x40, 0xd6, 0xd0, 0x55, 0x28, 0x5d, 0xe9,
	0xed, 0x7f, 0x68, 0x00, 0x22, 0xc5, 0x26, 0x9b, 0xb3, 0x68, 0x4d, 0x31, 0x2d, 0x4f, 0xb1, 0xb7,
	0x70, 0x10, 0xcf, 0x26, 0x03, 0xc6, 0xdb, 0x77, 0x92, 0xc4, 0xaa, 0x94, 0x5b, 0x68, 0x2e, 0x20,
	0x7d, 0x2b, 0x20, 0x73, 0x38, 0x9b, 0xcc, 0xb0, 0x79, 0xe7, 0xec, 0x56, 0x5a, 0xc8, 0x8c, 0x1f,
	0xe0, 0xf6, 0x3d, 0x54, 0xd5, 0x97, 0x65, 0xd3, 0x6c, 0xbc, 0xf3, 0xb6, 0xb2, 0x41, 0x1f, 0xcc,
	0x16, 0xaa, 0x3d, 0xd5, 0xe0, 0x5d, 0xe7, 0x40, 0x51, 0x89, 0xd3, 0x19, 0xc9, 0xa7, 0xfa, 0xf1,
	0xa1, 0x91, 0xd0, 0xda, 0xff, 0x2a, 0xc0, 0xc1, 0xe6, 0x0d, 0xf7, 0xcd, 0x8b, 0xec, 0x2d, 0x1c,
	0x70, 0xe6, 0x47, 0x61, 0xca, 0x02, 0x95, 0x01, 0xd6, 0x40, 0xa7, 0x5b, 0x28, 0x39, 0x81, 0xea,
	0x12, 0xe9, 0x78, 0x4d, 0x51, 0x08, 0x9d, 0xe6, 0x21, 0xac, 0xc6, 0x2c, 0xde, 0xf2, 0x65, 0x08,
	0xb3, 0x07, 0x38, 0x79, 0x03, 0x8f, 0xd7, 0x18, 0xfa, 0x2b, 0x0a, 0xc3, 0x4d, 0x90, 0xfc, 0x06,
	0x0e, 0xfd, 0x39, 0xe3, 0xfe, 0x88, 0x39, 0x71, 0xc6, 0x17, 0x92, 0xc9, 0x92, 0x2a, 0x0f, 0x15,
	0xe8, 0x73, 0x12, 0xc6, 0xe1, 0x64, 0x36, 0x69, 0xf9, 0x7c, 0x14, 0xc6, 0x82, 0x3d, 0x3a, 0xdd,
	0x04, 0xed, 0xff, 0x1b, 0x00, 0x38, 0xc3, 0xc3, 0x34, 0x0b, 0x87, 0x29, 0xa6, 0x35, 0x88, 0x92,
	0xe1, 0xfd, 0x35, 0x0b, 0x47, 0xe3, 0x4c, 0xd1, 0x23, 0x0f, 0xa1, 0xdb, 0x81, 0x3f, 0xbc, 0x8f,
	0x92, 0x51, 0x93, 0xc5, 0xa3, 0x6c, 0xac, 0x38, 0xb2, 0x09, 0x92, 0xd7, 0x00, 0x59, 0x92, 0xf9,
	0x51, 0x87, 0x21, 0x8d, 0x24, 0x4d, 0x72, 0x08, 0x9e, 0x33, 0x62, 0x31, 0x4b, 0xc3, 0x14, 0xef,
	0x25, 0x51, 0x97, 0x0a, 0xcd, 0x43, 0x68, 0x31, 0x9c, 0x71, 0xce, 0xe2, 0x4c, 0x58, 0xc8, 0x09,
	0x97, 0x87, 0xb0, 0x07, 0xf1, 0x73, 0x0b, 0xb5, 0x9c, 0x74, 0x2b, 0x99, 0xfc, 0x7a, 0x75, 0xe3,
	0xca, 0x41, 0x77, 0x28, 0x99, 0x71, 0x39, 0xf6, 0xc3, 0x78, 0xeb, 0xc2, 0xc5, 0x50, 0xbf, 0x76,
	0x18, 0xbf, 0xc0, 0x24, 0x45, 0x23, 0x61, 0xa8, 0x2b, 0x04, 0x19, 0xa1, 0x8a, 0xdb, 0xfb, 0x7a,
	0xb1, 0xc8, 0x58, 0xaa, 0xee, 0xf7, 0x2d, 0x94, 0xfc, 0x1e, 0x8e, 0x15, 0x22, 0xdb, 0x64, 0xe5,
	0x52, 0x8e, 0xc1, 0xdd, 0x4a, 0x9c, 0x4d, 0x72, 0xd6, 0x75, 0x18, 0xef, 0xb2, 0x61, 0x12, 0x07,
	0xe2, 0xae, 0x37, 0xe8, 0x36, 0x8c, 0x96, 0xc9, 0x72, 0xaf, 0xb2, 0x94, 0x97, 0xfc, 0x36, 0x4c,
	0x6c, 0x78, 0x24, 0x4a, 0x2d, 0x29, 0x9f, 0x8a, 0x3b, 0xde, 0xa0, 0x1b, 0xd8, 0xca, 0x06, 0x1f,
	0x8b, 0x21, 0x4b, 0xad, 0x83, 0x9c, 0x8d, 0xc2, 0x44, 0xe6, 0xd3, 0xe9, 0x2d, 0xe3, 0x69, 0x98,
	0xc4, 0xd7, 0x7e, 0x3a, 0xb6, 0x9e, 0x88, 0x32, 0x6f, 0xa1, 0x58, 0xc1, 0x35, 0x62, 0x99, 0xc2,
	0x26, 0x87, 0xe0, 0xdc, 0x5e, 0x1e, 0x73, 0x78, 0xa2, 0xd7, 0x2a, 0x74, 0x29, 0xda, 0xff, 0xd5,
	0xa0, 0x52, 0x9f, 0xb0, 0x38, 0x98, 0xb0, 0x38, 0x7b, 0x70, 0x41, 0xae, 0x1e, 0x7e, 0x85, 0xfc,
	0xc3, 0xef, 0xfb, 0xaf, 0xc7, 0xdd, 0x4f, 0xa9, 0xe2, 0x8f, 0x3e, 0xa5, 0x4a, 0xdf, 0x7c, 0x4a,
	0x9d, 0x3e, 0x07, 0x03, 0xef, 0x4e, 0x7c, 0x11, 0x5d, 0xcc, 0x16, 0xe6, 0x1e, 0x29, 0x83, 0xd1,
	0x65, 0x51, 0x64, 0x6a, 0xa7, 0x75, 0x28, 0x2f, 0xe7, 0x30, 0xaa, 0xdd, 0xf7, 0x2d, 0xf9, 0x96,
	0x72, 0x3f, 0xb4, 0x4c, 0x0d, 0xed, 0xdc, 0xf7, 0x1f, 0x5a, 0xf2, 0x31, 0xe5, 0xbe, 0xbf, 0x36,
	0x75, 0xb1, 0xf8, 0x78, 0x6d, 0x1a, 0x12, 0x69, 0x98, 0xc5, 0xd3, 0xff, 0x14, 0x00, 0x04, 0x5d,
	0x1c, 0xce, 0x13, 0x8e, 0x7b, 0xbc, 0xb6, 0xe7, 0x98, 0x7b, 0xe4, 0x18, 0x0e, 0x5d, 0xef, 0xb6,
	0xde, 0x74, 0x1b, 0xfd, 0x56, 0x9d, 0x7e, 0x76, 0x7a, 0x7d, 0xb7, 0x61, 0x6a, 0xe4, 0x08, 0xcc,
	0x25, 0xdc, 0xa6, 0x0d, 0x87, 0x22, 0x5a, 0x20, 0xcf, 0xe1, 0x58, 0x4a, 0xed, 0x9b, 0x5e, 0xbf,
	0x7d, 0xd5, 0xef, 0x3a, 0x7f, 0xbc, 0x71, 0xbc, 0x4b, 0xc7, 0xd4, 0xc9, 0x0b, 0xf8, 0x69, 0xb9,
	0x81, 0x3a, 0xad, 0xba, 0xeb, 0xb9, 0xde, 0xa7, 0x7e, 0xd7, 0xfd, 0xe2, 0x98, 0x06, 0x31, 0xe1,
	0x51, 0xcf, 0x6d, 0x39, 0xfd, 0xab, 0xba, 0xdb, 0xbc, 0xa1, 0x8e, 0x59, 0x5c, 0x3b, 0xa2, 0x4e,
	0xab, 0x7d, 0x5b, 0x6f, 0xae, 0x54, 0x25, 0xf2, 0x0b, 0x78, 0xb9, 0x74, 0xe4, 0xfc, 0xb9, 0xe3,
	0xd2, 0x7a, 0xcf, 0x6d, 0x7b, 0xfd, 0x46, 0xbd, 0xe7, 0xa0, 0x0f, 0x73, 0x9f, 0xbc, 0x84, 0x67,
	0x9b, 0xa1, 0x51, 0xe7, 0xca, 0xa1, 0x22, 0x8c, 0x32, 0xc6, 0xed, 0x34, 0xdc, 0x5e, 0xdf, 0x6b,
	0xf7, 0xfa, 0xf5, 0x66, 0xb3, 0xfd, 0x27, 0xa7, 0x61, 0x56, 0xc8, 0x33, 0x78, 0x2a, 0x4d, 0xeb,
	0x2d, 0xc7, 0x6b, 0xac, 0x0e, 0x03, 0xf2, 0x14, 0x9e, 0x48, 0x05, 0xda, 0x5f, 0xb5, 0x6f, 0xbc,
	0x86, 0x59, 0x3d, 0xfd, 0x03, 0x54, 0x73, 0xcd, 0x8d, 0xd1, 0x37, 0xdc, 0xee, 0x65, 0xdb, 0xf3,
	0x9c, 0xcb, 0x9e, 0xd3, 0x30, 0xf7, 0xf0, 0x21, 0x4a, 0x9d, 0x4e, 0xb3, 0xfe, 0x17, 0xd7, 0xfb,
	0xa4, 0xde, 0xa5, 0x2b, 0x6d, 0xe1, 0x62, 0xff, 0x4b, 0x51, 0xfc, 0xc7, 0x1a, 0x94, 0xc4, 0xcf,
	0xef, 0x7e, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x8d, 0xc5, 0x6e, 0x7e, 0x0d, 0x00, 0x00,
}
