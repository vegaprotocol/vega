// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/chain_events.proto

package proto

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *BuiltinAssetDeposit) Validate() error {
	return nil
}
func (this *BuiltinAssetWithdrawal) Validate() error {
	return nil
}
func (this *BuiltinAssetEvent) Validate() error {
	if oneOfNester, ok := this.GetAction().(*BuiltinAssetEvent_Deposit); ok {
		if oneOfNester.Deposit != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Deposit); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Deposit", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*BuiltinAssetEvent_Withdrawal); ok {
		if oneOfNester.Withdrawal != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Withdrawal); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Withdrawal", err)
			}
		}
	}
	return nil
}
func (this *ERC20AssetList) Validate() error {
	return nil
}
func (this *ERC20AssetDelist) Validate() error {
	return nil
}
func (this *ERC20Deposit) Validate() error {
	return nil
}
func (this *ERC20Withdrawal) Validate() error {
	return nil
}
func (this *ERC20Event) Validate() error {
	if oneOfNester, ok := this.GetAction().(*ERC20Event_AssetList); ok {
		if oneOfNester.AssetList != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.AssetList); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AssetList", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*ERC20Event_AssetDelist); ok {
		if oneOfNester.AssetDelist != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.AssetDelist); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AssetDelist", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*ERC20Event_Deposit); ok {
		if oneOfNester.Deposit != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Deposit); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Deposit", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*ERC20Event_Withdrawal); ok {
		if oneOfNester.Withdrawal != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Withdrawal); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Withdrawal", err)
			}
		}
	}
	return nil
}
func (this *ETHDeposit) Validate() error {
	return nil
}
func (this *ETHWithdrawal) Validate() error {
	return nil
}
func (this *ETHEvent) Validate() error {
	if oneOfNester, ok := this.GetAction().(*ETHEvent_Deposit); ok {
		if oneOfNester.Deposit != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Deposit); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Deposit", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*ETHEvent_Withdrawal); ok {
		if oneOfNester.Withdrawal != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Withdrawal); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Withdrawal", err)
			}
		}
	}
	return nil
}
func (this *BTCDeposit) Validate() error {
	return nil
}
func (this *BTCWithdrawal) Validate() error {
	return nil
}
func (this *BTCEvent) Validate() error {
	if oneOfNester, ok := this.GetAction().(*BTCEvent_Deposit); ok {
		if oneOfNester.Deposit != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Deposit); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Deposit", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*BTCEvent_Withdrawal); ok {
		if oneOfNester.Withdrawal != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Withdrawal); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Withdrawal", err)
			}
		}
	}
	return nil
}
func (this *EthereumAddress) Validate() error {
	return nil
}
func (this *BitcoinAddress) Validate() error {
	return nil
}
func (this *Identifier) Validate() error {
	if oneOfNester, ok := this.GetIdentifier().(*Identifier_EthereumAddress); ok {
		if oneOfNester.EthereumAddress != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.EthereumAddress); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EthereumAddress", err)
			}
		}
	}
	if oneOfNester, ok := this.GetIdentifier().(*Identifier_BitcoinAddress); ok {
		if oneOfNester.BitcoinAddress != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.BitcoinAddress); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("BitcoinAddress", err)
			}
		}
	}
	return nil
}
func (this *AddValidator) Validate() error {
	if this.Id != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Id); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Id", err)
		}
	}
	return nil
}
func (this *RemoveValidator) Validate() error {
	if this.Id != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Id); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Id", err)
		}
	}
	return nil
}
func (this *ValidatorEvent) Validate() error {
	if oneOfNester, ok := this.GetAction().(*ValidatorEvent_Add); ok {
		if oneOfNester.Add != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Add); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Add", err)
			}
		}
	}
	if oneOfNester, ok := this.GetAction().(*ValidatorEvent_Rm); ok {
		if oneOfNester.Rm != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Rm); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rm", err)
			}
		}
	}
	return nil
}
func (this *ChainEvent) Validate() error {
	if oneOfNester, ok := this.GetEvent().(*ChainEvent_Builtin); ok {
		if oneOfNester.Builtin != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Builtin); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Builtin", err)
			}
		}
	}
	if oneOfNester, ok := this.GetEvent().(*ChainEvent_Erc20); ok {
		if oneOfNester.Erc20 != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Erc20); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Erc20", err)
			}
		}
	}
	if oneOfNester, ok := this.GetEvent().(*ChainEvent_Btc); ok {
		if oneOfNester.Btc != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Btc); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Btc", err)
			}
		}
	}
	if oneOfNester, ok := this.GetEvent().(*ChainEvent_Eth); ok {
		if oneOfNester.Eth != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Eth); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Eth", err)
			}
		}
	}
	if oneOfNester, ok := this.GetEvent().(*ChainEvent_Validator); ok {
		if oneOfNester.Validator != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Validator); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Validator", err)
			}
		}
	}
	return nil
}
