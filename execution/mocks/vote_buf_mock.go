// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/execution (interfaces: VoteBuf)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVoteBuf is a mock of VoteBuf interface
type MockVoteBuf struct {
	ctrl     *gomock.Controller
	recorder *MockVoteBufMockRecorder
}

// MockVoteBufMockRecorder is the mock recorder for MockVoteBuf
type MockVoteBufMockRecorder struct {
	mock *MockVoteBuf
}

// NewMockVoteBuf creates a new mock instance
func NewMockVoteBuf(ctrl *gomock.Controller) *MockVoteBuf {
	mock := &MockVoteBuf{ctrl: ctrl}
	mock.recorder = &MockVoteBufMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVoteBuf) EXPECT() *MockVoteBufMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockVoteBuf) Add(arg0 proto.Vote) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0)
}

// Add indicates an expected call of Add
func (mr *MockVoteBufMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockVoteBuf)(nil).Add), arg0)
}

// Flush mocks base method
func (m *MockVoteBuf) Flush() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Flush")
}

// Flush indicates an expected call of Flush
func (mr *MockVoteBufMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockVoteBuf)(nil).Flush))
}
