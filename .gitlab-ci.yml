---
image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13

variables:
  CGO_ENABLED: "0"
  GO111MODULE: "on"
  GOOS: linux
  GOARCH: amd64
  GOPATH: "${CI_PROJECT_DIR}/go"  # Can only cache files inside ${CI_PROJECT_DIR}
  # There's no recursive expansion of vars.
  BIN_DIR: "${CI_PROJECT_DIR}/go/bin"
  SRC_DIR: "${CI_PROJECT_DIR}/go/src"
  PKGMOD_DIR: "${CI_PROJECT_DIR}/go/pkg/mod"
  VENDOR_DIR: "${CI_PROJECT_DIR}/vendor"

cache:
  key: ${CI_COMMIT_REF_SLUG}  # one cache per branch
  paths:
    - ${PKGMOD_DIR}
    - ${VENDOR_DIR}

stages:
  - build

before_script:
  - mkdir -p "${BIN_DIR}" "${PKGMOD_DIR}" "${SRC_DIR}" "${VENDOR_DIR}"
  - for d in ${PKGMOD_DIR} ${VENDOR_DIR} ; do echo "There are $(find "$d" | wc -l) files/dirs in $d" ; done
  - find -maxdepth 1 -not -name . -and -not -name go -exec mv '{}' "${SRC_DIR}/" ';'
  - cd "${SRC_DIR}" || exit 1
  # The following git+ssh config enables accessing the quant repo.
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
  - eval "$(ssh-agent -s)" ; mkdir -p ~/.ssh ; chmod 0700 ~/.ssh
  - if ! echo "${GITLAB_DEPLOY_SSH_PRIVATE_KEY}" | grep -q "BEGIN RSA PRIVATE KEY" ; then
      echo "Need env var GITLAB_DEPLOY_SSH_PRIVATE_KEY to have an RSA private key" ; exit 1 ; fi
  - if ! echo "${GITLAB_DEPLOY_SSH_KNOWN_HOSTS}" | grep -q "^gitlab.com ssh-rsa" ; then
      echo "Need env var GITLAB_DEPLOY_SSH_KNOWN_HOSTS to have one or more host keys" ; exit 1 ; fi
  - echo "${GITLAB_DEPLOY_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa ; chmod 0600 ~/.ssh/id_rsa
  - echo "${GITLAB_DEPLOY_SSH_KNOWN_HOSTS}" >~/.ssh/known_hosts ; chmod 0644 ~/.ssh/known_hosts
  - unset GITLAB_DEPLOY_SSH_KNOWN_HOSTS GITLAB_DEPLOY_SSH_PRIVATE_KEY

after_script:
  - cd "${CI_PROJECT_DIR}" || exit 1
  - find "${SRC_DIR}" -maxdepth 1 -not -name src -exec mv '{}' ./ ';'
  - rmdir "${SRC_DIR}"
  - for d in ${PKGMOD_DIR} ${VENDOR_DIR} ; do echo "There are $(find "$d" | wc -l) files/dirs in $d" ; done
  - rm -rf ~/.ssh

build_vega:
  stage: build
  script:
    - make deps
    - make install
    - if test "$CI_COMMIT_REF_SLUG" == develop ; then make coveragehtml ; fi
  artifacts:
    paths:
      - ${BIN_DIR}
    expire_in: 2 weeks

# The majority of CI steps are in Drone. See `.drone.yml` for details.
