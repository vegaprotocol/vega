// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/blockchain/tm (interfaces: ApplicationTime)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockApplicationTime is a mock of ApplicationTime interface
type MockApplicationTime struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationTimeMockRecorder
}

// MockApplicationTimeMockRecorder is the mock recorder for MockApplicationTime
type MockApplicationTimeMockRecorder struct {
	mock *MockApplicationTime
}

// NewMockApplicationTime creates a new mock instance
func NewMockApplicationTime(ctrl *gomock.Controller) *MockApplicationTime {
	mock := &MockApplicationTime{ctrl: ctrl}
	mock.recorder = &MockApplicationTimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplicationTime) EXPECT() *MockApplicationTimeMockRecorder {
	return m.recorder
}

// SetTimeNow mocks base method
func (m *MockApplicationTime) SetTimeNow(arg0 time.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTimeNow", arg0)
}

// SetTimeNow indicates an expected call of SetTimeNow
func (mr *MockApplicationTimeMockRecorder) SetTimeNow(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTimeNow", reflect.TypeOf((*MockApplicationTime)(nil).SetTimeNow), arg0)
}
