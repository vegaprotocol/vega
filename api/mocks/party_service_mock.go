// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/api (interfaces: PartyService)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPartyService is a mock of PartyService interface
type MockPartyService struct {
	ctrl     *gomock.Controller
	recorder *MockPartyServiceMockRecorder
}

// MockPartyServiceMockRecorder is the mock recorder for MockPartyService
type MockPartyServiceMockRecorder struct {
	mock *MockPartyService
}

// NewMockPartyService creates a new mock instance
func NewMockPartyService(ctrl *gomock.Controller) *MockPartyService {
	mock := &MockPartyService{ctrl: ctrl}
	mock.recorder = &MockPartyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPartyService) EXPECT() *MockPartyServiceMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockPartyService) GetAll(arg0 context.Context) ([]*proto.Party, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]*proto.Party)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockPartyServiceMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPartyService)(nil).GetAll), arg0)
}

// GetByID mocks base method
func (m *MockPartyService) GetByID(arg0 context.Context, arg1 string) (*proto.Party, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0, arg1)
	ret0, _ := ret[0].(*proto.Party)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockPartyServiceMockRecorder) GetByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockPartyService)(nil).GetByID), arg0, arg1)
}
