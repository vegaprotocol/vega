// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/datanode/api (interfaces: EpochService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	vega "code.vegaprotocol.io/vega/protos/vega"
	gomock "github.com/golang/mock/gomock"
)

// MockEpochService is a mock of EpochService interface.
type MockEpochService struct {
	ctrl     *gomock.Controller
	recorder *MockEpochServiceMockRecorder
}

// MockEpochServiceMockRecorder is the mock recorder for MockEpochService.
type MockEpochServiceMockRecorder struct {
	mock *MockEpochService
}

// NewMockEpochService creates a new mock instance.
func NewMockEpochService(ctrl *gomock.Controller) *MockEpochService {
	mock := &MockEpochService{ctrl: ctrl}
	mock.recorder = &MockEpochServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEpochService) EXPECT() *MockEpochServiceMockRecorder {
	return m.recorder
}

// GetEpoch mocks base method.
func (m *MockEpochService) GetEpoch(arg0 context.Context) (*vega.Epoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpoch", arg0)
	ret0, _ := ret[0].(*vega.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEpoch indicates an expected call of GetEpoch.
func (mr *MockEpochServiceMockRecorder) GetEpoch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpoch", reflect.TypeOf((*MockEpochService)(nil).GetEpoch), arg0)
}

// GetEpochByID mocks base method.
func (m *MockEpochService) GetEpochByID(arg0 context.Context, arg1 string) (*vega.Epoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochByID", arg0, arg1)
	ret0, _ := ret[0].(*vega.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEpochByID indicates an expected call of GetEpochByID.
func (mr *MockEpochServiceMockRecorder) GetEpochByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochByID", reflect.TypeOf((*MockEpochService)(nil).GetEpochByID), arg0, arg1)
}
