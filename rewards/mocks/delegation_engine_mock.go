// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/rewards (interfaces: Delegation)

// Package mocks is a generated GoMock package.
package mocks

import (
	types "code.vegaprotocol.io/vega/types"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDelegation is a mock of Delegation interface
type MockDelegation struct {
	ctrl     *gomock.Controller
	recorder *MockDelegationMockRecorder
}

// MockDelegationMockRecorder is the mock recorder for MockDelegation
type MockDelegationMockRecorder struct {
	mock *MockDelegation
}

// NewMockDelegation creates a new mock instance
func NewMockDelegation(ctrl *gomock.Controller) *MockDelegation {
	mock := &MockDelegation{ctrl: ctrl}
	mock.recorder = &MockDelegationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDelegation) EXPECT() *MockDelegationMockRecorder {
	return m.recorder
}

// GetValidatorData mocks base method
func (m *MockDelegation) GetValidatorData() []*types.ValidatorData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidatorData")
	ret0, _ := ret[0].([]*types.ValidatorData)
	return ret0
}

// GetValidatorData indicates an expected call of GetValidatorData
func (mr *MockDelegationMockRecorder) GetValidatorData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidatorData", reflect.TypeOf((*MockDelegation)(nil).GetValidatorData))
}

// ProcessEpochDelegations mocks base method
func (m *MockDelegation) ProcessEpochDelegations(arg0 context.Context, arg1 types.Epoch) []*types.ValidatorData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessEpochDelegations", arg0, arg1)
	ret0, _ := ret[0].([]*types.ValidatorData)
	return ret0
}

// ProcessEpochDelegations indicates an expected call of ProcessEpochDelegations
func (mr *MockDelegationMockRecorder) ProcessEpochDelegations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessEpochDelegations", reflect.TypeOf((*MockDelegation)(nil).ProcessEpochDelegations), arg0, arg1)
}
