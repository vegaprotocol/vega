// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api/trading.proto

package api

import (
	proto1 "code.vegaprotocol.io/vega/proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request for a new event sent by the blockchain queue to be propagated into vega
type PropagateChainEventRequest struct {
	// The event
	Evt                  *proto1.ChainEvent `protobuf:"bytes,1,opt,name=evt,proto3" json:"evt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PropagateChainEventRequest) Reset()         { *m = PropagateChainEventRequest{} }
func (m *PropagateChainEventRequest) String() string { return proto.CompactTextString(m) }
func (*PropagateChainEventRequest) ProtoMessage()    {}
func (*PropagateChainEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{0}
}

func (m *PropagateChainEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropagateChainEventRequest.Unmarshal(m, b)
}
func (m *PropagateChainEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropagateChainEventRequest.Marshal(b, m, deterministic)
}
func (m *PropagateChainEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropagateChainEventRequest.Merge(m, src)
}
func (m *PropagateChainEventRequest) XXX_Size() int {
	return xxx_messageInfo_PropagateChainEventRequest.Size(m)
}
func (m *PropagateChainEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PropagateChainEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PropagateChainEventRequest proto.InternalMessageInfo

func (m *PropagateChainEventRequest) GetEvt() *proto1.ChainEvent {
	if m != nil {
		return m.Evt
	}
	return nil
}

// The response for a new event sent to vega
type PropagateChainEventResponse struct {
	// Did the event get accepted by the node successfully
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropagateChainEventResponse) Reset()         { *m = PropagateChainEventResponse{} }
func (m *PropagateChainEventResponse) String() string { return proto.CompactTextString(m) }
func (*PropagateChainEventResponse) ProtoMessage()    {}
func (*PropagateChainEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{1}
}

func (m *PropagateChainEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropagateChainEventResponse.Unmarshal(m, b)
}
func (m *PropagateChainEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropagateChainEventResponse.Marshal(b, m, deterministic)
}
func (m *PropagateChainEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropagateChainEventResponse.Merge(m, src)
}
func (m *PropagateChainEventResponse) XXX_Size() int {
	return xxx_messageInfo_PropagateChainEventResponse.Size(m)
}
func (m *PropagateChainEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PropagateChainEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PropagateChainEventResponse proto.InternalMessageInfo

func (m *PropagateChainEventResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type SubmitTransactionRequest struct {
	Tx                   *proto1.SignedBundle `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{2}
}

func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(m, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetTx() *proto1.SignedBundle {
	if m != nil {
		return m.Tx
	}
	return nil
}

type SubmitTransactionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionResponse) Reset()         { *m = SubmitTransactionResponse{} }
func (m *SubmitTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse) ProtoMessage()    {}
func (*SubmitTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{3}
}

func (m *SubmitTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse.Merge(m, src)
}
func (m *SubmitTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse.Size(m)
}
func (m *SubmitTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse proto.InternalMessageInfo

func (m *SubmitTransactionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type WithdrawRequest struct {
	Withdraw             *proto1.Withdraw `protobuf:"bytes,1,opt,name=withdraw,proto3" json:"withdraw,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WithdrawRequest) Reset()         { *m = WithdrawRequest{} }
func (m *WithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawRequest) ProtoMessage()    {}
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{4}
}

func (m *WithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawRequest.Unmarshal(m, b)
}
func (m *WithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawRequest.Merge(m, src)
}
func (m *WithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawRequest.Size(m)
}
func (m *WithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawRequest proto.InternalMessageInfo

func (m *WithdrawRequest) GetWithdraw() *proto1.Withdraw {
	if m != nil {
		return m.Withdraw
	}
	return nil
}

type WithdrawResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawResponse) Reset()         { *m = WithdrawResponse{} }
func (m *WithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawResponse) ProtoMessage()    {}
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{5}
}

func (m *WithdrawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawResponse.Unmarshal(m, b)
}
func (m *WithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawResponse.Marshal(b, m, deterministic)
}
func (m *WithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawResponse.Merge(m, src)
}
func (m *WithdrawResponse) XXX_Size() int {
	return xxx_messageInfo_WithdrawResponse.Size(m)
}
func (m *WithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawResponse proto.InternalMessageInfo

func (m *WithdrawResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type NotifyTraderAccountRequest struct {
	Notif                *proto1.NotifyTraderAccount `protobuf:"bytes,1,opt,name=notif,proto3" json:"notif,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NotifyTraderAccountRequest) Reset()         { *m = NotifyTraderAccountRequest{} }
func (m *NotifyTraderAccountRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyTraderAccountRequest) ProtoMessage()    {}
func (*NotifyTraderAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{6}
}

func (m *NotifyTraderAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTraderAccountRequest.Unmarshal(m, b)
}
func (m *NotifyTraderAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTraderAccountRequest.Marshal(b, m, deterministic)
}
func (m *NotifyTraderAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTraderAccountRequest.Merge(m, src)
}
func (m *NotifyTraderAccountRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyTraderAccountRequest.Size(m)
}
func (m *NotifyTraderAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTraderAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTraderAccountRequest proto.InternalMessageInfo

func (m *NotifyTraderAccountRequest) GetNotif() *proto1.NotifyTraderAccount {
	if m != nil {
		return m.Notif
	}
	return nil
}

type NotifyTraderAccountResponse struct {
	Submitted            bool     `protobuf:"varint,1,opt,name=submitted,proto3" json:"submitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyTraderAccountResponse) Reset()         { *m = NotifyTraderAccountResponse{} }
func (m *NotifyTraderAccountResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyTraderAccountResponse) ProtoMessage()    {}
func (*NotifyTraderAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{7}
}

func (m *NotifyTraderAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTraderAccountResponse.Unmarshal(m, b)
}
func (m *NotifyTraderAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTraderAccountResponse.Marshal(b, m, deterministic)
}
func (m *NotifyTraderAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTraderAccountResponse.Merge(m, src)
}
func (m *NotifyTraderAccountResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyTraderAccountResponse.Size(m)
}
func (m *NotifyTraderAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTraderAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTraderAccountResponse proto.InternalMessageInfo

func (m *NotifyTraderAccountResponse) GetSubmitted() bool {
	if m != nil {
		return m.Submitted
	}
	return false
}

type PrepareSubmitOrderResponse struct {
	Blob                 []byte   `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	SubmitID             string   `protobuf:"bytes,2,opt,name=submitID,proto3" json:"submitID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareSubmitOrderResponse) Reset()         { *m = PrepareSubmitOrderResponse{} }
func (m *PrepareSubmitOrderResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareSubmitOrderResponse) ProtoMessage()    {}
func (*PrepareSubmitOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{8}
}

func (m *PrepareSubmitOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareSubmitOrderResponse.Unmarshal(m, b)
}
func (m *PrepareSubmitOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareSubmitOrderResponse.Marshal(b, m, deterministic)
}
func (m *PrepareSubmitOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareSubmitOrderResponse.Merge(m, src)
}
func (m *PrepareSubmitOrderResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareSubmitOrderResponse.Size(m)
}
func (m *PrepareSubmitOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareSubmitOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareSubmitOrderResponse proto.InternalMessageInfo

func (m *PrepareSubmitOrderResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *PrepareSubmitOrderResponse) GetSubmitID() string {
	if m != nil {
		return m.SubmitID
	}
	return ""
}

type PrepareCancelOrderResponse struct {
	Blob                 []byte   `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareCancelOrderResponse) Reset()         { *m = PrepareCancelOrderResponse{} }
func (m *PrepareCancelOrderResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareCancelOrderResponse) ProtoMessage()    {}
func (*PrepareCancelOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{9}
}

func (m *PrepareCancelOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareCancelOrderResponse.Unmarshal(m, b)
}
func (m *PrepareCancelOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareCancelOrderResponse.Marshal(b, m, deterministic)
}
func (m *PrepareCancelOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareCancelOrderResponse.Merge(m, src)
}
func (m *PrepareCancelOrderResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareCancelOrderResponse.Size(m)
}
func (m *PrepareCancelOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareCancelOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareCancelOrderResponse proto.InternalMessageInfo

func (m *PrepareCancelOrderResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type PrepareAmendOrderResponse struct {
	Blob                 []byte   `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareAmendOrderResponse) Reset()         { *m = PrepareAmendOrderResponse{} }
func (m *PrepareAmendOrderResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareAmendOrderResponse) ProtoMessage()    {}
func (*PrepareAmendOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{10}
}

func (m *PrepareAmendOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareAmendOrderResponse.Unmarshal(m, b)
}
func (m *PrepareAmendOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareAmendOrderResponse.Marshal(b, m, deterministic)
}
func (m *PrepareAmendOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareAmendOrderResponse.Merge(m, src)
}
func (m *PrepareAmendOrderResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareAmendOrderResponse.Size(m)
}
func (m *PrepareAmendOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareAmendOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareAmendOrderResponse proto.InternalMessageInfo

func (m *PrepareAmendOrderResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type SubmitOrderRequest struct {
	// the bulk of the Order, including market, party, price, size, side, time in force, etc.
	Submission           *proto1.OrderSubmission `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SubmitOrderRequest) Reset()         { *m = SubmitOrderRequest{} }
func (m *SubmitOrderRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitOrderRequest) ProtoMessage()    {}
func (*SubmitOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{11}
}

func (m *SubmitOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitOrderRequest.Unmarshal(m, b)
}
func (m *SubmitOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitOrderRequest.Marshal(b, m, deterministic)
}
func (m *SubmitOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitOrderRequest.Merge(m, src)
}
func (m *SubmitOrderRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitOrderRequest.Size(m)
}
func (m *SubmitOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitOrderRequest proto.InternalMessageInfo

func (m *SubmitOrderRequest) GetSubmission() *proto1.OrderSubmission {
	if m != nil {
		return m.Submission
	}
	return nil
}

type CancelOrderRequest struct {
	Cancellation         *proto1.OrderCancellation `protobuf:"bytes,1,opt,name=cancellation,proto3" json:"cancellation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CancelOrderRequest) Reset()         { *m = CancelOrderRequest{} }
func (m *CancelOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CancelOrderRequest) ProtoMessage()    {}
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{12}
}

func (m *CancelOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrderRequest.Unmarshal(m, b)
}
func (m *CancelOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrderRequest.Marshal(b, m, deterministic)
}
func (m *CancelOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrderRequest.Merge(m, src)
}
func (m *CancelOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CancelOrderRequest.Size(m)
}
func (m *CancelOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrderRequest proto.InternalMessageInfo

func (m *CancelOrderRequest) GetCancellation() *proto1.OrderCancellation {
	if m != nil {
		return m.Cancellation
	}
	return nil
}

type AmendOrderRequest struct {
	Amendment            *proto1.OrderAmendment `protobuf:"bytes,1,opt,name=amendment,proto3" json:"amendment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AmendOrderRequest) Reset()         { *m = AmendOrderRequest{} }
func (m *AmendOrderRequest) String() string { return proto.CompactTextString(m) }
func (*AmendOrderRequest) ProtoMessage()    {}
func (*AmendOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{13}
}

func (m *AmendOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AmendOrderRequest.Unmarshal(m, b)
}
func (m *AmendOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AmendOrderRequest.Marshal(b, m, deterministic)
}
func (m *AmendOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AmendOrderRequest.Merge(m, src)
}
func (m *AmendOrderRequest) XXX_Size() int {
	return xxx_messageInfo_AmendOrderRequest.Size(m)
}
func (m *AmendOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AmendOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AmendOrderRequest proto.InternalMessageInfo

func (m *AmendOrderRequest) GetAmendment() *proto1.OrderAmendment {
	if m != nil {
		return m.Amendment
	}
	return nil
}

// The request message to specify the ID of the resource we want to retrieve
// the aggregated signatures for
type GetNodeSignaturesAggregateRequest struct {
	// The ID of the resource
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeSignaturesAggregateRequest) Reset()         { *m = GetNodeSignaturesAggregateRequest{} }
func (m *GetNodeSignaturesAggregateRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeSignaturesAggregateRequest) ProtoMessage()    {}
func (*GetNodeSignaturesAggregateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{14}
}

func (m *GetNodeSignaturesAggregateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeSignaturesAggregateRequest.Unmarshal(m, b)
}
func (m *GetNodeSignaturesAggregateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeSignaturesAggregateRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeSignaturesAggregateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeSignaturesAggregateRequest.Merge(m, src)
}
func (m *GetNodeSignaturesAggregateRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeSignaturesAggregateRequest.Size(m)
}
func (m *GetNodeSignaturesAggregateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeSignaturesAggregateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeSignaturesAggregateRequest proto.InternalMessageInfo

func (m *GetNodeSignaturesAggregateRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// The response of the GetNodeSIgnatureAggregate rpc
type GetNodeSignaturesAggregateResponse struct {
	// The list of signatures
	Signatures           []*proto1.NodeSignature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetNodeSignaturesAggregateResponse) Reset()         { *m = GetNodeSignaturesAggregateResponse{} }
func (m *GetNodeSignaturesAggregateResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeSignaturesAggregateResponse) ProtoMessage()    {}
func (*GetNodeSignaturesAggregateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{15}
}

func (m *GetNodeSignaturesAggregateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeSignaturesAggregateResponse.Unmarshal(m, b)
}
func (m *GetNodeSignaturesAggregateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeSignaturesAggregateResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeSignaturesAggregateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeSignaturesAggregateResponse.Merge(m, src)
}
func (m *GetNodeSignaturesAggregateResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeSignaturesAggregateResponse.Size(m)
}
func (m *GetNodeSignaturesAggregateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeSignaturesAggregateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeSignaturesAggregateResponse proto.InternalMessageInfo

func (m *GetNodeSignaturesAggregateResponse) GetSignatures() []*proto1.NodeSignature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type OptionalProposalState struct {
	Value                proto1.Proposal_State `protobuf:"varint,1,opt,name=value,proto3,enum=vega.Proposal_State" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *OptionalProposalState) Reset()         { *m = OptionalProposalState{} }
func (m *OptionalProposalState) String() string { return proto.CompactTextString(m) }
func (*OptionalProposalState) ProtoMessage()    {}
func (*OptionalProposalState) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{16}
}

func (m *OptionalProposalState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionalProposalState.Unmarshal(m, b)
}
func (m *OptionalProposalState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionalProposalState.Marshal(b, m, deterministic)
}
func (m *OptionalProposalState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionalProposalState.Merge(m, src)
}
func (m *OptionalProposalState) XXX_Size() int {
	return xxx_messageInfo_OptionalProposalState.Size(m)
}
func (m *OptionalProposalState) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionalProposalState.DiscardUnknown(m)
}

var xxx_messageInfo_OptionalProposalState proto.InternalMessageInfo

func (m *OptionalProposalState) GetValue() proto1.Proposal_State {
	if m != nil {
		return m.Value
	}
	return proto1.Proposal_STATE_UNSPECIFIED
}

type GetProposalsRequest struct {
	SelectInState        *OptionalProposalState `protobuf:"bytes,1,opt,name=selectInState,proto3" json:"selectInState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetProposalsRequest) Reset()         { *m = GetProposalsRequest{} }
func (m *GetProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*GetProposalsRequest) ProtoMessage()    {}
func (*GetProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{17}
}

func (m *GetProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalsRequest.Unmarshal(m, b)
}
func (m *GetProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalsRequest.Marshal(b, m, deterministic)
}
func (m *GetProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalsRequest.Merge(m, src)
}
func (m *GetProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_GetProposalsRequest.Size(m)
}
func (m *GetProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalsRequest proto.InternalMessageInfo

func (m *GetProposalsRequest) GetSelectInState() *OptionalProposalState {
	if m != nil {
		return m.SelectInState
	}
	return nil
}

type GetProposalsResponse struct {
	Data                 []*proto1.GovernanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetProposalsResponse) Reset()         { *m = GetProposalsResponse{} }
func (m *GetProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*GetProposalsResponse) ProtoMessage()    {}
func (*GetProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{18}
}

func (m *GetProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalsResponse.Unmarshal(m, b)
}
func (m *GetProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalsResponse.Marshal(b, m, deterministic)
}
func (m *GetProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalsResponse.Merge(m, src)
}
func (m *GetProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_GetProposalsResponse.Size(m)
}
func (m *GetProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalsResponse proto.InternalMessageInfo

func (m *GetProposalsResponse) GetData() []*proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProposalsByPartyRequest struct {
	PartyID              string                 `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	SelectInState        *OptionalProposalState `protobuf:"bytes,2,opt,name=selectInState,proto3" json:"selectInState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetProposalsByPartyRequest) Reset()         { *m = GetProposalsByPartyRequest{} }
func (m *GetProposalsByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*GetProposalsByPartyRequest) ProtoMessage()    {}
func (*GetProposalsByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{19}
}

func (m *GetProposalsByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalsByPartyRequest.Unmarshal(m, b)
}
func (m *GetProposalsByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalsByPartyRequest.Marshal(b, m, deterministic)
}
func (m *GetProposalsByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalsByPartyRequest.Merge(m, src)
}
func (m *GetProposalsByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_GetProposalsByPartyRequest.Size(m)
}
func (m *GetProposalsByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalsByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalsByPartyRequest proto.InternalMessageInfo

func (m *GetProposalsByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *GetProposalsByPartyRequest) GetSelectInState() *OptionalProposalState {
	if m != nil {
		return m.SelectInState
	}
	return nil
}

type GetProposalsByPartyResponse struct {
	Data                 []*proto1.GovernanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetProposalsByPartyResponse) Reset()         { *m = GetProposalsByPartyResponse{} }
func (m *GetProposalsByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*GetProposalsByPartyResponse) ProtoMessage()    {}
func (*GetProposalsByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{20}
}

func (m *GetProposalsByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalsByPartyResponse.Unmarshal(m, b)
}
func (m *GetProposalsByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalsByPartyResponse.Marshal(b, m, deterministic)
}
func (m *GetProposalsByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalsByPartyResponse.Merge(m, src)
}
func (m *GetProposalsByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_GetProposalsByPartyResponse.Size(m)
}
func (m *GetProposalsByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalsByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalsByPartyResponse proto.InternalMessageInfo

func (m *GetProposalsByPartyResponse) GetData() []*proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetVotesByPartyRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVotesByPartyRequest) Reset()         { *m = GetVotesByPartyRequest{} }
func (m *GetVotesByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*GetVotesByPartyRequest) ProtoMessage()    {}
func (*GetVotesByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{21}
}

func (m *GetVotesByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVotesByPartyRequest.Unmarshal(m, b)
}
func (m *GetVotesByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVotesByPartyRequest.Marshal(b, m, deterministic)
}
func (m *GetVotesByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVotesByPartyRequest.Merge(m, src)
}
func (m *GetVotesByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_GetVotesByPartyRequest.Size(m)
}
func (m *GetVotesByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVotesByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVotesByPartyRequest proto.InternalMessageInfo

func (m *GetVotesByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type GetVotesByPartyResponse struct {
	Votes                []*proto1.Vote `protobuf:"bytes,1,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetVotesByPartyResponse) Reset()         { *m = GetVotesByPartyResponse{} }
func (m *GetVotesByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*GetVotesByPartyResponse) ProtoMessage()    {}
func (*GetVotesByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{22}
}

func (m *GetVotesByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVotesByPartyResponse.Unmarshal(m, b)
}
func (m *GetVotesByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVotesByPartyResponse.Marshal(b, m, deterministic)
}
func (m *GetVotesByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVotesByPartyResponse.Merge(m, src)
}
func (m *GetVotesByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_GetVotesByPartyResponse.Size(m)
}
func (m *GetVotesByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVotesByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVotesByPartyResponse proto.InternalMessageInfo

func (m *GetVotesByPartyResponse) GetVotes() []*proto1.Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

type GetNewMarketProposalsRequest struct {
	SelectInState        *OptionalProposalState `protobuf:"bytes,1,opt,name=selectInState,proto3" json:"selectInState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetNewMarketProposalsRequest) Reset()         { *m = GetNewMarketProposalsRequest{} }
func (m *GetNewMarketProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewMarketProposalsRequest) ProtoMessage()    {}
func (*GetNewMarketProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{23}
}

func (m *GetNewMarketProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewMarketProposalsRequest.Unmarshal(m, b)
}
func (m *GetNewMarketProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewMarketProposalsRequest.Marshal(b, m, deterministic)
}
func (m *GetNewMarketProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewMarketProposalsRequest.Merge(m, src)
}
func (m *GetNewMarketProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewMarketProposalsRequest.Size(m)
}
func (m *GetNewMarketProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewMarketProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewMarketProposalsRequest proto.InternalMessageInfo

func (m *GetNewMarketProposalsRequest) GetSelectInState() *OptionalProposalState {
	if m != nil {
		return m.SelectInState
	}
	return nil
}

type GetNewMarketProposalsResponse struct {
	Data                 []*proto1.GovernanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetNewMarketProposalsResponse) Reset()         { *m = GetNewMarketProposalsResponse{} }
func (m *GetNewMarketProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewMarketProposalsResponse) ProtoMessage()    {}
func (*GetNewMarketProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{24}
}

func (m *GetNewMarketProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewMarketProposalsResponse.Unmarshal(m, b)
}
func (m *GetNewMarketProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewMarketProposalsResponse.Marshal(b, m, deterministic)
}
func (m *GetNewMarketProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewMarketProposalsResponse.Merge(m, src)
}
func (m *GetNewMarketProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewMarketProposalsResponse.Size(m)
}
func (m *GetNewMarketProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewMarketProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewMarketProposalsResponse proto.InternalMessageInfo

func (m *GetNewMarketProposalsResponse) GetData() []*proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetUpdateMarketProposalsRequest struct {
	MarketID             string                 `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	SelectInState        *OptionalProposalState `protobuf:"bytes,2,opt,name=selectInState,proto3" json:"selectInState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetUpdateMarketProposalsRequest) Reset()         { *m = GetUpdateMarketProposalsRequest{} }
func (m *GetUpdateMarketProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUpdateMarketProposalsRequest) ProtoMessage()    {}
func (*GetUpdateMarketProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{25}
}

func (m *GetUpdateMarketProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdateMarketProposalsRequest.Unmarshal(m, b)
}
func (m *GetUpdateMarketProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdateMarketProposalsRequest.Marshal(b, m, deterministic)
}
func (m *GetUpdateMarketProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdateMarketProposalsRequest.Merge(m, src)
}
func (m *GetUpdateMarketProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUpdateMarketProposalsRequest.Size(m)
}
func (m *GetUpdateMarketProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdateMarketProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdateMarketProposalsRequest proto.InternalMessageInfo

func (m *GetUpdateMarketProposalsRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *GetUpdateMarketProposalsRequest) GetSelectInState() *OptionalProposalState {
	if m != nil {
		return m.SelectInState
	}
	return nil
}

type GetUpdateMarketProposalsResponse struct {
	Data                 []*proto1.GovernanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetUpdateMarketProposalsResponse) Reset()         { *m = GetUpdateMarketProposalsResponse{} }
func (m *GetUpdateMarketProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUpdateMarketProposalsResponse) ProtoMessage()    {}
func (*GetUpdateMarketProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{26}
}

func (m *GetUpdateMarketProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdateMarketProposalsResponse.Unmarshal(m, b)
}
func (m *GetUpdateMarketProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdateMarketProposalsResponse.Marshal(b, m, deterministic)
}
func (m *GetUpdateMarketProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdateMarketProposalsResponse.Merge(m, src)
}
func (m *GetUpdateMarketProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUpdateMarketProposalsResponse.Size(m)
}
func (m *GetUpdateMarketProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdateMarketProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdateMarketProposalsResponse proto.InternalMessageInfo

func (m *GetUpdateMarketProposalsResponse) GetData() []*proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetNetworkParametersProposalsRequest struct {
	SelectInState        *OptionalProposalState `protobuf:"bytes,1,opt,name=selectInState,proto3" json:"selectInState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetNetworkParametersProposalsRequest) Reset()         { *m = GetNetworkParametersProposalsRequest{} }
func (m *GetNetworkParametersProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkParametersProposalsRequest) ProtoMessage()    {}
func (*GetNetworkParametersProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{27}
}

func (m *GetNetworkParametersProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkParametersProposalsRequest.Unmarshal(m, b)
}
func (m *GetNetworkParametersProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkParametersProposalsRequest.Marshal(b, m, deterministic)
}
func (m *GetNetworkParametersProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkParametersProposalsRequest.Merge(m, src)
}
func (m *GetNetworkParametersProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkParametersProposalsRequest.Size(m)
}
func (m *GetNetworkParametersProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkParametersProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkParametersProposalsRequest proto.InternalMessageInfo

func (m *GetNetworkParametersProposalsRequest) GetSelectInState() *OptionalProposalState {
	if m != nil {
		return m.SelectInState
	}
	return nil
}

type GetNetworkParametersProposalsResponse struct {
	Data                 []*proto1.GovernanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetNetworkParametersProposalsResponse) Reset()         { *m = GetNetworkParametersProposalsResponse{} }
func (m *GetNetworkParametersProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkParametersProposalsResponse) ProtoMessage()    {}
func (*GetNetworkParametersProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{28}
}

func (m *GetNetworkParametersProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkParametersProposalsResponse.Unmarshal(m, b)
}
func (m *GetNetworkParametersProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkParametersProposalsResponse.Marshal(b, m, deterministic)
}
func (m *GetNetworkParametersProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkParametersProposalsResponse.Merge(m, src)
}
func (m *GetNetworkParametersProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkParametersProposalsResponse.Size(m)
}
func (m *GetNetworkParametersProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkParametersProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkParametersProposalsResponse proto.InternalMessageInfo

func (m *GetNetworkParametersProposalsResponse) GetData() []*proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetNewAssetProposalsRequest struct {
	SelectInState        *OptionalProposalState `protobuf:"bytes,1,opt,name=selectInState,proto3" json:"selectInState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetNewAssetProposalsRequest) Reset()         { *m = GetNewAssetProposalsRequest{} }
func (m *GetNewAssetProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewAssetProposalsRequest) ProtoMessage()    {}
func (*GetNewAssetProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{29}
}

func (m *GetNewAssetProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewAssetProposalsRequest.Unmarshal(m, b)
}
func (m *GetNewAssetProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewAssetProposalsRequest.Marshal(b, m, deterministic)
}
func (m *GetNewAssetProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewAssetProposalsRequest.Merge(m, src)
}
func (m *GetNewAssetProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewAssetProposalsRequest.Size(m)
}
func (m *GetNewAssetProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewAssetProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewAssetProposalsRequest proto.InternalMessageInfo

func (m *GetNewAssetProposalsRequest) GetSelectInState() *OptionalProposalState {
	if m != nil {
		return m.SelectInState
	}
	return nil
}

type GetNewAssetProposalsResponse struct {
	Data                 []*proto1.GovernanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetNewAssetProposalsResponse) Reset()         { *m = GetNewAssetProposalsResponse{} }
func (m *GetNewAssetProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewAssetProposalsResponse) ProtoMessage()    {}
func (*GetNewAssetProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{30}
}

func (m *GetNewAssetProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewAssetProposalsResponse.Unmarshal(m, b)
}
func (m *GetNewAssetProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewAssetProposalsResponse.Marshal(b, m, deterministic)
}
func (m *GetNewAssetProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewAssetProposalsResponse.Merge(m, src)
}
func (m *GetNewAssetProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewAssetProposalsResponse.Size(m)
}
func (m *GetNewAssetProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewAssetProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewAssetProposalsResponse proto.InternalMessageInfo

func (m *GetNewAssetProposalsResponse) GetData() []*proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProposalByIDRequest struct {
	ProposalID           string   `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposalByIDRequest) Reset()         { *m = GetProposalByIDRequest{} }
func (m *GetProposalByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetProposalByIDRequest) ProtoMessage()    {}
func (*GetProposalByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{31}
}

func (m *GetProposalByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalByIDRequest.Unmarshal(m, b)
}
func (m *GetProposalByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetProposalByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalByIDRequest.Merge(m, src)
}
func (m *GetProposalByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetProposalByIDRequest.Size(m)
}
func (m *GetProposalByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalByIDRequest proto.InternalMessageInfo

func (m *GetProposalByIDRequest) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

type GetProposalByIDResponse struct {
	Data                 *proto1.GovernanceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetProposalByIDResponse) Reset()         { *m = GetProposalByIDResponse{} }
func (m *GetProposalByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetProposalByIDResponse) ProtoMessage()    {}
func (*GetProposalByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{32}
}

func (m *GetProposalByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalByIDResponse.Unmarshal(m, b)
}
func (m *GetProposalByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalByIDResponse.Marshal(b, m, deterministic)
}
func (m *GetProposalByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalByIDResponse.Merge(m, src)
}
func (m *GetProposalByIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetProposalByIDResponse.Size(m)
}
func (m *GetProposalByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalByIDResponse proto.InternalMessageInfo

func (m *GetProposalByIDResponse) GetData() *proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProposalByReferenceRequest struct {
	Reference            string   `protobuf:"bytes,1,opt,name=Reference,proto3" json:"Reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposalByReferenceRequest) Reset()         { *m = GetProposalByReferenceRequest{} }
func (m *GetProposalByReferenceRequest) String() string { return proto.CompactTextString(m) }
func (*GetProposalByReferenceRequest) ProtoMessage()    {}
func (*GetProposalByReferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{33}
}

func (m *GetProposalByReferenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalByReferenceRequest.Unmarshal(m, b)
}
func (m *GetProposalByReferenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalByReferenceRequest.Marshal(b, m, deterministic)
}
func (m *GetProposalByReferenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalByReferenceRequest.Merge(m, src)
}
func (m *GetProposalByReferenceRequest) XXX_Size() int {
	return xxx_messageInfo_GetProposalByReferenceRequest.Size(m)
}
func (m *GetProposalByReferenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalByReferenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalByReferenceRequest proto.InternalMessageInfo

func (m *GetProposalByReferenceRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type GetProposalByReferenceResponse struct {
	Data                 *proto1.GovernanceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetProposalByReferenceResponse) Reset()         { *m = GetProposalByReferenceResponse{} }
func (m *GetProposalByReferenceResponse) String() string { return proto.CompactTextString(m) }
func (*GetProposalByReferenceResponse) ProtoMessage()    {}
func (*GetProposalByReferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{34}
}

func (m *GetProposalByReferenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalByReferenceResponse.Unmarshal(m, b)
}
func (m *GetProposalByReferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalByReferenceResponse.Marshal(b, m, deterministic)
}
func (m *GetProposalByReferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalByReferenceResponse.Merge(m, src)
}
func (m *GetProposalByReferenceResponse) XXX_Size() int {
	return xxx_messageInfo_GetProposalByReferenceResponse.Size(m)
}
func (m *GetProposalByReferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalByReferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalByReferenceResponse proto.InternalMessageInfo

func (m *GetProposalByReferenceResponse) GetData() *proto1.GovernanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ObservePartyProposalsRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObservePartyProposalsRequest) Reset()         { *m = ObservePartyProposalsRequest{} }
func (m *ObservePartyProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*ObservePartyProposalsRequest) ProtoMessage()    {}
func (*ObservePartyProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{35}
}

func (m *ObservePartyProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservePartyProposalsRequest.Unmarshal(m, b)
}
func (m *ObservePartyProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservePartyProposalsRequest.Marshal(b, m, deterministic)
}
func (m *ObservePartyProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservePartyProposalsRequest.Merge(m, src)
}
func (m *ObservePartyProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_ObservePartyProposalsRequest.Size(m)
}
func (m *ObservePartyProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservePartyProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObservePartyProposalsRequest proto.InternalMessageInfo

func (m *ObservePartyProposalsRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type ObserveProposalVotesRequest struct {
	ProposalID           string   `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObserveProposalVotesRequest) Reset()         { *m = ObserveProposalVotesRequest{} }
func (m *ObserveProposalVotesRequest) String() string { return proto.CompactTextString(m) }
func (*ObserveProposalVotesRequest) ProtoMessage()    {}
func (*ObserveProposalVotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{36}
}

func (m *ObserveProposalVotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveProposalVotesRequest.Unmarshal(m, b)
}
func (m *ObserveProposalVotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveProposalVotesRequest.Marshal(b, m, deterministic)
}
func (m *ObserveProposalVotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveProposalVotesRequest.Merge(m, src)
}
func (m *ObserveProposalVotesRequest) XXX_Size() int {
	return xxx_messageInfo_ObserveProposalVotesRequest.Size(m)
}
func (m *ObserveProposalVotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveProposalVotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveProposalVotesRequest proto.InternalMessageInfo

func (m *ObserveProposalVotesRequest) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

type ObservePartyVotesRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObservePartyVotesRequest) Reset()         { *m = ObservePartyVotesRequest{} }
func (m *ObservePartyVotesRequest) String() string { return proto.CompactTextString(m) }
func (*ObservePartyVotesRequest) ProtoMessage()    {}
func (*ObservePartyVotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{37}
}

func (m *ObservePartyVotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservePartyVotesRequest.Unmarshal(m, b)
}
func (m *ObservePartyVotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservePartyVotesRequest.Marshal(b, m, deterministic)
}
func (m *ObservePartyVotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservePartyVotesRequest.Merge(m, src)
}
func (m *ObservePartyVotesRequest) XXX_Size() int {
	return xxx_messageInfo_ObservePartyVotesRequest.Size(m)
}
func (m *ObservePartyVotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservePartyVotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObservePartyVotesRequest proto.InternalMessageInfo

func (m *ObservePartyVotesRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type MarginLevelsSubscribeRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarginLevelsSubscribeRequest) Reset()         { *m = MarginLevelsSubscribeRequest{} }
func (m *MarginLevelsSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*MarginLevelsSubscribeRequest) ProtoMessage()    {}
func (*MarginLevelsSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{38}
}

func (m *MarginLevelsSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarginLevelsSubscribeRequest.Unmarshal(m, b)
}
func (m *MarginLevelsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarginLevelsSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *MarginLevelsSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarginLevelsSubscribeRequest.Merge(m, src)
}
func (m *MarginLevelsSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_MarginLevelsSubscribeRequest.Size(m)
}
func (m *MarginLevelsSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarginLevelsSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarginLevelsSubscribeRequest proto.InternalMessageInfo

func (m *MarginLevelsSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *MarginLevelsSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type MarginLevelsRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarginLevelsRequest) Reset()         { *m = MarginLevelsRequest{} }
func (m *MarginLevelsRequest) String() string { return proto.CompactTextString(m) }
func (*MarginLevelsRequest) ProtoMessage()    {}
func (*MarginLevelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{39}
}

func (m *MarginLevelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarginLevelsRequest.Unmarshal(m, b)
}
func (m *MarginLevelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarginLevelsRequest.Marshal(b, m, deterministic)
}
func (m *MarginLevelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarginLevelsRequest.Merge(m, src)
}
func (m *MarginLevelsRequest) XXX_Size() int {
	return xxx_messageInfo_MarginLevelsRequest.Size(m)
}
func (m *MarginLevelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarginLevelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarginLevelsRequest proto.InternalMessageInfo

func (m *MarginLevelsRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *MarginLevelsRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type MarginLevelsResponse struct {
	MarginLevels         []*proto1.MarginLevels `protobuf:"bytes,1,rep,name=marginLevels,proto3" json:"marginLevels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MarginLevelsResponse) Reset()         { *m = MarginLevelsResponse{} }
func (m *MarginLevelsResponse) String() string { return proto.CompactTextString(m) }
func (*MarginLevelsResponse) ProtoMessage()    {}
func (*MarginLevelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{40}
}

func (m *MarginLevelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarginLevelsResponse.Unmarshal(m, b)
}
func (m *MarginLevelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarginLevelsResponse.Marshal(b, m, deterministic)
}
func (m *MarginLevelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarginLevelsResponse.Merge(m, src)
}
func (m *MarginLevelsResponse) XXX_Size() int {
	return xxx_messageInfo_MarginLevelsResponse.Size(m)
}
func (m *MarginLevelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarginLevelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarginLevelsResponse proto.InternalMessageInfo

func (m *MarginLevelsResponse) GetMarginLevels() []*proto1.MarginLevels {
	if m != nil {
		return m.MarginLevels
	}
	return nil
}

type MarketsDataSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketsDataSubscribeRequest) Reset()         { *m = MarketsDataSubscribeRequest{} }
func (m *MarketsDataSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*MarketsDataSubscribeRequest) ProtoMessage()    {}
func (*MarketsDataSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{41}
}

func (m *MarketsDataSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsDataSubscribeRequest.Unmarshal(m, b)
}
func (m *MarketsDataSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsDataSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *MarketsDataSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsDataSubscribeRequest.Merge(m, src)
}
func (m *MarketsDataSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_MarketsDataSubscribeRequest.Size(m)
}
func (m *MarketsDataSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsDataSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsDataSubscribeRequest proto.InternalMessageInfo

func (m *MarketsDataSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type MarketDataByIDRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataByIDRequest) Reset()         { *m = MarketDataByIDRequest{} }
func (m *MarketDataByIDRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDataByIDRequest) ProtoMessage()    {}
func (*MarketDataByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{42}
}

func (m *MarketDataByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataByIDRequest.Unmarshal(m, b)
}
func (m *MarketDataByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataByIDRequest.Marshal(b, m, deterministic)
}
func (m *MarketDataByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataByIDRequest.Merge(m, src)
}
func (m *MarketDataByIDRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDataByIDRequest.Size(m)
}
func (m *MarketDataByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataByIDRequest proto.InternalMessageInfo

func (m *MarketDataByIDRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type MarketDataByIDResponse struct {
	MarketData           *proto1.MarketData `protobuf:"bytes,1,opt,name=marketData,proto3" json:"marketData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MarketDataByIDResponse) Reset()         { *m = MarketDataByIDResponse{} }
func (m *MarketDataByIDResponse) String() string { return proto.CompactTextString(m) }
func (*MarketDataByIDResponse) ProtoMessage()    {}
func (*MarketDataByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{43}
}

func (m *MarketDataByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataByIDResponse.Unmarshal(m, b)
}
func (m *MarketDataByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataByIDResponse.Marshal(b, m, deterministic)
}
func (m *MarketDataByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataByIDResponse.Merge(m, src)
}
func (m *MarketDataByIDResponse) XXX_Size() int {
	return xxx_messageInfo_MarketDataByIDResponse.Size(m)
}
func (m *MarketDataByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataByIDResponse proto.InternalMessageInfo

func (m *MarketDataByIDResponse) GetMarketData() *proto1.MarketData {
	if m != nil {
		return m.MarketData
	}
	return nil
}

type MarketsDataResponse struct {
	MarketsData          []*proto1.MarketData `protobuf:"bytes,1,rep,name=marketsData,proto3" json:"marketsData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MarketsDataResponse) Reset()         { *m = MarketsDataResponse{} }
func (m *MarketsDataResponse) String() string { return proto.CompactTextString(m) }
func (*MarketsDataResponse) ProtoMessage()    {}
func (*MarketsDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{44}
}

func (m *MarketsDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsDataResponse.Unmarshal(m, b)
}
func (m *MarketsDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsDataResponse.Marshal(b, m, deterministic)
}
func (m *MarketsDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsDataResponse.Merge(m, src)
}
func (m *MarketsDataResponse) XXX_Size() int {
	return xxx_messageInfo_MarketsDataResponse.Size(m)
}
func (m *MarketsDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsDataResponse proto.InternalMessageInfo

func (m *MarketsDataResponse) GetMarketsData() []*proto1.MarketData {
	if m != nil {
		return m.MarketsData
	}
	return nil
}

type LastTradeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastTradeRequest) Reset()         { *m = LastTradeRequest{} }
func (m *LastTradeRequest) String() string { return proto.CompactTextString(m) }
func (*LastTradeRequest) ProtoMessage()    {}
func (*LastTradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{45}
}

func (m *LastTradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastTradeRequest.Unmarshal(m, b)
}
func (m *LastTradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastTradeRequest.Marshal(b, m, deterministic)
}
func (m *LastTradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastTradeRequest.Merge(m, src)
}
func (m *LastTradeRequest) XXX_Size() int {
	return xxx_messageInfo_LastTradeRequest.Size(m)
}
func (m *LastTradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LastTradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LastTradeRequest proto.InternalMessageInfo

func (m *LastTradeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type LastTradeResponse struct {
	Trade                *proto1.Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LastTradeResponse) Reset()         { *m = LastTradeResponse{} }
func (m *LastTradeResponse) String() string { return proto.CompactTextString(m) }
func (*LastTradeResponse) ProtoMessage()    {}
func (*LastTradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{46}
}

func (m *LastTradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastTradeResponse.Unmarshal(m, b)
}
func (m *LastTradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastTradeResponse.Marshal(b, m, deterministic)
}
func (m *LastTradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastTradeResponse.Merge(m, src)
}
func (m *LastTradeResponse) XXX_Size() int {
	return xxx_messageInfo_LastTradeResponse.Size(m)
}
func (m *LastTradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LastTradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LastTradeResponse proto.InternalMessageInfo

func (m *LastTradeResponse) GetTrade() *proto1.Trade {
	if m != nil {
		return m.Trade
	}
	return nil
}

type MarketByIDRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketByIDRequest) Reset()         { *m = MarketByIDRequest{} }
func (m *MarketByIDRequest) String() string { return proto.CompactTextString(m) }
func (*MarketByIDRequest) ProtoMessage()    {}
func (*MarketByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{47}
}

func (m *MarketByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketByIDRequest.Unmarshal(m, b)
}
func (m *MarketByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketByIDRequest.Marshal(b, m, deterministic)
}
func (m *MarketByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketByIDRequest.Merge(m, src)
}
func (m *MarketByIDRequest) XXX_Size() int {
	return xxx_messageInfo_MarketByIDRequest.Size(m)
}
func (m *MarketByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketByIDRequest proto.InternalMessageInfo

func (m *MarketByIDRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type MarketByIDResponse struct {
	Market               *proto1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MarketByIDResponse) Reset()         { *m = MarketByIDResponse{} }
func (m *MarketByIDResponse) String() string { return proto.CompactTextString(m) }
func (*MarketByIDResponse) ProtoMessage()    {}
func (*MarketByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{48}
}

func (m *MarketByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketByIDResponse.Unmarshal(m, b)
}
func (m *MarketByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketByIDResponse.Marshal(b, m, deterministic)
}
func (m *MarketByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketByIDResponse.Merge(m, src)
}
func (m *MarketByIDResponse) XXX_Size() int {
	return xxx_messageInfo_MarketByIDResponse.Size(m)
}
func (m *MarketByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketByIDResponse proto.InternalMessageInfo

func (m *MarketByIDResponse) GetMarket() *proto1.Market {
	if m != nil {
		return m.Market
	}
	return nil
}

type PartyByIDRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartyByIDRequest) Reset()         { *m = PartyByIDRequest{} }
func (m *PartyByIDRequest) String() string { return proto.CompactTextString(m) }
func (*PartyByIDRequest) ProtoMessage()    {}
func (*PartyByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{49}
}

func (m *PartyByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyByIDRequest.Unmarshal(m, b)
}
func (m *PartyByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyByIDRequest.Marshal(b, m, deterministic)
}
func (m *PartyByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyByIDRequest.Merge(m, src)
}
func (m *PartyByIDRequest) XXX_Size() int {
	return xxx_messageInfo_PartyByIDRequest.Size(m)
}
func (m *PartyByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartyByIDRequest proto.InternalMessageInfo

func (m *PartyByIDRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type PartyByIDResponse struct {
	Party                *proto1.Party `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PartyByIDResponse) Reset()         { *m = PartyByIDResponse{} }
func (m *PartyByIDResponse) String() string { return proto.CompactTextString(m) }
func (*PartyByIDResponse) ProtoMessage()    {}
func (*PartyByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{50}
}

func (m *PartyByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyByIDResponse.Unmarshal(m, b)
}
func (m *PartyByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyByIDResponse.Marshal(b, m, deterministic)
}
func (m *PartyByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyByIDResponse.Merge(m, src)
}
func (m *PartyByIDResponse) XXX_Size() int {
	return xxx_messageInfo_PartyByIDResponse.Size(m)
}
func (m *PartyByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartyByIDResponse proto.InternalMessageInfo

func (m *PartyByIDResponse) GetParty() *proto1.Party {
	if m != nil {
		return m.Party
	}
	return nil
}

type PartiesResponse struct {
	Parties              []*proto1.Party `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PartiesResponse) Reset()         { *m = PartiesResponse{} }
func (m *PartiesResponse) String() string { return proto.CompactTextString(m) }
func (*PartiesResponse) ProtoMessage()    {}
func (*PartiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{51}
}

func (m *PartiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartiesResponse.Unmarshal(m, b)
}
func (m *PartiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartiesResponse.Marshal(b, m, deterministic)
}
func (m *PartiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartiesResponse.Merge(m, src)
}
func (m *PartiesResponse) XXX_Size() int {
	return xxx_messageInfo_PartiesResponse.Size(m)
}
func (m *PartiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartiesResponse proto.InternalMessageInfo

func (m *PartiesResponse) GetParties() []*proto1.Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

type TradesByPartyRequest struct {
	PartyID              string      `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string      `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TradesByPartyRequest) Reset()         { *m = TradesByPartyRequest{} }
func (m *TradesByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByPartyRequest) ProtoMessage()    {}
func (*TradesByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{52}
}

func (m *TradesByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByPartyRequest.Unmarshal(m, b)
}
func (m *TradesByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByPartyRequest.Marshal(b, m, deterministic)
}
func (m *TradesByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByPartyRequest.Merge(m, src)
}
func (m *TradesByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByPartyRequest.Size(m)
}
func (m *TradesByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByPartyRequest proto.InternalMessageInfo

func (m *TradesByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *TradesByPartyRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesByPartyRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type TradesByPartyResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByPartyResponse) Reset()         { *m = TradesByPartyResponse{} }
func (m *TradesByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByPartyResponse) ProtoMessage()    {}
func (*TradesByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{53}
}

func (m *TradesByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByPartyResponse.Unmarshal(m, b)
}
func (m *TradesByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByPartyResponse.Marshal(b, m, deterministic)
}
func (m *TradesByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByPartyResponse.Merge(m, src)
}
func (m *TradesByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByPartyResponse.Size(m)
}
func (m *TradesByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByPartyResponse proto.InternalMessageInfo

func (m *TradesByPartyResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type TradesByOrderRequest struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradesByOrderRequest) Reset()         { *m = TradesByOrderRequest{} }
func (m *TradesByOrderRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByOrderRequest) ProtoMessage()    {}
func (*TradesByOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{54}
}

func (m *TradesByOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByOrderRequest.Unmarshal(m, b)
}
func (m *TradesByOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByOrderRequest.Marshal(b, m, deterministic)
}
func (m *TradesByOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByOrderRequest.Merge(m, src)
}
func (m *TradesByOrderRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByOrderRequest.Size(m)
}
func (m *TradesByOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByOrderRequest proto.InternalMessageInfo

func (m *TradesByOrderRequest) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

type TradesByOrderResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByOrderResponse) Reset()         { *m = TradesByOrderResponse{} }
func (m *TradesByOrderResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByOrderResponse) ProtoMessage()    {}
func (*TradesByOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{55}
}

func (m *TradesByOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByOrderResponse.Unmarshal(m, b)
}
func (m *TradesByOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByOrderResponse.Marshal(b, m, deterministic)
}
func (m *TradesByOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByOrderResponse.Merge(m, src)
}
func (m *TradesByOrderResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByOrderResponse.Size(m)
}
func (m *TradesByOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByOrderResponse proto.InternalMessageInfo

func (m *TradesByOrderResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type AccountsSubscribeRequest struct {
	MarketID             string             `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string             `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Asset                string             `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Type                 proto1.AccountType `protobuf:"varint,4,opt,name=type,proto3,enum=vega.AccountType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AccountsSubscribeRequest) Reset()         { *m = AccountsSubscribeRequest{} }
func (m *AccountsSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*AccountsSubscribeRequest) ProtoMessage()    {}
func (*AccountsSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{56}
}

func (m *AccountsSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsSubscribeRequest.Unmarshal(m, b)
}
func (m *AccountsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *AccountsSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsSubscribeRequest.Merge(m, src)
}
func (m *AccountsSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_AccountsSubscribeRequest.Size(m)
}
func (m *AccountsSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsSubscribeRequest proto.InternalMessageInfo

func (m *AccountsSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *AccountsSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *AccountsSubscribeRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *AccountsSubscribeRequest) GetType() proto1.AccountType {
	if m != nil {
		return m.Type
	}
	return proto1.AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

type OrdersSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersSubscribeRequest) Reset()         { *m = OrdersSubscribeRequest{} }
func (m *OrdersSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersSubscribeRequest) ProtoMessage()    {}
func (*OrdersSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{57}
}

func (m *OrdersSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersSubscribeRequest.Unmarshal(m, b)
}
func (m *OrdersSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *OrdersSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersSubscribeRequest.Merge(m, src)
}
func (m *OrdersSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersSubscribeRequest.Size(m)
}
func (m *OrdersSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersSubscribeRequest proto.InternalMessageInfo

func (m *OrdersSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrdersSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type TradesSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradesSubscribeRequest) Reset()         { *m = TradesSubscribeRequest{} }
func (m *TradesSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*TradesSubscribeRequest) ProtoMessage()    {}
func (*TradesSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{58}
}

func (m *TradesSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesSubscribeRequest.Unmarshal(m, b)
}
func (m *TradesSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *TradesSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesSubscribeRequest.Merge(m, src)
}
func (m *TradesSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_TradesSubscribeRequest.Size(m)
}
func (m *TradesSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesSubscribeRequest proto.InternalMessageInfo

func (m *TradesSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type CandlesSubscribeRequest struct {
	MarketID             string          `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Interval             proto1.Interval `protobuf:"varint,2,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CandlesSubscribeRequest) Reset()         { *m = CandlesSubscribeRequest{} }
func (m *CandlesSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesSubscribeRequest) ProtoMessage()    {}
func (*CandlesSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{59}
}

func (m *CandlesSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesSubscribeRequest.Unmarshal(m, b)
}
func (m *CandlesSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *CandlesSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesSubscribeRequest.Merge(m, src)
}
func (m *CandlesSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesSubscribeRequest.Size(m)
}
func (m *CandlesSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesSubscribeRequest proto.InternalMessageInfo

func (m *CandlesSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *CandlesSubscribeRequest) GetInterval() proto1.Interval {
	if m != nil {
		return m.Interval
	}
	return proto1.Interval_INTERVAL_UNSPECIFIED
}

type MarketDepthSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthSubscribeRequest) Reset()         { *m = MarketDepthSubscribeRequest{} }
func (m *MarketDepthSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthSubscribeRequest) ProtoMessage()    {}
func (*MarketDepthSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{60}
}

func (m *MarketDepthSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Unmarshal(m, b)
}
func (m *MarketDepthSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthSubscribeRequest.Merge(m, src)
}
func (m *MarketDepthSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Size(m)
}
func (m *MarketDepthSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthSubscribeRequest proto.InternalMessageInfo

func (m *MarketDepthSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type PositionsSubscribeRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsSubscribeRequest) Reset()         { *m = PositionsSubscribeRequest{} }
func (m *PositionsSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsSubscribeRequest) ProtoMessage()    {}
func (*PositionsSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{61}
}

func (m *PositionsSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsSubscribeRequest.Unmarshal(m, b)
}
func (m *PositionsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *PositionsSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsSubscribeRequest.Merge(m, src)
}
func (m *PositionsSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsSubscribeRequest.Size(m)
}
func (m *PositionsSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsSubscribeRequest proto.InternalMessageInfo

func (m *PositionsSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type OrdersByMarketRequest struct {
	MarketID             string      `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Open                 bool        `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OrdersByMarketRequest) Reset()         { *m = OrdersByMarketRequest{} }
func (m *OrdersByMarketRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByMarketRequest) ProtoMessage()    {}
func (*OrdersByMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{62}
}

func (m *OrdersByMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByMarketRequest.Unmarshal(m, b)
}
func (m *OrdersByMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByMarketRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByMarketRequest.Merge(m, src)
}
func (m *OrdersByMarketRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByMarketRequest.Size(m)
}
func (m *OrdersByMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByMarketRequest proto.InternalMessageInfo

func (m *OrdersByMarketRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrdersByMarketRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *OrdersByMarketRequest) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

type OrdersByMarketResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByMarketResponse) Reset()         { *m = OrdersByMarketResponse{} }
func (m *OrdersByMarketResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByMarketResponse) ProtoMessage()    {}
func (*OrdersByMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{63}
}

func (m *OrdersByMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByMarketResponse.Unmarshal(m, b)
}
func (m *OrdersByMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByMarketResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByMarketResponse.Merge(m, src)
}
func (m *OrdersByMarketResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByMarketResponse.Size(m)
}
func (m *OrdersByMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByMarketResponse proto.InternalMessageInfo

func (m *OrdersByMarketResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrdersByPartyRequest struct {
	PartyID              string      `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Open                 bool        `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OrdersByPartyRequest) Reset()         { *m = OrdersByPartyRequest{} }
func (m *OrdersByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyRequest) ProtoMessage()    {}
func (*OrdersByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{64}
}

func (m *OrdersByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyRequest.Unmarshal(m, b)
}
func (m *OrdersByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyRequest.Merge(m, src)
}
func (m *OrdersByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyRequest.Size(m)
}
func (m *OrdersByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyRequest proto.InternalMessageInfo

func (m *OrdersByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrdersByPartyRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *OrdersByPartyRequest) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

type OrdersByPartyResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyResponse) Reset()         { *m = OrdersByPartyResponse{} }
func (m *OrdersByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyResponse) ProtoMessage()    {}
func (*OrdersByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{65}
}

func (m *OrdersByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyResponse.Unmarshal(m, b)
}
func (m *OrdersByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyResponse.Merge(m, src)
}
func (m *OrdersByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyResponse.Size(m)
}
func (m *OrdersByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyResponse proto.InternalMessageInfo

func (m *OrdersByPartyResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderByMarketAndIdRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	OrderID              string   `protobuf:"bytes,2,opt,name=orderID,proto3" json:"orderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByMarketAndIdRequest) Reset()         { *m = OrderByMarketAndIdRequest{} }
func (m *OrderByMarketAndIdRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByMarketAndIdRequest) ProtoMessage()    {}
func (*OrderByMarketAndIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{66}
}

func (m *OrderByMarketAndIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Unmarshal(m, b)
}
func (m *OrderByMarketAndIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Marshal(b, m, deterministic)
}
func (m *OrderByMarketAndIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByMarketAndIdRequest.Merge(m, src)
}
func (m *OrderByMarketAndIdRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Size(m)
}
func (m *OrderByMarketAndIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByMarketAndIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByMarketAndIdRequest proto.InternalMessageInfo

func (m *OrderByMarketAndIdRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderByMarketAndIdRequest) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

type OrderByMarketAndIdResponse struct {
	Order                *proto1.Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderByMarketAndIdResponse) Reset()         { *m = OrderByMarketAndIdResponse{} }
func (m *OrderByMarketAndIdResponse) String() string { return proto.CompactTextString(m) }
func (*OrderByMarketAndIdResponse) ProtoMessage()    {}
func (*OrderByMarketAndIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{67}
}

func (m *OrderByMarketAndIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Unmarshal(m, b)
}
func (m *OrderByMarketAndIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Marshal(b, m, deterministic)
}
func (m *OrderByMarketAndIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByMarketAndIdResponse.Merge(m, src)
}
func (m *OrderByMarketAndIdResponse) XXX_Size() int {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Size(m)
}
func (m *OrderByMarketAndIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByMarketAndIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByMarketAndIdResponse proto.InternalMessageInfo

func (m *OrderByMarketAndIdResponse) GetOrder() *proto1.Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type OrderByReferenceRequest struct {
	Reference            string   `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByReferenceRequest) Reset()         { *m = OrderByReferenceRequest{} }
func (m *OrderByReferenceRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByReferenceRequest) ProtoMessage()    {}
func (*OrderByReferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{68}
}

func (m *OrderByReferenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByReferenceRequest.Unmarshal(m, b)
}
func (m *OrderByReferenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByReferenceRequest.Marshal(b, m, deterministic)
}
func (m *OrderByReferenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByReferenceRequest.Merge(m, src)
}
func (m *OrderByReferenceRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByReferenceRequest.Size(m)
}
func (m *OrderByReferenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByReferenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByReferenceRequest proto.InternalMessageInfo

func (m *OrderByReferenceRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrderByReferenceResponse struct {
	Order                *proto1.Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderByReferenceResponse) Reset()         { *m = OrderByReferenceResponse{} }
func (m *OrderByReferenceResponse) String() string { return proto.CompactTextString(m) }
func (*OrderByReferenceResponse) ProtoMessage()    {}
func (*OrderByReferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{69}
}

func (m *OrderByReferenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByReferenceResponse.Unmarshal(m, b)
}
func (m *OrderByReferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByReferenceResponse.Marshal(b, m, deterministic)
}
func (m *OrderByReferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByReferenceResponse.Merge(m, src)
}
func (m *OrderByReferenceResponse) XXX_Size() int {
	return xxx_messageInfo_OrderByReferenceResponse.Size(m)
}
func (m *OrderByReferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByReferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByReferenceResponse proto.InternalMessageInfo

func (m *OrderByReferenceResponse) GetOrder() *proto1.Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type MarketsResponse struct {
	// a list of Markets
	Markets              []*proto1.Market `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MarketsResponse) Reset()         { *m = MarketsResponse{} }
func (m *MarketsResponse) String() string { return proto.CompactTextString(m) }
func (*MarketsResponse) ProtoMessage()    {}
func (*MarketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{70}
}

func (m *MarketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsResponse.Unmarshal(m, b)
}
func (m *MarketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsResponse.Marshal(b, m, deterministic)
}
func (m *MarketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsResponse.Merge(m, src)
}
func (m *MarketsResponse) XXX_Size() int {
	return xxx_messageInfo_MarketsResponse.Size(m)
}
func (m *MarketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsResponse proto.InternalMessageInfo

func (m *MarketsResponse) GetMarkets() []*proto1.Market {
	if m != nil {
		return m.Markets
	}
	return nil
}

type CandlesRequest struct {
	MarketID string `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	// nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`.
	SinceTimestamp       int64           `protobuf:"varint,2,opt,name=sinceTimestamp,proto3" json:"sinceTimestamp,omitempty"`
	Interval             proto1.Interval `protobuf:"varint,3,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CandlesRequest) Reset()         { *m = CandlesRequest{} }
func (m *CandlesRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesRequest) ProtoMessage()    {}
func (*CandlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{71}
}

func (m *CandlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesRequest.Unmarshal(m, b)
}
func (m *CandlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesRequest.Marshal(b, m, deterministic)
}
func (m *CandlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesRequest.Merge(m, src)
}
func (m *CandlesRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesRequest.Size(m)
}
func (m *CandlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesRequest proto.InternalMessageInfo

func (m *CandlesRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *CandlesRequest) GetSinceTimestamp() int64 {
	if m != nil {
		return m.SinceTimestamp
	}
	return 0
}

func (m *CandlesRequest) GetInterval() proto1.Interval {
	if m != nil {
		return m.Interval
	}
	return proto1.Interval_INTERVAL_UNSPECIFIED
}

type CandlesResponse struct {
	Candles              []*proto1.Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CandlesResponse) Reset()         { *m = CandlesResponse{} }
func (m *CandlesResponse) String() string { return proto.CompactTextString(m) }
func (*CandlesResponse) ProtoMessage()    {}
func (*CandlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{72}
}

func (m *CandlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesResponse.Unmarshal(m, b)
}
func (m *CandlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesResponse.Marshal(b, m, deterministic)
}
func (m *CandlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesResponse.Merge(m, src)
}
func (m *CandlesResponse) XXX_Size() int {
	return xxx_messageInfo_CandlesResponse.Size(m)
}
func (m *CandlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesResponse proto.InternalMessageInfo

func (m *CandlesResponse) GetCandles() []*proto1.Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type MarketDepthRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	MaxDepth             uint64   `protobuf:"varint,2,opt,name=maxDepth,proto3" json:"maxDepth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthRequest) Reset()         { *m = MarketDepthRequest{} }
func (m *MarketDepthRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthRequest) ProtoMessage()    {}
func (*MarketDepthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{73}
}

func (m *MarketDepthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthRequest.Unmarshal(m, b)
}
func (m *MarketDepthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthRequest.Merge(m, src)
}
func (m *MarketDepthRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthRequest.Size(m)
}
func (m *MarketDepthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthRequest proto.InternalMessageInfo

func (m *MarketDepthRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketDepthRequest) GetMaxDepth() uint64 {
	if m != nil {
		return m.MaxDepth
	}
	return 0
}

type MarketDepthResponse struct {
	MarketID             string               `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Buy                  []*proto1.PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*proto1.PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	LastTrade            *proto1.Trade        `protobuf:"bytes,4,opt,name=lastTrade,proto3" json:"lastTrade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MarketDepthResponse) Reset()         { *m = MarketDepthResponse{} }
func (m *MarketDepthResponse) String() string { return proto.CompactTextString(m) }
func (*MarketDepthResponse) ProtoMessage()    {}
func (*MarketDepthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{74}
}

func (m *MarketDepthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthResponse.Unmarshal(m, b)
}
func (m *MarketDepthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthResponse.Marshal(b, m, deterministic)
}
func (m *MarketDepthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthResponse.Merge(m, src)
}
func (m *MarketDepthResponse) XXX_Size() int {
	return xxx_messageInfo_MarketDepthResponse.Size(m)
}
func (m *MarketDepthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthResponse proto.InternalMessageInfo

func (m *MarketDepthResponse) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketDepthResponse) GetBuy() []*proto1.PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MarketDepthResponse) GetSell() []*proto1.PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *MarketDepthResponse) GetLastTrade() *proto1.Trade {
	if m != nil {
		return m.LastTrade
	}
	return nil
}

type TradesByMarketRequest struct {
	MarketID             string      `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TradesByMarketRequest) Reset()         { *m = TradesByMarketRequest{} }
func (m *TradesByMarketRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByMarketRequest) ProtoMessage()    {}
func (*TradesByMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{75}
}

func (m *TradesByMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByMarketRequest.Unmarshal(m, b)
}
func (m *TradesByMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByMarketRequest.Marshal(b, m, deterministic)
}
func (m *TradesByMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByMarketRequest.Merge(m, src)
}
func (m *TradesByMarketRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByMarketRequest.Size(m)
}
func (m *TradesByMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByMarketRequest proto.InternalMessageInfo

func (m *TradesByMarketRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesByMarketRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type TradesByMarketResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByMarketResponse) Reset()         { *m = TradesByMarketResponse{} }
func (m *TradesByMarketResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByMarketResponse) ProtoMessage()    {}
func (*TradesByMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{76}
}

func (m *TradesByMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByMarketResponse.Unmarshal(m, b)
}
func (m *TradesByMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByMarketResponse.Marshal(b, m, deterministic)
}
func (m *TradesByMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByMarketResponse.Merge(m, src)
}
func (m *TradesByMarketResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByMarketResponse.Size(m)
}
func (m *TradesByMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByMarketResponse proto.InternalMessageInfo

func (m *TradesByMarketResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type PositionsByPartyRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsByPartyRequest) Reset()         { *m = PositionsByPartyRequest{} }
func (m *PositionsByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyRequest) ProtoMessage()    {}
func (*PositionsByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{77}
}

func (m *PositionsByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyRequest.Unmarshal(m, b)
}
func (m *PositionsByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyRequest.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyRequest.Merge(m, src)
}
func (m *PositionsByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyRequest.Size(m)
}
func (m *PositionsByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyRequest proto.InternalMessageInfo

func (m *PositionsByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *PositionsByPartyRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type PositionsByPartyResponse struct {
	Positions            []*proto1.Position `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PositionsByPartyResponse) Reset()         { *m = PositionsByPartyResponse{} }
func (m *PositionsByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyResponse) ProtoMessage()    {}
func (*PositionsByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{78}
}

func (m *PositionsByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyResponse.Unmarshal(m, b)
}
func (m *PositionsByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyResponse.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyResponse.Merge(m, src)
}
func (m *PositionsByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyResponse.Size(m)
}
func (m *PositionsByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyResponse proto.InternalMessageInfo

func (m *PositionsByPartyResponse) GetPositions() []*proto1.Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

type VegaTimeResponse struct {
	// nanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VegaTimeResponse) Reset()         { *m = VegaTimeResponse{} }
func (m *VegaTimeResponse) String() string { return proto.CompactTextString(m) }
func (*VegaTimeResponse) ProtoMessage()    {}
func (*VegaTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{79}
}

func (m *VegaTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VegaTimeResponse.Unmarshal(m, b)
}
func (m *VegaTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VegaTimeResponse.Marshal(b, m, deterministic)
}
func (m *VegaTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VegaTimeResponse.Merge(m, src)
}
func (m *VegaTimeResponse) XXX_Size() int {
	return xxx_messageInfo_VegaTimeResponse.Size(m)
}
func (m *VegaTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VegaTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VegaTimeResponse proto.InternalMessageInfo

func (m *VegaTimeResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Pagination struct {
	Skip                 uint64   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Descending           bool     `protobuf:"varint,3,opt,name=descending,proto3" json:"descending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{80}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetSkip() uint64 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *Pagination) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Pagination) GetDescending() bool {
	if m != nil {
		return m.Descending
	}
	return false
}

type OrdersStream struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersStream) Reset()         { *m = OrdersStream{} }
func (m *OrdersStream) String() string { return proto.CompactTextString(m) }
func (*OrdersStream) ProtoMessage()    {}
func (*OrdersStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{81}
}

func (m *OrdersStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersStream.Unmarshal(m, b)
}
func (m *OrdersStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersStream.Marshal(b, m, deterministic)
}
func (m *OrdersStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersStream.Merge(m, src)
}
func (m *OrdersStream) XXX_Size() int {
	return xxx_messageInfo_OrdersStream.Size(m)
}
func (m *OrdersStream) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersStream.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersStream proto.InternalMessageInfo

func (m *OrdersStream) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type TradesStream struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesStream) Reset()         { *m = TradesStream{} }
func (m *TradesStream) String() string { return proto.CompactTextString(m) }
func (*TradesStream) ProtoMessage()    {}
func (*TradesStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{82}
}

func (m *TradesStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesStream.Unmarshal(m, b)
}
func (m *TradesStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesStream.Marshal(b, m, deterministic)
}
func (m *TradesStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesStream.Merge(m, src)
}
func (m *TradesStream) XXX_Size() int {
	return xxx_messageInfo_TradesStream.Size(m)
}
func (m *TradesStream) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesStream.DiscardUnknown(m)
}

var xxx_messageInfo_TradesStream proto.InternalMessageInfo

func (m *TradesStream) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type PartyAccountsRequest struct {
	PartyID              string             `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string             `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Type                 proto1.AccountType `protobuf:"varint,3,opt,name=type,proto3,enum=vega.AccountType" json:"type,omitempty"`
	Asset                string             `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PartyAccountsRequest) Reset()         { *m = PartyAccountsRequest{} }
func (m *PartyAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*PartyAccountsRequest) ProtoMessage()    {}
func (*PartyAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{83}
}

func (m *PartyAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyAccountsRequest.Unmarshal(m, b)
}
func (m *PartyAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyAccountsRequest.Marshal(b, m, deterministic)
}
func (m *PartyAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyAccountsRequest.Merge(m, src)
}
func (m *PartyAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_PartyAccountsRequest.Size(m)
}
func (m *PartyAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartyAccountsRequest proto.InternalMessageInfo

func (m *PartyAccountsRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *PartyAccountsRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *PartyAccountsRequest) GetType() proto1.AccountType {
	if m != nil {
		return m.Type
	}
	return proto1.AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (m *PartyAccountsRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type PartyAccountsResponse struct {
	Accounts             []*proto1.Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PartyAccountsResponse) Reset()         { *m = PartyAccountsResponse{} }
func (m *PartyAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*PartyAccountsResponse) ProtoMessage()    {}
func (*PartyAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{84}
}

func (m *PartyAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyAccountsResponse.Unmarshal(m, b)
}
func (m *PartyAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyAccountsResponse.Marshal(b, m, deterministic)
}
func (m *PartyAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyAccountsResponse.Merge(m, src)
}
func (m *PartyAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_PartyAccountsResponse.Size(m)
}
func (m *PartyAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartyAccountsResponse proto.InternalMessageInfo

func (m *PartyAccountsResponse) GetAccounts() []*proto1.Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type MarketAccountsRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketAccountsRequest) Reset()         { *m = MarketAccountsRequest{} }
func (m *MarketAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*MarketAccountsRequest) ProtoMessage()    {}
func (*MarketAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{85}
}

func (m *MarketAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketAccountsRequest.Unmarshal(m, b)
}
func (m *MarketAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketAccountsRequest.Marshal(b, m, deterministic)
}
func (m *MarketAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketAccountsRequest.Merge(m, src)
}
func (m *MarketAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_MarketAccountsRequest.Size(m)
}
func (m *MarketAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketAccountsRequest proto.InternalMessageInfo

func (m *MarketAccountsRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketAccountsRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type MarketAccountsResponse struct {
	Accounts             []*proto1.Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MarketAccountsResponse) Reset()         { *m = MarketAccountsResponse{} }
func (m *MarketAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*MarketAccountsResponse) ProtoMessage()    {}
func (*MarketAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{86}
}

func (m *MarketAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketAccountsResponse.Unmarshal(m, b)
}
func (m *MarketAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketAccountsResponse.Marshal(b, m, deterministic)
}
func (m *MarketAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketAccountsResponse.Merge(m, src)
}
func (m *MarketAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_MarketAccountsResponse.Size(m)
}
func (m *MarketAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketAccountsResponse proto.InternalMessageInfo

func (m *MarketAccountsResponse) GetAccounts() []*proto1.Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type PrepareProposalRequest struct {
	PartyID              string                `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Reference            string                `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Proposal             *proto1.ProposalTerms `protobuf:"bytes,3,opt,name=proposal,proto3" json:"proposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PrepareProposalRequest) Reset()         { *m = PrepareProposalRequest{} }
func (m *PrepareProposalRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareProposalRequest) ProtoMessage()    {}
func (*PrepareProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{87}
}

func (m *PrepareProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareProposalRequest.Unmarshal(m, b)
}
func (m *PrepareProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareProposalRequest.Marshal(b, m, deterministic)
}
func (m *PrepareProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareProposalRequest.Merge(m, src)
}
func (m *PrepareProposalRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareProposalRequest.Size(m)
}
func (m *PrepareProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareProposalRequest proto.InternalMessageInfo

func (m *PrepareProposalRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *PrepareProposalRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *PrepareProposalRequest) GetProposal() *proto1.ProposalTerms {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type PrepareProposalResponse struct {
	Blob                 []byte           `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	PendingProposal      *proto1.Proposal `protobuf:"bytes,2,opt,name=pendingProposal,proto3" json:"pendingProposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PrepareProposalResponse) Reset()         { *m = PrepareProposalResponse{} }
func (m *PrepareProposalResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareProposalResponse) ProtoMessage()    {}
func (*PrepareProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{88}
}

func (m *PrepareProposalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareProposalResponse.Unmarshal(m, b)
}
func (m *PrepareProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareProposalResponse.Marshal(b, m, deterministic)
}
func (m *PrepareProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareProposalResponse.Merge(m, src)
}
func (m *PrepareProposalResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareProposalResponse.Size(m)
}
func (m *PrepareProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareProposalResponse proto.InternalMessageInfo

func (m *PrepareProposalResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *PrepareProposalResponse) GetPendingProposal() *proto1.Proposal {
	if m != nil {
		return m.PendingProposal
	}
	return nil
}

type PrepareVoteRequest struct {
	Vote                 *proto1.Vote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PrepareVoteRequest) Reset()         { *m = PrepareVoteRequest{} }
func (m *PrepareVoteRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareVoteRequest) ProtoMessage()    {}
func (*PrepareVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{89}
}

func (m *PrepareVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareVoteRequest.Unmarshal(m, b)
}
func (m *PrepareVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareVoteRequest.Marshal(b, m, deterministic)
}
func (m *PrepareVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareVoteRequest.Merge(m, src)
}
func (m *PrepareVoteRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareVoteRequest.Size(m)
}
func (m *PrepareVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareVoteRequest proto.InternalMessageInfo

func (m *PrepareVoteRequest) GetVote() *proto1.Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type PrepareVoteResponse struct {
	Blob                 []byte       `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	Vote                 *proto1.Vote `protobuf:"bytes,2,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PrepareVoteResponse) Reset()         { *m = PrepareVoteResponse{} }
func (m *PrepareVoteResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareVoteResponse) ProtoMessage()    {}
func (*PrepareVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{90}
}

func (m *PrepareVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareVoteResponse.Unmarshal(m, b)
}
func (m *PrepareVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareVoteResponse.Marshal(b, m, deterministic)
}
func (m *PrepareVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareVoteResponse.Merge(m, src)
}
func (m *PrepareVoteResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareVoteResponse.Size(m)
}
func (m *PrepareVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareVoteResponse proto.InternalMessageInfo

func (m *PrepareVoteResponse) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *PrepareVoteResponse) GetVote() *proto1.Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type OrderByIDRequest struct {
	OrderID string `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	// version of the order (0 for most recent; 1 for original; 2 for first amendment, etc)
	Version              uint64   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByIDRequest) Reset()         { *m = OrderByIDRequest{} }
func (m *OrderByIDRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByIDRequest) ProtoMessage()    {}
func (*OrderByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{91}
}

func (m *OrderByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByIDRequest.Unmarshal(m, b)
}
func (m *OrderByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByIDRequest.Marshal(b, m, deterministic)
}
func (m *OrderByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByIDRequest.Merge(m, src)
}
func (m *OrderByIDRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByIDRequest.Size(m)
}
func (m *OrderByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByIDRequest proto.InternalMessageInfo

func (m *OrderByIDRequest) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderByIDRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type OrderByReferenceIDRequest struct {
	ReferenceID          string   `protobuf:"bytes,1,opt,name=referenceID,proto3" json:"referenceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByReferenceIDRequest) Reset()         { *m = OrderByReferenceIDRequest{} }
func (m *OrderByReferenceIDRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByReferenceIDRequest) ProtoMessage()    {}
func (*OrderByReferenceIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{92}
}

func (m *OrderByReferenceIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByReferenceIDRequest.Unmarshal(m, b)
}
func (m *OrderByReferenceIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByReferenceIDRequest.Marshal(b, m, deterministic)
}
func (m *OrderByReferenceIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByReferenceIDRequest.Merge(m, src)
}
func (m *OrderByReferenceIDRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByReferenceIDRequest.Size(m)
}
func (m *OrderByReferenceIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByReferenceIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByReferenceIDRequest proto.InternalMessageInfo

func (m *OrderByReferenceIDRequest) GetReferenceID() string {
	if m != nil {
		return m.ReferenceID
	}
	return ""
}

type OrderVersionsByIDRequest struct {
	OrderID              string      `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OrderVersionsByIDRequest) Reset()         { *m = OrderVersionsByIDRequest{} }
func (m *OrderVersionsByIDRequest) String() string { return proto.CompactTextString(m) }
func (*OrderVersionsByIDRequest) ProtoMessage()    {}
func (*OrderVersionsByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{93}
}

func (m *OrderVersionsByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderVersionsByIDRequest.Unmarshal(m, b)
}
func (m *OrderVersionsByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderVersionsByIDRequest.Marshal(b, m, deterministic)
}
func (m *OrderVersionsByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderVersionsByIDRequest.Merge(m, src)
}
func (m *OrderVersionsByIDRequest) XXX_Size() int {
	return xxx_messageInfo_OrderVersionsByIDRequest.Size(m)
}
func (m *OrderVersionsByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderVersionsByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderVersionsByIDRequest proto.InternalMessageInfo

func (m *OrderVersionsByIDRequest) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderVersionsByIDRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type OrderVersionsResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrderVersionsResponse) Reset()         { *m = OrderVersionsResponse{} }
func (m *OrderVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*OrderVersionsResponse) ProtoMessage()    {}
func (*OrderVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb848134bda36f4, []int{94}
}

func (m *OrderVersionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderVersionsResponse.Unmarshal(m, b)
}
func (m *OrderVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderVersionsResponse.Marshal(b, m, deterministic)
}
func (m *OrderVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderVersionsResponse.Merge(m, src)
}
func (m *OrderVersionsResponse) XXX_Size() int {
	return xxx_messageInfo_OrderVersionsResponse.Size(m)
}
func (m *OrderVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderVersionsResponse proto.InternalMessageInfo

func (m *OrderVersionsResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func init() {
	proto.RegisterType((*PropagateChainEventRequest)(nil), "api.PropagateChainEventRequest")
	proto.RegisterType((*PropagateChainEventResponse)(nil), "api.PropagateChainEventResponse")
	proto.RegisterType((*SubmitTransactionRequest)(nil), "api.SubmitTransactionRequest")
	proto.RegisterType((*SubmitTransactionResponse)(nil), "api.SubmitTransactionResponse")
	proto.RegisterType((*WithdrawRequest)(nil), "api.WithdrawRequest")
	proto.RegisterType((*WithdrawResponse)(nil), "api.WithdrawResponse")
	proto.RegisterType((*NotifyTraderAccountRequest)(nil), "api.NotifyTraderAccountRequest")
	proto.RegisterType((*NotifyTraderAccountResponse)(nil), "api.NotifyTraderAccountResponse")
	proto.RegisterType((*PrepareSubmitOrderResponse)(nil), "api.PrepareSubmitOrderResponse")
	proto.RegisterType((*PrepareCancelOrderResponse)(nil), "api.PrepareCancelOrderResponse")
	proto.RegisterType((*PrepareAmendOrderResponse)(nil), "api.PrepareAmendOrderResponse")
	proto.RegisterType((*SubmitOrderRequest)(nil), "api.SubmitOrderRequest")
	proto.RegisterType((*CancelOrderRequest)(nil), "api.CancelOrderRequest")
	proto.RegisterType((*AmendOrderRequest)(nil), "api.AmendOrderRequest")
	proto.RegisterType((*GetNodeSignaturesAggregateRequest)(nil), "api.GetNodeSignaturesAggregateRequest")
	proto.RegisterType((*GetNodeSignaturesAggregateResponse)(nil), "api.GetNodeSignaturesAggregateResponse")
	proto.RegisterType((*OptionalProposalState)(nil), "api.OptionalProposalState")
	proto.RegisterType((*GetProposalsRequest)(nil), "api.GetProposalsRequest")
	proto.RegisterType((*GetProposalsResponse)(nil), "api.GetProposalsResponse")
	proto.RegisterType((*GetProposalsByPartyRequest)(nil), "api.GetProposalsByPartyRequest")
	proto.RegisterType((*GetProposalsByPartyResponse)(nil), "api.GetProposalsByPartyResponse")
	proto.RegisterType((*GetVotesByPartyRequest)(nil), "api.GetVotesByPartyRequest")
	proto.RegisterType((*GetVotesByPartyResponse)(nil), "api.GetVotesByPartyResponse")
	proto.RegisterType((*GetNewMarketProposalsRequest)(nil), "api.GetNewMarketProposalsRequest")
	proto.RegisterType((*GetNewMarketProposalsResponse)(nil), "api.GetNewMarketProposalsResponse")
	proto.RegisterType((*GetUpdateMarketProposalsRequest)(nil), "api.GetUpdateMarketProposalsRequest")
	proto.RegisterType((*GetUpdateMarketProposalsResponse)(nil), "api.GetUpdateMarketProposalsResponse")
	proto.RegisterType((*GetNetworkParametersProposalsRequest)(nil), "api.GetNetworkParametersProposalsRequest")
	proto.RegisterType((*GetNetworkParametersProposalsResponse)(nil), "api.GetNetworkParametersProposalsResponse")
	proto.RegisterType((*GetNewAssetProposalsRequest)(nil), "api.GetNewAssetProposalsRequest")
	proto.RegisterType((*GetNewAssetProposalsResponse)(nil), "api.GetNewAssetProposalsResponse")
	proto.RegisterType((*GetProposalByIDRequest)(nil), "api.GetProposalByIDRequest")
	proto.RegisterType((*GetProposalByIDResponse)(nil), "api.GetProposalByIDResponse")
	proto.RegisterType((*GetProposalByReferenceRequest)(nil), "api.GetProposalByReferenceRequest")
	proto.RegisterType((*GetProposalByReferenceResponse)(nil), "api.GetProposalByReferenceResponse")
	proto.RegisterType((*ObservePartyProposalsRequest)(nil), "api.ObservePartyProposalsRequest")
	proto.RegisterType((*ObserveProposalVotesRequest)(nil), "api.ObserveProposalVotesRequest")
	proto.RegisterType((*ObservePartyVotesRequest)(nil), "api.ObservePartyVotesRequest")
	proto.RegisterType((*MarginLevelsSubscribeRequest)(nil), "api.MarginLevelsSubscribeRequest")
	proto.RegisterType((*MarginLevelsRequest)(nil), "api.MarginLevelsRequest")
	proto.RegisterType((*MarginLevelsResponse)(nil), "api.MarginLevelsResponse")
	proto.RegisterType((*MarketsDataSubscribeRequest)(nil), "api.MarketsDataSubscribeRequest")
	proto.RegisterType((*MarketDataByIDRequest)(nil), "api.MarketDataByIDRequest")
	proto.RegisterType((*MarketDataByIDResponse)(nil), "api.MarketDataByIDResponse")
	proto.RegisterType((*MarketsDataResponse)(nil), "api.MarketsDataResponse")
	proto.RegisterType((*LastTradeRequest)(nil), "api.LastTradeRequest")
	proto.RegisterType((*LastTradeResponse)(nil), "api.LastTradeResponse")
	proto.RegisterType((*MarketByIDRequest)(nil), "api.MarketByIDRequest")
	proto.RegisterType((*MarketByIDResponse)(nil), "api.MarketByIDResponse")
	proto.RegisterType((*PartyByIDRequest)(nil), "api.PartyByIDRequest")
	proto.RegisterType((*PartyByIDResponse)(nil), "api.PartyByIDResponse")
	proto.RegisterType((*PartiesResponse)(nil), "api.PartiesResponse")
	proto.RegisterType((*TradesByPartyRequest)(nil), "api.TradesByPartyRequest")
	proto.RegisterType((*TradesByPartyResponse)(nil), "api.TradesByPartyResponse")
	proto.RegisterType((*TradesByOrderRequest)(nil), "api.TradesByOrderRequest")
	proto.RegisterType((*TradesByOrderResponse)(nil), "api.TradesByOrderResponse")
	proto.RegisterType((*AccountsSubscribeRequest)(nil), "api.AccountsSubscribeRequest")
	proto.RegisterType((*OrdersSubscribeRequest)(nil), "api.OrdersSubscribeRequest")
	proto.RegisterType((*TradesSubscribeRequest)(nil), "api.TradesSubscribeRequest")
	proto.RegisterType((*CandlesSubscribeRequest)(nil), "api.CandlesSubscribeRequest")
	proto.RegisterType((*MarketDepthSubscribeRequest)(nil), "api.MarketDepthSubscribeRequest")
	proto.RegisterType((*PositionsSubscribeRequest)(nil), "api.PositionsSubscribeRequest")
	proto.RegisterType((*OrdersByMarketRequest)(nil), "api.OrdersByMarketRequest")
	proto.RegisterType((*OrdersByMarketResponse)(nil), "api.OrdersByMarketResponse")
	proto.RegisterType((*OrdersByPartyRequest)(nil), "api.OrdersByPartyRequest")
	proto.RegisterType((*OrdersByPartyResponse)(nil), "api.OrdersByPartyResponse")
	proto.RegisterType((*OrderByMarketAndIdRequest)(nil), "api.OrderByMarketAndIdRequest")
	proto.RegisterType((*OrderByMarketAndIdResponse)(nil), "api.OrderByMarketAndIdResponse")
	proto.RegisterType((*OrderByReferenceRequest)(nil), "api.OrderByReferenceRequest")
	proto.RegisterType((*OrderByReferenceResponse)(nil), "api.OrderByReferenceResponse")
	proto.RegisterType((*MarketsResponse)(nil), "api.MarketsResponse")
	proto.RegisterType((*CandlesRequest)(nil), "api.CandlesRequest")
	proto.RegisterType((*CandlesResponse)(nil), "api.CandlesResponse")
	proto.RegisterType((*MarketDepthRequest)(nil), "api.MarketDepthRequest")
	proto.RegisterType((*MarketDepthResponse)(nil), "api.MarketDepthResponse")
	proto.RegisterType((*TradesByMarketRequest)(nil), "api.TradesByMarketRequest")
	proto.RegisterType((*TradesByMarketResponse)(nil), "api.TradesByMarketResponse")
	proto.RegisterType((*PositionsByPartyRequest)(nil), "api.PositionsByPartyRequest")
	proto.RegisterType((*PositionsByPartyResponse)(nil), "api.PositionsByPartyResponse")
	proto.RegisterType((*VegaTimeResponse)(nil), "api.VegaTimeResponse")
	proto.RegisterType((*Pagination)(nil), "api.Pagination")
	proto.RegisterType((*OrdersStream)(nil), "api.OrdersStream")
	proto.RegisterType((*TradesStream)(nil), "api.TradesStream")
	proto.RegisterType((*PartyAccountsRequest)(nil), "api.PartyAccountsRequest")
	proto.RegisterType((*PartyAccountsResponse)(nil), "api.PartyAccountsResponse")
	proto.RegisterType((*MarketAccountsRequest)(nil), "api.MarketAccountsRequest")
	proto.RegisterType((*MarketAccountsResponse)(nil), "api.MarketAccountsResponse")
	proto.RegisterType((*PrepareProposalRequest)(nil), "api.PrepareProposalRequest")
	proto.RegisterType((*PrepareProposalResponse)(nil), "api.PrepareProposalResponse")
	proto.RegisterType((*PrepareVoteRequest)(nil), "api.PrepareVoteRequest")
	proto.RegisterType((*PrepareVoteResponse)(nil), "api.PrepareVoteResponse")
	proto.RegisterType((*OrderByIDRequest)(nil), "api.OrderByIDRequest")
	proto.RegisterType((*OrderByReferenceIDRequest)(nil), "api.OrderByReferenceIDRequest")
	proto.RegisterType((*OrderVersionsByIDRequest)(nil), "api.OrderVersionsByIDRequest")
	proto.RegisterType((*OrderVersionsResponse)(nil), "api.OrderVersionsResponse")
}

func init() { proto.RegisterFile("proto/api/trading.proto", fileDescriptor_efb848134bda36f4) }

var fileDescriptor_efb848134bda36f4 = []byte{
	// 2939 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x1a, 0x6b, 0x73, 0x1b, 0xb7,
	0xb1, 0xa4, 0x64, 0x4b, 0x5a, 0xc9, 0x7a, 0x40, 0x2f, 0xea, 0xa4, 0xd8, 0x32, 0x62, 0xa7, 0x8e,
	0x27, 0x11, 0x39, 0x76, 0x22, 0x27, 0x7e, 0x34, 0x7a, 0xd9, 0x0a, 0x13, 0x59, 0x56, 0x4e, 0x8a,
	0x93, 0x3e, 0xa6, 0xe9, 0x89, 0x84, 0xe9, 0x1b, 0x93, 0x77, 0xec, 0xdd, 0x89, 0xb2, 0x3e, 0x74,
	0xa6, 0xdf, 0x3a, 0xfd, 0xd0, 0x99, 0xf6, 0x6b, 0x7f, 0x40, 0xff, 0x4a, 0x7f, 0x46, 0x67, 0xfa,
	0x4b, 0x3a, 0x07, 0x2c, 0x70, 0xc0, 0x3d, 0x48, 0xb1, 0xb1, 0xbf, 0xdd, 0x61, 0x9f, 0x58, 0x2c,
	0x76, 0x81, 0x5d, 0xc0, 0x72, 0x37, 0xf0, 0x23, 0xbf, 0xea, 0x74, 0xdd, 0x6a, 0x14, 0x38, 0x4d,
	0xd7, 0x6b, 0x6d, 0xf0, 0x11, 0x32, 0xe2, 0x74, 0x5d, 0x6b, 0x56, 0x40, 0x7b, 0xac, 0xe5, 0x88,
	0x61, 0x6b, 0x5e, 0x8c, 0x74, 0x9c, 0xe0, 0x0d, 0x8b, 0x42, 0x1c, 0x5c, 0x12, 0x83, 0x2d, 0xbf,
	0xc7, 0x02, 0xcf, 0xf1, 0x1a, 0x0c, 0xc7, 0x2b, 0x62, 0xbc, 0xf1, 0xda, 0x71, 0xbd, 0x9f, 0x58,
	0x8f, 0x79, 0x8a, 0x62, 0xb5, 0xe5, 0xfb, 0xad, 0x36, 0xab, 0xf2, 0xbf, 0xd3, 0xb3, 0x57, 0x55,
	0xd6, 0xe9, 0x46, 0x17, 0x08, 0xdc, 0x6c, 0xb9, 0xd1, 0xeb, 0xb3, 0xd3, 0x8d, 0x86, 0xdf, 0xa9,
	0x76, 0xce, 0xdd, 0xe8, 0x8d, 0x7f, 0x5e, 0x6d, 0xf9, 0x9f, 0x72, 0xe0, 0xa7, 0x3d, 0xa7, 0xed,
	0x36, 0x9d, 0xc8, 0x0f, 0xc2, 0xaa, 0xfa, 0x14, 0x74, 0x74, 0x0b, 0xac, 0xa3, 0xc0, 0xef, 0x3a,
	0x2d, 0x27, 0x62, 0xbb, 0xb1, 0xcc, 0xa7, 0xb1, 0x48, 0x9b, 0xfd, 0xf1, 0x8c, 0x85, 0x11, 0xa1,
	0x30, 0xc2, 0x7a, 0x51, 0xa5, 0xb4, 0x5e, 0xba, 0x33, 0x79, 0x6f, 0x76, 0x83, 0xcf, 0x49, 0xc3,
	0x8a, 0x81, 0xf4, 0x01, 0xac, 0xe6, 0x72, 0x08, 0xbb, 0xbe, 0x17, 0x32, 0x52, 0x81, 0xb1, 0xf0,
	0xac, 0xd1, 0x60, 0x61, 0xc8, 0xd9, 0x8c, 0xdb, 0xf2, 0x97, 0xfe, 0x0a, 0x2a, 0xc7, 0x67, 0xa7,
	0x1d, 0x37, 0x3a, 0x09, 0x1c, 0x2f, 0x74, 0x1a, 0x91, 0xeb, 0x7b, 0x89, 0xe0, 0x72, 0xf4, 0x16,
	0xe5, 0x12, 0x21, 0xf7, 0xd8, 0x6d, 0x79, 0xac, 0xb9, 0x73, 0xe6, 0x35, 0xdb, 0xcc, 0x2e, 0x47,
	0x6f, 0xe9, 0xe7, 0xb0, 0x92, 0x43, 0x3f, 0x50, 0xec, 0x13, 0x98, 0xf9, 0xc1, 0x8d, 0x5e, 0x37,
	0x03, 0xe7, 0x5c, 0x4a, 0xbb, 0x0b, 0xe3, 0xe7, 0x38, 0x84, 0x32, 0xa7, 0x85, 0x4c, 0x85, 0xa8,
	0xe0, 0xf4, 0x13, 0x98, 0x4d, 0xc8, 0x07, 0x0a, 0x7b, 0x0e, 0xd6, 0xa1, 0x1f, 0xb9, 0xaf, 0x2e,
	0x4e, 0x02, 0xa7, 0xc9, 0x82, 0xed, 0x46, 0xc3, 0x3f, 0x4b, 0xcc, 0x5b, 0x85, 0x2b, 0x5e, 0x0c,
	0x45, 0xa1, 0x2b, 0x42, 0x68, 0x1e, 0x81, 0xc0, 0xa3, 0x8f, 0x60, 0x35, 0x97, 0x1d, 0xea, 0xb1,
	0x06, 0x13, 0x21, 0xb7, 0x48, 0xc4, 0x9a, 0xa8, 0x49, 0x32, 0x40, 0x0f, 0xe2, 0xa5, 0x66, 0x5d,
	0x27, 0x60, 0xc2, 0x6c, 0x2f, 0x82, 0x26, 0x0b, 0x14, 0x2d, 0x81, 0xd1, 0xd3, 0xb6, 0x7f, 0xca,
	0xc9, 0xa6, 0x6c, 0xfe, 0x4d, 0x2c, 0x18, 0x17, 0xe4, 0xf5, 0xbd, 0x4a, 0x79, 0xbd, 0x74, 0x67,
	0xc2, 0x56, 0xff, 0xb4, 0xa6, 0xb8, 0xed, 0xc6, 0xde, 0xdb, 0x1e, 0xc8, 0x8d, 0x56, 0x61, 0x05,
	0x29, 0xb6, 0x3b, 0xcc, 0x6b, 0x0e, 0x26, 0xf8, 0x16, 0x88, 0xa1, 0xa9, 0x30, 0xda, 0xe7, 0x00,
	0x5c, 0x89, 0x30, 0x74, 0x7d, 0x0f, 0x2d, 0xb7, 0x28, 0x2c, 0xc7, 0xf1, 0x8e, 0x15, 0xd0, 0xd6,
	0x10, 0xe9, 0x77, 0x40, 0x0c, 0x45, 0x05, 0xb3, 0x47, 0x30, 0xd5, 0xe0, 0xa3, 0x6d, 0x27, 0x4a,
	0xd8, 0x2d, 0x6b, 0xec, 0x76, 0x35, 0xb0, 0x6d, 0x20, 0xd3, 0x7d, 0x98, 0xd3, 0x67, 0x22, 0x38,
	0xde, 0x83, 0x09, 0x27, 0x1e, 0xec, 0x30, 0x4f, 0x6e, 0x9c, 0x05, 0x8d, 0xdd, 0xb6, 0x84, 0xd9,
	0x09, 0x1a, 0xbd, 0x0f, 0x37, 0xf7, 0x59, 0x74, 0xe8, 0x37, 0x59, 0xec, 0xe4, 0x4e, 0x74, 0x16,
	0xb0, 0x70, 0xbb, 0xd5, 0x0a, 0x58, 0xbc, 0xa7, 0x24, 0xe3, 0x69, 0x28, 0xd7, 0xf7, 0x38, 0xc7,
	0x09, 0xbb, 0x5c, 0xdf, 0xa3, 0xbf, 0x06, 0xda, 0x8f, 0x08, 0xed, 0x7a, 0x1f, 0x20, 0x54, 0xe0,
	0x4a, 0x69, 0x7d, 0xe4, 0xce, 0xe4, 0xbd, 0x79, 0xe9, 0x67, 0x1a, 0xa9, 0xad, 0xa1, 0xd1, 0x5d,
	0x58, 0x7c, 0xd1, 0x8d, 0xa7, 0xe8, 0xb4, 0xe3, 0xad, 0xed, 0x87, 0x4e, 0xfb, 0x38, 0x72, 0x22,
	0x46, 0xee, 0xc2, 0x95, 0x9e, 0xd3, 0x3e, 0x63, 0x5c, 0x8d, 0x69, 0x39, 0x31, 0x89, 0xb3, 0xc1,
	0x91, 0x6c, 0x81, 0x42, 0x7f, 0x80, 0xf9, 0x7d, 0x16, 0x49, 0x58, 0x28, 0xa7, 0xb1, 0x05, 0xd7,
	0x42, 0xd6, 0x66, 0x8d, 0xa8, 0xee, 0x71, 0x74, 0xb4, 0x91, 0xb5, 0xe1, 0x74, 0xdd, 0x8d, 0x5c,
	0xa9, 0xb6, 0x49, 0x40, 0xb7, 0x60, 0xc1, 0x64, 0x8c, 0x53, 0xbd, 0x03, 0xa3, 0x4d, 0x27, 0x72,
	0x70, 0x92, 0xa8, 0xdb, 0xbe, 0x8a, 0xaf, 0x7b, 0x4e, 0xe4, 0xd8, 0x1c, 0x83, 0xfe, 0xb9, 0x04,
	0x96, 0xce, 0x62, 0xe7, 0xe2, 0xc8, 0x09, 0xa2, 0x0b, 0xa9, 0xe2, 0x3a, 0x8c, 0x75, 0xe3, 0x7f,
	0x69, 0xee, 0x9d, 0xab, 0xff, 0xfd, 0xcf, 0x8d, 0xf2, 0x8f, 0x25, 0x5b, 0x0e, 0x67, 0x27, 0x51,
	0x1e, 0x76, 0x12, 0xfb, 0xb0, 0x9a, 0xab, 0xc1, 0xd0, 0x73, 0x79, 0x08, 0x4b, 0xfb, 0x2c, 0x7a,
	0xe9, 0x47, 0x6c, 0xe8, 0x69, 0xd0, 0x47, 0xb0, 0x9c, 0xa1, 0x45, 0x05, 0xd6, 0xe1, 0x4a, 0x2f,
	0x1e, 0x47, 0x0d, 0x40, 0x68, 0x10, 0xa3, 0xda, 0x02, 0x40, 0xff, 0x00, 0x6b, 0xb1, 0xff, 0xb1,
	0xf3, 0xe7, 0x3c, 0xaf, 0xbd, 0x87, 0x85, 0xae, 0xc3, 0x07, 0x05, 0x12, 0x86, 0xb6, 0xd2, 0x5f,
	0x4a, 0x70, 0x63, 0x9f, 0x45, 0xdf, 0x77, 0x9b, 0x4e, 0xc4, 0x0a, 0x14, 0xa6, 0x30, 0x2e, 0x52,
	0x74, 0xc6, 0x60, 0x6a, 0xfc, 0x1d, 0x2c, 0xfc, 0x01, 0xac, 0x17, 0x2b, 0x32, 0xf4, 0xbc, 0x5e,
	0xc3, 0x2d, 0x6e, 0xa2, 0xe8, 0xdc, 0x0f, 0xde, 0x1c, 0x39, 0x81, 0xd3, 0x61, 0x11, 0x0b, 0xc2,
	0xf7, 0xb0, 0x18, 0xdf, 0xc1, 0xed, 0x01, 0x92, 0x86, 0x56, 0xfe, 0x27, 0xbe, 0x07, 0x0e, 0xd9,
	0xf9, 0x76, 0x18, 0xbe, 0x17, 0x07, 0xfa, 0x5a, 0xba, 0x68, 0x5a, 0xc0, 0xd0, 0xaa, 0x6e, 0xf1,
	0x5d, 0x26, 0x39, 0xec, 0x5c, 0xd4, 0xf7, 0xa4, 0x96, 0x1f, 0x01, 0x74, 0x71, 0x38, 0xe3, 0x37,
	0x1a, 0x84, 0xee, 0xf2, 0xbd, 0x66, 0x72, 0xc8, 0xa8, 0x51, 0x1a, 0xa0, 0xc6, 0x53, 0xbe, 0x23,
	0x12, 0x26, 0x36, 0x7b, 0xc5, 0x02, 0xe6, 0x35, 0x54, 0x92, 0xb8, 0x05, 0x13, 0x6a, 0x2c, 0xa5,
	0x4c, 0x02, 0xa0, 0xdf, 0xc0, 0xf5, 0x22, 0x36, 0x43, 0xab, 0xb4, 0x05, 0x6b, 0x2f, 0x4e, 0x43,
	0x16, 0xf4, 0x18, 0x0f, 0x20, 0x99, 0x55, 0x1c, 0x1c, 0x85, 0x9e, 0xc2, 0xaa, 0xe4, 0x80, 0xc4,
	0x3c, 0x22, 0x0d, 0x6b, 0xe0, 0xc7, 0x50, 0xd1, 0x15, 0x31, 0x78, 0x0c, 0x56, 0xe2, 0x77, 0xb0,
	0xf6, 0xdc, 0x09, 0x5a, 0xae, 0x77, 0xc0, 0x7a, 0xac, 0x1d, 0x1e, 0x9f, 0x9d, 0x86, 0x8d, 0xc0,
	0x3d, 0x65, 0x97, 0xcf, 0x09, 0x96, 0x16, 0x3e, 0xf0, 0xb0, 0x24, 0xff, 0xe9, 0x31, 0xcc, 0xeb,
	0xdc, 0xdf, 0x0d, 0xd3, 0x43, 0x58, 0x30, 0x99, 0xe2, 0xda, 0x6d, 0xc2, 0x54, 0x47, 0x1b, 0x47,
	0xef, 0xc6, 0x53, 0xb4, 0x41, 0x61, 0xe0, 0xd1, 0x2f, 0x61, 0x55, 0x04, 0xa4, 0x30, 0x5e, 0xde,
	0x8c, 0x05, 0xac, 0x74, 0x78, 0xd4, 0x54, 0x79, 0x04, 0x8b, 0x82, 0x34, 0xa6, 0xd4, 0x77, 0xc7,
	0x25, 0x62, 0x2a, 0xfd, 0x06, 0x96, 0xd2, 0xc4, 0x38, 0x93, 0x1a, 0x40, 0x47, 0x41, 0xcc, 0x5b,
	0x48, 0x42, 0x61, 0x6b, 0x38, 0xb4, 0xce, 0x0d, 0x2d, 0xe7, 0xa0, 0x18, 0xdd, 0x83, 0xc9, 0x4e,
	0x32, 0x8c, 0x16, 0xc9, 0x72, 0xd2, 0x91, 0xe8, 0x26, 0xcc, 0x1e, 0x38, 0x61, 0xc4, 0x4f, 0xda,
	0xc3, 0x4c, 0x67, 0x13, 0xe6, 0x34, 0x3a, 0x54, 0xe0, 0x26, 0x5c, 0x89, 0xaf, 0x8a, 0x32, 0x86,
	0x4d, 0x0a, 0xd1, 0x02, 0x47, 0x40, 0xe8, 0x03, 0x98, 0x13, 0xaa, 0x0c, 0x6b, 0xbf, 0x87, 0x40,
	0x74, 0x42, 0x94, 0x78, 0x0b, 0xae, 0x0a, 0x0c, 0x14, 0x39, 0xa5, 0xcf, 0xd6, 0x46, 0x18, 0xfd,
	0x0c, 0x66, 0xf9, 0x6e, 0xd1, 0x65, 0x0e, 0xde, 0x2c, 0x9b, 0x30, 0xa7, 0x51, 0x25, 0x53, 0xe4,
	0x70, 0x73, 0x8a, 0xe2, 0x54, 0x21, 0x20, 0xf4, 0x0b, 0x98, 0x89, 0xff, 0x5d, 0x96, 0x38, 0xeb,
	0x6d, 0x21, 0xcc, 0x55, 0x27, 0x0d, 0x83, 0x4e, 0xc2, 0xe8, 0x9f, 0x60, 0x81, 0x1b, 0x2b, 0x7d,
	0xc6, 0xa9, 0xa4, 0x74, 0xbd, 0xd4, 0xce, 0x21, 0x55, 0x80, 0xae, 0xd3, 0x72, 0x3d, 0x71, 0xe6,
	0x1f, 0xe1, 0xfa, 0xce, 0xf0, 0xb4, 0x72, 0xa4, 0x86, 0x6d, 0x0d, 0x85, 0x3e, 0x86, 0xc5, 0x94,
	0x78, 0x54, 0xff, 0x43, 0xb8, 0xca, 0x57, 0x2f, 0xa5, 0xbd, 0x58, 0x58, 0x04, 0xd1, 0x5a, 0xa2,
	0xbc, 0x71, 0x55, 0xa8, 0xc0, 0x98, 0x1f, 0xff, 0x27, 0xca, 0xe3, 0xaf, 0x2e, 0xcf, 0xbc, 0x26,
	0x5d, 0x4a, 0xde, 0xdf, 0x4a, 0x50, 0xc1, 0xab, 0x61, 0x38, 0xcc, 0x36, 0xd6, 0xad, 0x59, 0x36,
	0xad, 0xb9, 0x00, 0x57, 0x9c, 0x38, 0x87, 0x72, 0x63, 0x4d, 0xd8, 0xe2, 0x87, 0xdc, 0x86, 0xd1,
	0xe8, 0xa2, 0xcb, 0x2a, 0xa3, 0xfc, 0x36, 0x30, 0x27, 0x74, 0x41, 0xc9, 0x27, 0x17, 0x5d, 0x66,
	0x73, 0x30, 0x3d, 0x84, 0x25, 0x3e, 0x8b, 0x77, 0xa4, 0x4c, 0xcc, 0x4f, 0x58, 0xe7, 0x1d, 0xf1,
	0x73, 0x61, 0x79, 0xd7, 0xf1, 0x9a, 0xed, 0x1c, 0x86, 0x97, 0x39, 0x13, 0xde, 0x85, 0x71, 0xd7,
	0x8b, 0x58, 0xd0, 0x73, 0xda, 0x9c, 0xf3, 0xb4, 0xac, 0x1e, 0xd4, 0x71, 0xd4, 0x56, 0x70, 0xba,
	0x2d, 0x63, 0xec, 0x1e, 0xeb, 0x46, 0xaf, 0xff, 0x1f, 0x71, 0xf4, 0x73, 0x58, 0x39, 0xf2, 0x43,
	0x37, 0xf6, 0xcb, 0xac, 0xbe, 0x85, 0xfb, 0x21, 0xbe, 0xf3, 0x2c, 0x8a, 0x55, 0xd8, 0xb9, 0xc0,
	0x20, 0x30, 0xc4, 0x1c, 0xcd, 0x1d, 0x53, 0x1e, 0xb8, 0x63, 0xe2, 0xfb, 0xbc, 0xdf, 0x65, 0x62,
	0x73, 0x8d, 0xdb, 0xfc, 0x9b, 0x3e, 0x91, 0x7e, 0x90, 0x68, 0x90, 0xb8, 0x35, 0x77, 0xfd, 0x94,
	0x5b, 0x0b, 0xdf, 0x47, 0x50, 0x1c, 0x03, 0x24, 0xf9, 0x90, 0xd7, 0xb5, 0x77, 0xa2, 0xfd, 0xe3,
	0xc4, 0x7e, 0x99, 0x18, 0x30, 0x58, 0x79, 0x07, 0x56, 0xf8, 0x80, 0x9c, 0xfa, 0xb6, 0xd7, 0xac,
	0x37, 0x87, 0x59, 0x81, 0xf5, 0x24, 0x58, 0x94, 0xcd, 0x59, 0xca, 0xa0, 0xf1, 0x15, 0x58, 0x79,
	0x22, 0x92, 0xf0, 0xcc, 0x11, 0xcd, 0xf0, 0x2c, 0x94, 0x14, 0x10, 0xfa, 0x15, 0x2c, 0x23, 0x83,
	0xbc, 0x73, 0x65, 0x50, 0x74, 0xae, 0x54, 0x00, 0xfa, 0x04, 0x2a, 0x59, 0x06, 0x97, 0x97, 0xff,
	0x25, 0xcc, 0x60, 0xf2, 0x56, 0x54, 0x1f, 0xc1, 0x18, 0xe6, 0x64, 0x34, 0xae, 0x99, 0xc6, 0x24,
	0x90, 0xfe, 0xbd, 0x04, 0xd3, 0xb8, 0x87, 0x87, 0x31, 0xea, 0x06, 0x4c, 0x87, 0xae, 0xd7, 0x60,
	0x27, 0x6e, 0x87, 0x85, 0x91, 0xd3, 0xe9, 0x72, 0xdb, 0x8e, 0x08, 0xcc, 0xd9, 0x5f, 0xd8, 0x29,
	0xa8, 0xb1, 0xd5, 0x47, 0x06, 0x6c, 0xf5, 0x2f, 0x61, 0x46, 0x69, 0x94, 0xcc, 0xa6, 0x21, 0x86,
	0xcc, 0xd9, 0x08, 0x3c, 0x5b, 0x02, 0xe9, 0x89, 0xcc, 0xe8, 0x3c, 0x4a, 0x0c, 0x33, 0x21, 0x1e,
	0x00, 0xdf, 0x72, 0x32, 0x3e, 0x95, 0x51, 0x5b, 0xfd, 0xd3, 0x7f, 0x95, 0xe4, 0xe1, 0x08, 0xd9,
	0xa2, 0x56, 0xfd, 0x82, 0x26, 0x85, 0x91, 0xd3, 0xb3, 0x8b, 0x4a, 0x59, 0x3f, 0x30, 0x1d, 0x05,
	0x6e, 0x83, 0xf1, 0x33, 0xa3, 0x1d, 0x03, 0xc9, 0x2d, 0x18, 0x0d, 0x59, 0x3b, 0x36, 0x48, 0x3e,
	0x12, 0x87, 0x92, 0x8f, 0x61, 0xa2, 0x2d, 0x8f, 0x45, 0x3c, 0x61, 0xa4, 0x92, 0x57, 0x02, 0xa5,
	0xed, 0x24, 0xfb, 0xbd, 0xff, 0x48, 0x15, 0x47, 0xa5, 0xb4, 0xb4, 0x61, 0x92, 0xed, 0x0f, 0xb0,
	0xac, 0xc2, 0xf1, 0xd0, 0x81, 0xa9, 0xdf, 0xf1, 0xfe, 0x6b, 0xa8, 0x64, 0x19, 0xa3, 0x66, 0x9f,
	0xc0, 0x44, 0x57, 0xc2, 0x50, 0x39, 0x74, 0x44, 0x49, 0x62, 0x27, 0x08, 0xb4, 0x06, 0xb3, 0x2f,
	0x59, 0xcb, 0x89, 0xdd, 0x58, 0x2f, 0x15, 0x47, 0xca, 0xe9, 0x63, 0xed, 0x46, 0xec, 0x64, 0x80,
	0xbe, 0x04, 0x38, 0x32, 0xa2, 0x61, 0xf8, 0xc6, 0x15, 0x68, 0xa3, 0x36, 0xff, 0x8e, 0x0f, 0x04,
	0x6d, 0xb7, 0xe3, 0x46, 0xe8, 0x65, 0xe2, 0x87, 0x5c, 0x07, 0x68, 0xb2, 0xb0, 0xc1, 0xbc, 0xa6,
	0xeb, 0xb5, 0x30, 0x7a, 0x6a, 0x23, 0xf4, 0x3e, 0x4c, 0xe1, 0x49, 0x20, 0x0a, 0x98, 0xd3, 0xb9,
	0x5c, 0xe8, 0xbc, 0x0f, 0x53, 0x98, 0xee, 0x15, 0xd1, 0xe0, 0x65, 0xf9, 0x6b, 0x09, 0x16, 0xb8,
	0xcd, 0xe4, 0x41, 0xe8, 0xe7, 0x9d, 0x18, 0xe5, 0x49, 0x67, 0xa4, 0xef, 0x49, 0x27, 0x39, 0x26,
	0x8d, 0x6a, 0xc7, 0x24, 0xba, 0x03, 0x8b, 0x29, 0x55, 0x70, 0x11, 0x3e, 0x86, 0x71, 0x07, 0xc7,
	0x70, 0x2e, 0xd7, 0x0c, 0xce, 0xb6, 0x02, 0xd3, 0xba, 0xbc, 0x61, 0xa5, 0xe7, 0xd3, 0x6f, 0xf7,
	0x2a, 0x75, 0xca, 0xba, 0x3a, 0xbb, 0xf2, 0xbe, 0xf5, 0x73, 0xf4, 0xf9, 0x47, 0x09, 0x96, 0xb0,
	0x9a, 0x2f, 0x6f, 0xed, 0x97, 0x77, 0xfb, 0x35, 0x3d, 0x9b, 0x08, 0xdd, 0x92, 0x01, 0xf2, 0x00,
	0xc6, 0xe5, 0xb5, 0x1e, 0xcf, 0xe6, 0xf3, 0x66, 0x9d, 0xf9, 0x84, 0x05, 0x9d, 0x50, 0x70, 0x5d,
	0x2f, 0xd9, 0x0a, 0x99, 0xb6, 0x60, 0x39, 0xa3, 0x52, 0x9f, 0xee, 0xc6, 0x17, 0x30, 0xd3, 0x15,
	0x7e, 0x29, 0xd1, 0x31, 0x5c, 0x4c, 0x9b, 0xe2, 0xec, 0x34, 0x1a, 0x7d, 0x0c, 0x04, 0x05, 0xf1,
	0x82, 0xa8, 0x2a, 0x54, 0x8c, 0xf6, 0x7c, 0x55, 0xa6, 0xd2, 0x2a, 0xa6, 0x4a, 0x55, 0x0e, 0x8f,
	0xef, 0xa8, 0x06, 0x75, 0x1f, 0x15, 0xaf, 0x23, 0xcb, 0x72, 0x9a, 0x25, 0xb2, 0x3a, 0x84, 0x59,
	0x4c, 0xb8, 0xc6, 0xf5, 0xcd, 0xb8, 0x55, 0x28, 0xe9, 0x72, 0x38, 0xde, 0x02, 0x3d, 0x16, 0x84,
	0x32, 0x3e, 0x8e, 0xda, 0xf2, 0x97, 0x3e, 0x55, 0xa7, 0x14, 0x95, 0xc0, 0x13, 0xc6, 0x77, 0x60,
	0x32, 0x48, 0x46, 0x53, 0xcc, 0x75, 0x10, 0xed, 0xe0, 0x39, 0xe0, 0xa5, 0x60, 0x1b, 0x0e, 0xa7,
	0xde, 0xd0, 0x11, 0x5c, 0x9e, 0xcc, 0xa4, 0xb8, 0xa1, 0x4e, 0x66, 0xf7, 0xfe, 0x7d, 0x05, 0xc6,
	0xb0, 0x8d, 0x4b, 0x0e, 0xd5, 0xc2, 0x6a, 0x8d, 0x27, 0xb2, 0xcc, 0x85, 0x67, 0x5b, 0x51, 0xd6,
	0x0d, 0xa1, 0x55, 0x71, 0x53, 0x2d, 0xe1, 0xa7, 0xf5, 0x9e, 0x90, 0x5f, 0xb6, 0x1b, 0x65, 0xf2,
	0xcb, 0x6b, 0xab, 0x7d, 0x0b, 0x73, 0x99, 0x16, 0x1a, 0x59, 0xe2, 0x54, 0x99, 0x4e, 0x94, 0x75,
	0x5d, 0xe7, 0x96, 0xd3, 0x72, 0xfb, 0x11, 0xe6, 0x73, 0x9a, 0x89, 0x44, 0x28, 0x51, 0xdc, 0xb5,
	0xb4, 0xd6, 0x8b, 0x11, 0x90, 0xf3, 0x03, 0x18, 0x97, 0x3d, 0x52, 0xb2, 0xc0, 0xb1, 0x53, 0x1d,
	0x57, 0x6b, 0x31, 0x35, 0x8a, 0x84, 0x36, 0xcc, 0x65, 0x5a, 0xba, 0xe4, 0x03, 0xcd, 0xfc, 0xd9,
	0x56, 0x31, 0x4e, 0xb3, 0xb8, 0x13, 0x7c, 0x00, 0x33, 0xa9, 0xa8, 0x40, 0x56, 0x75, 0xcb, 0xa4,
	0xc2, 0x97, 0xb5, 0x96, 0x0f, 0x44, 0x6e, 0x5b, 0x30, 0xa9, 0x6d, 0x5e, 0x5c, 0xca, 0x6c, 0x30,
	0xb0, 0x2a, 0x59, 0x40, 0x62, 0xf6, 0x9c, 0x7e, 0x39, 0x91, 0x6b, 0x5f, 0xd4, 0x8b, 0x47, 0xb3,
	0xf7, 0x69, 0xb5, 0xdf, 0xfb, 0xe7, 0x1a, 0x4c, 0xa1, 0x27, 0xff, 0xd4, 0x74, 0x22, 0x87, 0xd4,
	0x61, 0xda, 0x8c, 0xf4, 0x44, 0x14, 0xcf, 0x73, 0x33, 0x89, 0xb5, 0x9a, 0x0b, 0x43, 0xad, 0x9f,
	0xc1, 0x35, 0x23, 0x87, 0x91, 0x15, 0xdc, 0x91, 0xd9, 0x14, 0x6b, 0x59, 0x79, 0x20, 0xe4, 0xf3,
	0x19, 0x8c, 0xe1, 0xa9, 0x98, 0xcc, 0xcb, 0x6d, 0xa0, 0x9d, 0xda, 0xad, 0x05, 0x73, 0x10, 0xa9,
	0xd4, 0x44, 0x64, 0x89, 0xd0, 0x98, 0x48, 0xaa, 0xe8, 0x68, 0x4c, 0x24, 0x53, 0x53, 0xfc, 0x0a,
	0x26, 0xb5, 0x0a, 0x21, 0x59, 0xda, 0x10, 0xaf, 0x2a, 0x36, 0xe4, 0xab, 0x8a, 0x8d, 0xa7, 0x9d,
	0x6e, 0x74, 0x81, 0xeb, 0x97, 0x57, 0x4b, 0x7c, 0x02, 0x90, 0x94, 0xdb, 0x70, 0xf3, 0x65, 0x0a,
	0x77, 0xd6, 0x72, 0x66, 0x3c, 0x71, 0x20, 0xed, 0x10, 0x4e, 0x74, 0x3c, 0xfd, 0xb4, 0x6f, 0x28,
	0x60, 0x9e, 0xd7, 0x1f, 0xc0, 0x18, 0xea, 0x55, 0xa8, 0xfd, 0x82, 0xae, 0xbd, 0x22, 0xfc, 0x1e,
	0x48, 0xe6, 0x82, 0xb8, 0x47, 0xc4, 0xfe, 0x29, 0xbc, 0x9c, 0x62, 0x50, 0xea, 0x73, 0xb3, 0x7c,
	0xa1, 0x92, 0x90, 0x4a, 0x1a, 0x64, 0x4d, 0x27, 0x4a, 0xdf, 0x26, 0xad, 0x0f, 0x0a, 0xa0, 0xc9,
	0x6a, 0x9b, 0x75, 0x02, 0x5c, 0xed, 0xdc, 0xf2, 0x05, 0xae, 0x76, 0x41, 0x61, 0xe1, 0x19, 0x5c,
	0x33, 0x2e, 0xed, 0xe8, 0xb6, 0x79, 0x75, 0x04, 0xcb, 0xca, 0x03, 0x21, 0x9f, 0x2a, 0x4c, 0xa8,
	0x44, 0x4b, 0x16, 0x75, 0xf5, 0x93, 0x25, 0xd7, 0xb3, 0x0b, 0xd9, 0x56, 0xb6, 0xd6, 0x32, 0xa9,
	0x69, 0xeb, 0x6c, 0x8a, 0x35, 0x59, 0x1c, 0xc2, 0x5c, 0x26, 0x8b, 0x12, 0xcd, 0x74, 0x39, 0xd9,
	0x55, 0x9f, 0x43, 0x26, 0x1b, 0xee, 0xc2, 0x94, 0x5e, 0xfd, 0x27, 0xca, 0xc3, 0xd2, 0x7d, 0x09,
	0x6b, 0x25, 0x07, 0x92, 0x38, 0x1f, 0x96, 0x70, 0x07, 0x38, 0x5f, 0xba, 0xd0, 0xfb, 0x10, 0x26,
	0x54, 0xcd, 0x18, 0x2d, 0x98, 0xae, 0x3c, 0x5b, 0x4b, 0xe9, 0xe1, 0xc4, 0xc3, 0xd2, 0x57, 0x21,
	0xf4, 0xb0, 0x82, 0xab, 0x17, 0x7a, 0x58, 0xe1, 0xfd, 0xe9, 0x21, 0x4c, 0xa8, 0x1a, 0x3d, 0x2a,
	0x93, 0xae, 0xf5, 0xa3, 0x32, 0xd9, 0x52, 0x7e, 0x1d, 0xa6, 0xcd, 0xfb, 0x22, 0x7a, 0x67, 0xee,
	0x95, 0x15, 0xbd, 0xb3, 0xe0, 0x82, 0xf9, 0x0c, 0xae, 0x19, 0x65, 0x5e, 0xf4, 0xce, 0xbc, 0x62,
	0xb1, 0x65, 0xe5, 0x81, 0xb2, 0x7c, 0x74, 0x2f, 0xcf, 0xab, 0x98, 0xa7, 0xf8, 0x98, 0x66, 0xd9,
	0x85, 0x29, 0xfd, 0x51, 0x02, 0x7a, 0x48, 0xce, 0x2b, 0x0e, 0xf4, 0x90, 0xdc, 0x67, 0x18, 0x3f,
	0x9a, 0xef, 0x3e, 0xa4, 0x4a, 0x37, 0x32, 0x14, 0x29, 0xc5, 0xd6, 0x8b, 0x11, 0x92, 0x4c, 0x9e,
	0x7a, 0xae, 0x80, 0x99, 0x3c, 0xff, 0x01, 0x04, 0x66, 0xf2, 0xa2, 0x17, 0x0e, 0xbf, 0x87, 0xc5,
	0xdc, 0xd7, 0x05, 0xe4, 0xa6, 0x24, 0x2b, 0x7c, 0xdb, 0x60, 0xd1, 0x7e, 0x28, 0xc8, 0xbf, 0x05,
	0x95, 0xa2, 0x46, 0x3f, 0xb9, 0x25, 0xe9, 0xfb, 0x3d, 0x48, 0xb0, 0x6e, 0x0f, 0xc0, 0x42, 0x41,
	0x3d, 0x7c, 0x26, 0x51, 0xd4, 0x99, 0x27, 0x1f, 0x27, 0xda, 0x0e, 0x78, 0x27, 0x60, 0xdd, 0xbd,
	0x0c, 0x2a, 0xca, 0xfd, 0x2d, 0x7f, 0x87, 0x93, 0xe9, 0xae, 0x93, 0x75, 0xcd, 0x38, 0xb9, 0x9d,
	0x7d, 0xeb, 0x66, 0x1f, 0x0c, 0x63, 0xad, 0xf5, 0x76, 0x79, 0xb2, 0xd6, 0x39, 0x6d, 0xf8, 0x64,
	0xad, 0x73, 0x3b, 0xec, 0x4e, 0xaa, 0x7d, 0x9f, 0x24, 0x2a, 0x9a, 0xa5, 0xcb, 0xa4, 0xab, 0x0f,
	0xfb, 0xe2, 0xa8, 0xbd, 0x33, 0x87, 0xed, 0xe7, 0xa4, 0x4d, 0xde, 0x27, 0x44, 0xe6, 0x34, 0xd4,
	0x6b, 0x25, 0x62, 0xc3, 0x62, 0x6e, 0x33, 0x1d, 0x7d, 0xb2, 0x5f, 0xa3, 0xbd, 0x90, 0xe7, 0x96,
	0x52, 0x2c, 0xe9, 0x8b, 0xcb, 0x34, 0x52, 0xd0, 0x2f, 0xb7, 0xb4, 0x9b, 0x66, 0xad, 0x44, 0x9e,
	0xc1, 0x42, 0x5e, 0x83, 0x1e, 0x17, 0xba, 0x4f, 0xef, 0x3e, 0xc5, 0x67, 0x13, 0xe0, 0x38, 0x72,
	0x22, 0x37, 0x8c, 0xdc, 0x46, 0x71, 0xfa, 0xc0, 0x02, 0xa2, 0x86, 0xf9, 0x18, 0x26, 0xe3, 0x4d,
	0x8c, 0x25, 0xac, 0x42, 0x42, 0x11, 0xc7, 0x33, 0x95, 0xae, 0x5d, 0x98, 0xcb, 0x34, 0xc3, 0x70,
	0xfe, 0x45, 0x4d, 0x32, 0xcb, 0x2c, 0x7b, 0x70, 0x23, 0xce, 0xa6, 0x5b, 0x44, 0x98, 0x81, 0x0a,
	0x3a, 0x47, 0x96, 0x51, 0xda, 0xad, 0x95, 0xc8, 0x11, 0x2f, 0xe0, 0x64, 0x1f, 0x18, 0xe0, 0xd2,
	0xf6, 0x7b, 0x7c, 0x60, 0xe5, 0xf4, 0xee, 0x6b, 0x25, 0xf2, 0x9c, 0xf7, 0xff, 0x33, 0xbd, 0x24,
	0x5c, 0x96, 0x3e, 0x6d, 0x26, 0x6b, 0xce, 0xe8, 0x7c, 0xc7, 0x28, 0xb5, 0x12, 0x39, 0x90, 0xec,
	0xcc, 0xf6, 0xbf, 0xc1, 0x2e, 0xf7, 0x65, 0x80, 0x95, 0x69, 0xa4, 0xd7, 0x4a, 0x64, 0x17, 0x66,
	0x52, 0x3d, 0x3f, 0xa2, 0x1f, 0xd4, 0x72, 0x54, 0xd2, 0x80, 0xbc, 0xce, 0xc7, 0x1d, 0x8f, 0x64,
	0x5b, 0x5d, 0x78, 0x88, 0x2a, 0xec, 0x81, 0x59, 0xa9, 0x4a, 0xa8, 0x50, 0x26, 0xd5, 0x30, 0x24,
	0x7a, 0x5e, 0x2e, 0x50, 0x46, 0x2f, 0x3a, 0xd6, 0x4a, 0xe4, 0x10, 0x2c, 0x7e, 0xbd, 0x7c, 0x95,
	0x24, 0x5e, 0x8d, 0x5f, 0x91, 0x53, 0x2e, 0xa9, 0xe2, 0xa4, 0x41, 0x59, 0x2b, 0x91, 0x0e, 0x7f,
	0x83, 0x58, 0xf0, 0x7e, 0x93, 0x7c, 0xa4, 0x42, 0x64, 0xdf, 0x57, 0xa1, 0xd6, 0x2f, 0x07, 0xe2,
	0x09, 0x81, 0x3b, 0xb7, 0x7f, 0xf3, 0x61, 0xc3, 0x6f, 0x32, 0xae, 0x0e, 0xd7, 0xb1, 0xe1, 0xb7,
	0x37, 0x5c, 0xf1, 0x4e, 0xbd, 0xaa, 0x1e, 0xb4, 0x9f, 0x5e, 0xe5, 0x9f, 0xf7, 0xff, 0x17, 0x00,
	0x00, 0xff, 0xff, 0xc7, 0xb6, 0x37, 0xfa, 0xe4, 0x2e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradingClient is the client API for Trading service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradingClient interface {
	// Prepare a submit order request
	PrepareSubmitOrder(ctx context.Context, in *SubmitOrderRequest, opts ...grpc.CallOption) (*PrepareSubmitOrderResponse, error)
	// Cancel an Order
	PrepareCancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*PrepareCancelOrderResponse, error)
	// Amend an Order
	PrepareAmendOrder(ctx context.Context, in *AmendOrderRequest, opts ...grpc.CallOption) (*PrepareAmendOrderResponse, error)
	// Request balance increase
	NotifyTraderAccount(ctx context.Context, in *NotifyTraderAccountRequest, opts ...grpc.CallOption) (*NotifyTraderAccountResponse, error)
	// Request withdrawal
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
	// Submit a signed transaction
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error)
	// Prepare proposal that can be sent out to the chain (via SubmitTransaction)
	PrepareProposal(ctx context.Context, in *PrepareProposalRequest, opts ...grpc.CallOption) (*PrepareProposalResponse, error)
	// Prepare a vote to be put on the chain (via SubmitTransaction)
	PrepareVote(ctx context.Context, in *PrepareVoteRequest, opts ...grpc.CallOption) (*PrepareVoteResponse, error)
	// chain events
	PropagateChainEvent(ctx context.Context, in *PropagateChainEventRequest, opts ...grpc.CallOption) (*PropagateChainEventResponse, error)
}

type tradingClient struct {
	cc *grpc.ClientConn
}

func NewTradingClient(cc *grpc.ClientConn) TradingClient {
	return &tradingClient{cc}
}

func (c *tradingClient) PrepareSubmitOrder(ctx context.Context, in *SubmitOrderRequest, opts ...grpc.CallOption) (*PrepareSubmitOrderResponse, error) {
	out := new(PrepareSubmitOrderResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PrepareSubmitOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PrepareCancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*PrepareCancelOrderResponse, error) {
	out := new(PrepareCancelOrderResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PrepareCancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PrepareAmendOrder(ctx context.Context, in *AmendOrderRequest, opts ...grpc.CallOption) (*PrepareAmendOrderResponse, error) {
	out := new(PrepareAmendOrderResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PrepareAmendOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) NotifyTraderAccount(ctx context.Context, in *NotifyTraderAccountRequest, opts ...grpc.CallOption) (*NotifyTraderAccountResponse, error) {
	out := new(NotifyTraderAccountResponse)
	err := c.cc.Invoke(ctx, "/api.trading/NotifyTraderAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/api.trading/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error) {
	out := new(SubmitTransactionResponse)
	err := c.cc.Invoke(ctx, "/api.trading/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PrepareProposal(ctx context.Context, in *PrepareProposalRequest, opts ...grpc.CallOption) (*PrepareProposalResponse, error) {
	out := new(PrepareProposalResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PrepareProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PrepareVote(ctx context.Context, in *PrepareVoteRequest, opts ...grpc.CallOption) (*PrepareVoteResponse, error) {
	out := new(PrepareVoteResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PrepareVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PropagateChainEvent(ctx context.Context, in *PropagateChainEventRequest, opts ...grpc.CallOption) (*PropagateChainEventResponse, error) {
	out := new(PropagateChainEventResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PropagateChainEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TradingServer is the server API for Trading service.
type TradingServer interface {
	// Prepare a submit order request
	PrepareSubmitOrder(context.Context, *SubmitOrderRequest) (*PrepareSubmitOrderResponse, error)
	// Cancel an Order
	PrepareCancelOrder(context.Context, *CancelOrderRequest) (*PrepareCancelOrderResponse, error)
	// Amend an Order
	PrepareAmendOrder(context.Context, *AmendOrderRequest) (*PrepareAmendOrderResponse, error)
	// Request balance increase
	NotifyTraderAccount(context.Context, *NotifyTraderAccountRequest) (*NotifyTraderAccountResponse, error)
	// Request withdrawal
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
	// Submit a signed transaction
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*SubmitTransactionResponse, error)
	// Prepare proposal that can be sent out to the chain (via SubmitTransaction)
	PrepareProposal(context.Context, *PrepareProposalRequest) (*PrepareProposalResponse, error)
	// Prepare a vote to be put on the chain (via SubmitTransaction)
	PrepareVote(context.Context, *PrepareVoteRequest) (*PrepareVoteResponse, error)
	// chain events
	PropagateChainEvent(context.Context, *PropagateChainEventRequest) (*PropagateChainEventResponse, error)
}

func RegisterTradingServer(s *grpc.Server, srv TradingServer) {
	s.RegisterService(&_Trading_serviceDesc, srv)
}

func _Trading_PrepareSubmitOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PrepareSubmitOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PrepareSubmitOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PrepareSubmitOrder(ctx, req.(*SubmitOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PrepareCancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PrepareCancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PrepareCancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PrepareCancelOrder(ctx, req.(*CancelOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PrepareAmendOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AmendOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PrepareAmendOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PrepareAmendOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PrepareAmendOrder(ctx, req.(*AmendOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_NotifyTraderAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyTraderAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).NotifyTraderAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/NotifyTraderAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).NotifyTraderAccount(ctx, req.(*NotifyTraderAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PrepareProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PrepareProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PrepareProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PrepareProposal(ctx, req.(*PrepareProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PrepareVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PrepareVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PrepareVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PrepareVote(ctx, req.(*PrepareVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PropagateChainEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropagateChainEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PropagateChainEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PropagateChainEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PropagateChainEvent(ctx, req.(*PropagateChainEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trading_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.trading",
	HandlerType: (*TradingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PrepareSubmitOrder",
			Handler:    _Trading_PrepareSubmitOrder_Handler,
		},
		{
			MethodName: "PrepareCancelOrder",
			Handler:    _Trading_PrepareCancelOrder_Handler,
		},
		{
			MethodName: "PrepareAmendOrder",
			Handler:    _Trading_PrepareAmendOrder_Handler,
		},
		{
			MethodName: "NotifyTraderAccount",
			Handler:    _Trading_NotifyTraderAccount_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Trading_Withdraw_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _Trading_SubmitTransaction_Handler,
		},
		{
			MethodName: "PrepareProposal",
			Handler:    _Trading_PrepareProposal_Handler,
		},
		{
			MethodName: "PrepareVote",
			Handler:    _Trading_PrepareVote_Handler,
		},
		{
			MethodName: "PropagateChainEvent",
			Handler:    _Trading_PropagateChainEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api/trading.proto",
}

// TradingDataClient is the client API for TradingData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradingDataClient interface {
	// Get a list of Accounts by Market
	MarketAccounts(ctx context.Context, in *MarketAccountsRequest, opts ...grpc.CallOption) (*MarketAccountsResponse, error)
	// Get a list of Accounts by Party
	PartyAccounts(ctx context.Context, in *PartyAccountsRequest, opts ...grpc.CallOption) (*PartyAccountsResponse, error)
	// Get a list of Candles by Market
	Candles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error)
	// Get Market Data by MarketID
	MarketDataByID(ctx context.Context, in *MarketDataByIDRequest, opts ...grpc.CallOption) (*MarketDataByIDResponse, error)
	// Get a list of Market Data
	MarketsData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MarketsDataResponse, error)
	// Get a Market by ID
	MarketByID(ctx context.Context, in *MarketByIDRequest, opts ...grpc.CallOption) (*MarketByIDResponse, error)
	// Get Market Depth
	MarketDepth(ctx context.Context, in *MarketDepthRequest, opts ...grpc.CallOption) (*MarketDepthResponse, error)
	// Get a list of Markets
	Markets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MarketsResponse, error)
	// Get an Order by Market and OrderID
	OrderByMarketAndID(ctx context.Context, in *OrderByMarketAndIdRequest, opts ...grpc.CallOption) (*OrderByMarketAndIdResponse, error)
	// Get an Order by Pending Order reference (UUID)
	OrderByReference(ctx context.Context, in *OrderByReferenceRequest, opts ...grpc.CallOption) (*OrderByReferenceResponse, error)
	// Get a list of Orders by Market
	OrdersByMarket(ctx context.Context, in *OrdersByMarketRequest, opts ...grpc.CallOption) (*OrdersByMarketResponse, error)
	// Get a list of Orders by Party
	OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error)
	// Get a specific order by orderID
	OrderByID(ctx context.Context, in *OrderByIDRequest, opts ...grpc.CallOption) (*proto1.Order, error)
	// Get a specific order by referenceID
	OrderByReferenceID(ctx context.Context, in *OrderByReferenceIDRequest, opts ...grpc.CallOption) (*proto1.Order, error)
	// Get all versions of the order by its orderID
	OrderVersionsByID(ctx context.Context, in *OrderVersionsByIDRequest, opts ...grpc.CallOption) (*OrderVersionsResponse, error)
	// Get Margin Levels by PartyID
	MarginLevels(ctx context.Context, in *MarginLevelsRequest, opts ...grpc.CallOption) (*MarginLevelsResponse, error)
	// Get a list of Parties
	Parties(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PartiesResponse, error)
	// Get a Party by ID
	PartyByID(ctx context.Context, in *PartyByIDRequest, opts ...grpc.CallOption) (*PartyByIDResponse, error)
	// Get a list of Positions by Party
	PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error)
	// Get latest Trade
	LastTrade(ctx context.Context, in *LastTradeRequest, opts ...grpc.CallOption) (*LastTradeResponse, error)
	// Get a list of Trades by Market
	TradesByMarket(ctx context.Context, in *TradesByMarketRequest, opts ...grpc.CallOption) (*TradesByMarketResponse, error)
	// Get a list of Trades by Order
	TradesByOrder(ctx context.Context, in *TradesByOrderRequest, opts ...grpc.CallOption) (*TradesByOrderResponse, error)
	// Get a list of Trades by Party
	TradesByParty(ctx context.Context, in *TradesByPartyRequest, opts ...grpc.CallOption) (*TradesByPartyResponse, error)
	// Get governance data (proposals and votes) for all proposals
	GetProposals(ctx context.Context, in *GetProposalsRequest, opts ...grpc.CallOption) (*GetProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals by party authoring them
	GetProposalsByParty(ctx context.Context, in *GetProposalsByPartyRequest, opts ...grpc.CallOption) (*GetProposalsByPartyResponse, error)
	// Get votes by party casting them
	GetVotesByParty(ctx context.Context, in *GetVotesByPartyRequest, opts ...grpc.CallOption) (*GetVotesByPartyResponse, error)
	// Get governance data (proposals and votes) for proposals that aim creating new markets
	GetNewMarketProposals(ctx context.Context, in *GetNewMarketProposalsRequest, opts ...grpc.CallOption) (*GetNewMarketProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals that aim updating markets
	GetUpdateMarketProposals(ctx context.Context, in *GetUpdateMarketProposalsRequest, opts ...grpc.CallOption) (*GetUpdateMarketProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals that aim updating Vega network parameters
	GetNetworkParametersProposals(ctx context.Context, in *GetNetworkParametersProposalsRequest, opts ...grpc.CallOption) (*GetNetworkParametersProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals aiming to create new assets
	GetNewAssetProposals(ctx context.Context, in *GetNewAssetProposalsRequest, opts ...grpc.CallOption) (*GetNewAssetProposalsResponse, error)
	// Get governance data (proposals and votes) for a proposal located by ID
	GetProposalByID(ctx context.Context, in *GetProposalByIDRequest, opts ...grpc.CallOption) (*GetProposalByIDResponse, error)
	// Get governance data (proposals and votes) for a proposal located by reference
	GetProposalByReference(ctx context.Context, in *GetProposalByReferenceRequest, opts ...grpc.CallOption) (*GetProposalByReferenceResponse, error)
	// Subscribe to a stream of all governance updates
	ObserveGovernance(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (TradingData_ObserveGovernanceClient, error)
	// Subscribe to a stream of proposal updates
	ObservePartyProposals(ctx context.Context, in *ObservePartyProposalsRequest, opts ...grpc.CallOption) (TradingData_ObservePartyProposalsClient, error)
	// Subscribe to a stream of votes cast by a specific party
	ObservePartyVotes(ctx context.Context, in *ObservePartyVotesRequest, opts ...grpc.CallOption) (TradingData_ObservePartyVotesClient, error)
	// Subscribe to a stream of proposal votes
	ObserveProposalVotes(ctx context.Context, in *ObserveProposalVotesRequest, opts ...grpc.CallOption) (TradingData_ObserveProposalVotesClient, error)
	// Get Statistics
	Statistics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*proto1.Statistics, error)
	// Get Time
	GetVegaTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VegaTimeResponse, error)
	// Subscribe to a stream of Accounts
	AccountsSubscribe(ctx context.Context, in *AccountsSubscribeRequest, opts ...grpc.CallOption) (TradingData_AccountsSubscribeClient, error)
	// Subscribe to a stream of Candles
	CandlesSubscribe(ctx context.Context, in *CandlesSubscribeRequest, opts ...grpc.CallOption) (TradingData_CandlesSubscribeClient, error)
	// Subscribe to a stream of Margin Levels
	MarginLevelsSubscribe(ctx context.Context, in *MarginLevelsSubscribeRequest, opts ...grpc.CallOption) (TradingData_MarginLevelsSubscribeClient, error)
	// Subscribe to a stream of Market Depth
	MarketDepthSubscribe(ctx context.Context, in *MarketDepthSubscribeRequest, opts ...grpc.CallOption) (TradingData_MarketDepthSubscribeClient, error)
	// Subscribe to a stream of Markets Data
	MarketsDataSubscribe(ctx context.Context, in *MarketsDataSubscribeRequest, opts ...grpc.CallOption) (TradingData_MarketsDataSubscribeClient, error)
	// Subscribe to a stream of Orders
	OrdersSubscribe(ctx context.Context, in *OrdersSubscribeRequest, opts ...grpc.CallOption) (TradingData_OrdersSubscribeClient, error)
	// Subscribe to a stream of Positions
	PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (TradingData_PositionsSubscribeClient, error)
	// Subscribe to a stream of Trades
	TradesSubscribe(ctx context.Context, in *TradesSubscribeRequest, opts ...grpc.CallOption) (TradingData_TradesSubscribeClient, error)
	// Subscribe to a stream of Transfer Responses
	TransferResponsesSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (TradingData_TransferResponsesSubscribeClient, error)
	// Get an aggregate of signature from all the node of the network
	GetNodeSignaturesAggregate(ctx context.Context, in *GetNodeSignaturesAggregateRequest, opts ...grpc.CallOption) (*GetNodeSignaturesAggregateResponse, error)
}

type tradingDataClient struct {
	cc *grpc.ClientConn
}

func NewTradingDataClient(cc *grpc.ClientConn) TradingDataClient {
	return &tradingDataClient{cc}
}

func (c *tradingDataClient) MarketAccounts(ctx context.Context, in *MarketAccountsRequest, opts ...grpc.CallOption) (*MarketAccountsResponse, error) {
	out := new(MarketAccountsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/MarketAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) PartyAccounts(ctx context.Context, in *PartyAccountsRequest, opts ...grpc.CallOption) (*PartyAccountsResponse, error) {
	out := new(PartyAccountsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/PartyAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) Candles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error) {
	out := new(CandlesResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/Candles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) MarketDataByID(ctx context.Context, in *MarketDataByIDRequest, opts ...grpc.CallOption) (*MarketDataByIDResponse, error) {
	out := new(MarketDataByIDResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/MarketDataByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) MarketsData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MarketsDataResponse, error) {
	out := new(MarketsDataResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/MarketsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) MarketByID(ctx context.Context, in *MarketByIDRequest, opts ...grpc.CallOption) (*MarketByIDResponse, error) {
	out := new(MarketByIDResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/MarketByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) MarketDepth(ctx context.Context, in *MarketDepthRequest, opts ...grpc.CallOption) (*MarketDepthResponse, error) {
	out := new(MarketDepthResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/MarketDepth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) Markets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MarketsResponse, error) {
	out := new(MarketsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/Markets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrderByMarketAndID(ctx context.Context, in *OrderByMarketAndIdRequest, opts ...grpc.CallOption) (*OrderByMarketAndIdResponse, error) {
	out := new(OrderByMarketAndIdResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrderByMarketAndID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrderByReference(ctx context.Context, in *OrderByReferenceRequest, opts ...grpc.CallOption) (*OrderByReferenceResponse, error) {
	out := new(OrderByReferenceResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrderByReference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrdersByMarket(ctx context.Context, in *OrdersByMarketRequest, opts ...grpc.CallOption) (*OrdersByMarketResponse, error) {
	out := new(OrdersByMarketResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrdersByMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error) {
	out := new(OrdersByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrdersByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrderByID(ctx context.Context, in *OrderByIDRequest, opts ...grpc.CallOption) (*proto1.Order, error) {
	out := new(proto1.Order)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrderByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrderByReferenceID(ctx context.Context, in *OrderByReferenceIDRequest, opts ...grpc.CallOption) (*proto1.Order, error) {
	out := new(proto1.Order)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrderByReferenceID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) OrderVersionsByID(ctx context.Context, in *OrderVersionsByIDRequest, opts ...grpc.CallOption) (*OrderVersionsResponse, error) {
	out := new(OrderVersionsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/OrderVersionsByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) MarginLevels(ctx context.Context, in *MarginLevelsRequest, opts ...grpc.CallOption) (*MarginLevelsResponse, error) {
	out := new(MarginLevelsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/MarginLevels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) Parties(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PartiesResponse, error) {
	out := new(PartiesResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/Parties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) PartyByID(ctx context.Context, in *PartyByIDRequest, opts ...grpc.CallOption) (*PartyByIDResponse, error) {
	out := new(PartyByIDResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/PartyByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error) {
	out := new(PositionsByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/PositionsByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) LastTrade(ctx context.Context, in *LastTradeRequest, opts ...grpc.CallOption) (*LastTradeResponse, error) {
	out := new(LastTradeResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/LastTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) TradesByMarket(ctx context.Context, in *TradesByMarketRequest, opts ...grpc.CallOption) (*TradesByMarketResponse, error) {
	out := new(TradesByMarketResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/TradesByMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) TradesByOrder(ctx context.Context, in *TradesByOrderRequest, opts ...grpc.CallOption) (*TradesByOrderResponse, error) {
	out := new(TradesByOrderResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/TradesByOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) TradesByParty(ctx context.Context, in *TradesByPartyRequest, opts ...grpc.CallOption) (*TradesByPartyResponse, error) {
	out := new(TradesByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/TradesByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetProposals(ctx context.Context, in *GetProposalsRequest, opts ...grpc.CallOption) (*GetProposalsResponse, error) {
	out := new(GetProposalsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetProposalsByParty(ctx context.Context, in *GetProposalsByPartyRequest, opts ...grpc.CallOption) (*GetProposalsByPartyResponse, error) {
	out := new(GetProposalsByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetProposalsByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetVotesByParty(ctx context.Context, in *GetVotesByPartyRequest, opts ...grpc.CallOption) (*GetVotesByPartyResponse, error) {
	out := new(GetVotesByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetVotesByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetNewMarketProposals(ctx context.Context, in *GetNewMarketProposalsRequest, opts ...grpc.CallOption) (*GetNewMarketProposalsResponse, error) {
	out := new(GetNewMarketProposalsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetNewMarketProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetUpdateMarketProposals(ctx context.Context, in *GetUpdateMarketProposalsRequest, opts ...grpc.CallOption) (*GetUpdateMarketProposalsResponse, error) {
	out := new(GetUpdateMarketProposalsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetUpdateMarketProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetNetworkParametersProposals(ctx context.Context, in *GetNetworkParametersProposalsRequest, opts ...grpc.CallOption) (*GetNetworkParametersProposalsResponse, error) {
	out := new(GetNetworkParametersProposalsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetNetworkParametersProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetNewAssetProposals(ctx context.Context, in *GetNewAssetProposalsRequest, opts ...grpc.CallOption) (*GetNewAssetProposalsResponse, error) {
	out := new(GetNewAssetProposalsResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetNewAssetProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetProposalByID(ctx context.Context, in *GetProposalByIDRequest, opts ...grpc.CallOption) (*GetProposalByIDResponse, error) {
	out := new(GetProposalByIDResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetProposalByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetProposalByReference(ctx context.Context, in *GetProposalByReferenceRequest, opts ...grpc.CallOption) (*GetProposalByReferenceResponse, error) {
	out := new(GetProposalByReferenceResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetProposalByReference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) ObserveGovernance(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (TradingData_ObserveGovernanceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[0], "/api.trading_data/ObserveGovernance", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataObserveGovernanceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_ObserveGovernanceClient interface {
	Recv() (*proto1.GovernanceData, error)
	grpc.ClientStream
}

type tradingDataObserveGovernanceClient struct {
	grpc.ClientStream
}

func (x *tradingDataObserveGovernanceClient) Recv() (*proto1.GovernanceData, error) {
	m := new(proto1.GovernanceData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) ObservePartyProposals(ctx context.Context, in *ObservePartyProposalsRequest, opts ...grpc.CallOption) (TradingData_ObservePartyProposalsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[1], "/api.trading_data/ObservePartyProposals", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataObservePartyProposalsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_ObservePartyProposalsClient interface {
	Recv() (*proto1.GovernanceData, error)
	grpc.ClientStream
}

type tradingDataObservePartyProposalsClient struct {
	grpc.ClientStream
}

func (x *tradingDataObservePartyProposalsClient) Recv() (*proto1.GovernanceData, error) {
	m := new(proto1.GovernanceData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) ObservePartyVotes(ctx context.Context, in *ObservePartyVotesRequest, opts ...grpc.CallOption) (TradingData_ObservePartyVotesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[2], "/api.trading_data/ObservePartyVotes", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataObservePartyVotesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_ObservePartyVotesClient interface {
	Recv() (*proto1.Vote, error)
	grpc.ClientStream
}

type tradingDataObservePartyVotesClient struct {
	grpc.ClientStream
}

func (x *tradingDataObservePartyVotesClient) Recv() (*proto1.Vote, error) {
	m := new(proto1.Vote)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) ObserveProposalVotes(ctx context.Context, in *ObserveProposalVotesRequest, opts ...grpc.CallOption) (TradingData_ObserveProposalVotesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[3], "/api.trading_data/ObserveProposalVotes", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataObserveProposalVotesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_ObserveProposalVotesClient interface {
	Recv() (*proto1.Vote, error)
	grpc.ClientStream
}

type tradingDataObserveProposalVotesClient struct {
	grpc.ClientStream
}

func (x *tradingDataObserveProposalVotesClient) Recv() (*proto1.Vote, error) {
	m := new(proto1.Vote)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) Statistics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*proto1.Statistics, error) {
	out := new(proto1.Statistics)
	err := c.cc.Invoke(ctx, "/api.trading_data/Statistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) GetVegaTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VegaTimeResponse, error) {
	out := new(VegaTimeResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetVegaTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingDataClient) AccountsSubscribe(ctx context.Context, in *AccountsSubscribeRequest, opts ...grpc.CallOption) (TradingData_AccountsSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[4], "/api.trading_data/AccountsSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataAccountsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_AccountsSubscribeClient interface {
	Recv() (*proto1.Account, error)
	grpc.ClientStream
}

type tradingDataAccountsSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataAccountsSubscribeClient) Recv() (*proto1.Account, error) {
	m := new(proto1.Account)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) CandlesSubscribe(ctx context.Context, in *CandlesSubscribeRequest, opts ...grpc.CallOption) (TradingData_CandlesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[5], "/api.trading_data/CandlesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataCandlesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_CandlesSubscribeClient interface {
	Recv() (*proto1.Candle, error)
	grpc.ClientStream
}

type tradingDataCandlesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataCandlesSubscribeClient) Recv() (*proto1.Candle, error) {
	m := new(proto1.Candle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) MarginLevelsSubscribe(ctx context.Context, in *MarginLevelsSubscribeRequest, opts ...grpc.CallOption) (TradingData_MarginLevelsSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[6], "/api.trading_data/MarginLevelsSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataMarginLevelsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_MarginLevelsSubscribeClient interface {
	Recv() (*proto1.MarginLevels, error)
	grpc.ClientStream
}

type tradingDataMarginLevelsSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataMarginLevelsSubscribeClient) Recv() (*proto1.MarginLevels, error) {
	m := new(proto1.MarginLevels)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) MarketDepthSubscribe(ctx context.Context, in *MarketDepthSubscribeRequest, opts ...grpc.CallOption) (TradingData_MarketDepthSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[7], "/api.trading_data/MarketDepthSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataMarketDepthSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_MarketDepthSubscribeClient interface {
	Recv() (*proto1.MarketDepth, error)
	grpc.ClientStream
}

type tradingDataMarketDepthSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataMarketDepthSubscribeClient) Recv() (*proto1.MarketDepth, error) {
	m := new(proto1.MarketDepth)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) MarketsDataSubscribe(ctx context.Context, in *MarketsDataSubscribeRequest, opts ...grpc.CallOption) (TradingData_MarketsDataSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[8], "/api.trading_data/MarketsDataSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataMarketsDataSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_MarketsDataSubscribeClient interface {
	Recv() (*proto1.MarketData, error)
	grpc.ClientStream
}

type tradingDataMarketsDataSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataMarketsDataSubscribeClient) Recv() (*proto1.MarketData, error) {
	m := new(proto1.MarketData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) OrdersSubscribe(ctx context.Context, in *OrdersSubscribeRequest, opts ...grpc.CallOption) (TradingData_OrdersSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[9], "/api.trading_data/OrdersSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataOrdersSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_OrdersSubscribeClient interface {
	Recv() (*OrdersStream, error)
	grpc.ClientStream
}

type tradingDataOrdersSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataOrdersSubscribeClient) Recv() (*OrdersStream, error) {
	m := new(OrdersStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (TradingData_PositionsSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[10], "/api.trading_data/PositionsSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataPositionsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_PositionsSubscribeClient interface {
	Recv() (*proto1.Position, error)
	grpc.ClientStream
}

type tradingDataPositionsSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataPositionsSubscribeClient) Recv() (*proto1.Position, error) {
	m := new(proto1.Position)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) TradesSubscribe(ctx context.Context, in *TradesSubscribeRequest, opts ...grpc.CallOption) (TradingData_TradesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[11], "/api.trading_data/TradesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataTradesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_TradesSubscribeClient interface {
	Recv() (*TradesStream, error)
	grpc.ClientStream
}

type tradingDataTradesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataTradesSubscribeClient) Recv() (*TradesStream, error) {
	m := new(TradesStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) TransferResponsesSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (TradingData_TransferResponsesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TradingData_serviceDesc.Streams[12], "/api.trading_data/TransferResponsesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingDataTransferResponsesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TradingData_TransferResponsesSubscribeClient interface {
	Recv() (*proto1.TransferResponse, error)
	grpc.ClientStream
}

type tradingDataTransferResponsesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingDataTransferResponsesSubscribeClient) Recv() (*proto1.TransferResponse, error) {
	m := new(proto1.TransferResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingDataClient) GetNodeSignaturesAggregate(ctx context.Context, in *GetNodeSignaturesAggregateRequest, opts ...grpc.CallOption) (*GetNodeSignaturesAggregateResponse, error) {
	out := new(GetNodeSignaturesAggregateResponse)
	err := c.cc.Invoke(ctx, "/api.trading_data/GetNodeSignaturesAggregate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TradingDataServer is the server API for TradingData service.
type TradingDataServer interface {
	// Get a list of Accounts by Market
	MarketAccounts(context.Context, *MarketAccountsRequest) (*MarketAccountsResponse, error)
	// Get a list of Accounts by Party
	PartyAccounts(context.Context, *PartyAccountsRequest) (*PartyAccountsResponse, error)
	// Get a list of Candles by Market
	Candles(context.Context, *CandlesRequest) (*CandlesResponse, error)
	// Get Market Data by MarketID
	MarketDataByID(context.Context, *MarketDataByIDRequest) (*MarketDataByIDResponse, error)
	// Get a list of Market Data
	MarketsData(context.Context, *empty.Empty) (*MarketsDataResponse, error)
	// Get a Market by ID
	MarketByID(context.Context, *MarketByIDRequest) (*MarketByIDResponse, error)
	// Get Market Depth
	MarketDepth(context.Context, *MarketDepthRequest) (*MarketDepthResponse, error)
	// Get a list of Markets
	Markets(context.Context, *empty.Empty) (*MarketsResponse, error)
	// Get an Order by Market and OrderID
	OrderByMarketAndID(context.Context, *OrderByMarketAndIdRequest) (*OrderByMarketAndIdResponse, error)
	// Get an Order by Pending Order reference (UUID)
	OrderByReference(context.Context, *OrderByReferenceRequest) (*OrderByReferenceResponse, error)
	// Get a list of Orders by Market
	OrdersByMarket(context.Context, *OrdersByMarketRequest) (*OrdersByMarketResponse, error)
	// Get a list of Orders by Party
	OrdersByParty(context.Context, *OrdersByPartyRequest) (*OrdersByPartyResponse, error)
	// Get a specific order by orderID
	OrderByID(context.Context, *OrderByIDRequest) (*proto1.Order, error)
	// Get a specific order by referenceID
	OrderByReferenceID(context.Context, *OrderByReferenceIDRequest) (*proto1.Order, error)
	// Get all versions of the order by its orderID
	OrderVersionsByID(context.Context, *OrderVersionsByIDRequest) (*OrderVersionsResponse, error)
	// Get Margin Levels by PartyID
	MarginLevels(context.Context, *MarginLevelsRequest) (*MarginLevelsResponse, error)
	// Get a list of Parties
	Parties(context.Context, *empty.Empty) (*PartiesResponse, error)
	// Get a Party by ID
	PartyByID(context.Context, *PartyByIDRequest) (*PartyByIDResponse, error)
	// Get a list of Positions by Party
	PositionsByParty(context.Context, *PositionsByPartyRequest) (*PositionsByPartyResponse, error)
	// Get latest Trade
	LastTrade(context.Context, *LastTradeRequest) (*LastTradeResponse, error)
	// Get a list of Trades by Market
	TradesByMarket(context.Context, *TradesByMarketRequest) (*TradesByMarketResponse, error)
	// Get a list of Trades by Order
	TradesByOrder(context.Context, *TradesByOrderRequest) (*TradesByOrderResponse, error)
	// Get a list of Trades by Party
	TradesByParty(context.Context, *TradesByPartyRequest) (*TradesByPartyResponse, error)
	// Get governance data (proposals and votes) for all proposals
	GetProposals(context.Context, *GetProposalsRequest) (*GetProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals by party authoring them
	GetProposalsByParty(context.Context, *GetProposalsByPartyRequest) (*GetProposalsByPartyResponse, error)
	// Get votes by party casting them
	GetVotesByParty(context.Context, *GetVotesByPartyRequest) (*GetVotesByPartyResponse, error)
	// Get governance data (proposals and votes) for proposals that aim creating new markets
	GetNewMarketProposals(context.Context, *GetNewMarketProposalsRequest) (*GetNewMarketProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals that aim updating markets
	GetUpdateMarketProposals(context.Context, *GetUpdateMarketProposalsRequest) (*GetUpdateMarketProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals that aim updating Vega network parameters
	GetNetworkParametersProposals(context.Context, *GetNetworkParametersProposalsRequest) (*GetNetworkParametersProposalsResponse, error)
	// Get governance data (proposals and votes) for proposals aiming to create new assets
	GetNewAssetProposals(context.Context, *GetNewAssetProposalsRequest) (*GetNewAssetProposalsResponse, error)
	// Get governance data (proposals and votes) for a proposal located by ID
	GetProposalByID(context.Context, *GetProposalByIDRequest) (*GetProposalByIDResponse, error)
	// Get governance data (proposals and votes) for a proposal located by reference
	GetProposalByReference(context.Context, *GetProposalByReferenceRequest) (*GetProposalByReferenceResponse, error)
	// Subscribe to a stream of all governance updates
	ObserveGovernance(*empty.Empty, TradingData_ObserveGovernanceServer) error
	// Subscribe to a stream of proposal updates
	ObservePartyProposals(*ObservePartyProposalsRequest, TradingData_ObservePartyProposalsServer) error
	// Subscribe to a stream of votes cast by a specific party
	ObservePartyVotes(*ObservePartyVotesRequest, TradingData_ObservePartyVotesServer) error
	// Subscribe to a stream of proposal votes
	ObserveProposalVotes(*ObserveProposalVotesRequest, TradingData_ObserveProposalVotesServer) error
	// Get Statistics
	Statistics(context.Context, *empty.Empty) (*proto1.Statistics, error)
	// Get Time
	GetVegaTime(context.Context, *empty.Empty) (*VegaTimeResponse, error)
	// Subscribe to a stream of Accounts
	AccountsSubscribe(*AccountsSubscribeRequest, TradingData_AccountsSubscribeServer) error
	// Subscribe to a stream of Candles
	CandlesSubscribe(*CandlesSubscribeRequest, TradingData_CandlesSubscribeServer) error
	// Subscribe to a stream of Margin Levels
	MarginLevelsSubscribe(*MarginLevelsSubscribeRequest, TradingData_MarginLevelsSubscribeServer) error
	// Subscribe to a stream of Market Depth
	MarketDepthSubscribe(*MarketDepthSubscribeRequest, TradingData_MarketDepthSubscribeServer) error
	// Subscribe to a stream of Markets Data
	MarketsDataSubscribe(*MarketsDataSubscribeRequest, TradingData_MarketsDataSubscribeServer) error
	// Subscribe to a stream of Orders
	OrdersSubscribe(*OrdersSubscribeRequest, TradingData_OrdersSubscribeServer) error
	// Subscribe to a stream of Positions
	PositionsSubscribe(*PositionsSubscribeRequest, TradingData_PositionsSubscribeServer) error
	// Subscribe to a stream of Trades
	TradesSubscribe(*TradesSubscribeRequest, TradingData_TradesSubscribeServer) error
	// Subscribe to a stream of Transfer Responses
	TransferResponsesSubscribe(*empty.Empty, TradingData_TransferResponsesSubscribeServer) error
	// Get an aggregate of signature from all the node of the network
	GetNodeSignaturesAggregate(context.Context, *GetNodeSignaturesAggregateRequest) (*GetNodeSignaturesAggregateResponse, error)
}

func RegisterTradingDataServer(s *grpc.Server, srv TradingDataServer) {
	s.RegisterService(&_TradingData_serviceDesc, srv)
}

func _TradingData_MarketAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).MarketAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/MarketAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).MarketAccounts(ctx, req.(*MarketAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_PartyAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartyAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).PartyAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/PartyAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).PartyAccounts(ctx, req.(*PartyAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_Candles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).Candles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/Candles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).Candles(ctx, req.(*CandlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_MarketDataByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketDataByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).MarketDataByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/MarketDataByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).MarketDataByID(ctx, req.(*MarketDataByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_MarketsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).MarketsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/MarketsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).MarketsData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_MarketByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).MarketByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/MarketByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).MarketByID(ctx, req.(*MarketByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_MarketDepth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketDepthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).MarketDepth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/MarketDepth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).MarketDepth(ctx, req.(*MarketDepthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_Markets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).Markets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/Markets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).Markets(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrderByMarketAndID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByMarketAndIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrderByMarketAndID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrderByMarketAndID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrderByMarketAndID(ctx, req.(*OrderByMarketAndIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrderByReference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrderByReference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrderByReference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrderByReference(ctx, req.(*OrderByReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrdersByMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrdersByMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrdersByMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrdersByMarket(ctx, req.(*OrdersByMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrdersByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrdersByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrdersByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrdersByParty(ctx, req.(*OrdersByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrderByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrderByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrderByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrderByID(ctx, req.(*OrderByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrderByReferenceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByReferenceIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrderByReferenceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrderByReferenceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrderByReferenceID(ctx, req.(*OrderByReferenceIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_OrderVersionsByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderVersionsByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).OrderVersionsByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/OrderVersionsByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).OrderVersionsByID(ctx, req.(*OrderVersionsByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_MarginLevels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarginLevelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).MarginLevels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/MarginLevels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).MarginLevels(ctx, req.(*MarginLevelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_Parties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).Parties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/Parties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).Parties(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_PartyByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartyByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).PartyByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/PartyByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).PartyByID(ctx, req.(*PartyByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_PositionsByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionsByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).PositionsByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/PositionsByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).PositionsByParty(ctx, req.(*PositionsByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_LastTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LastTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).LastTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/LastTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).LastTrade(ctx, req.(*LastTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_TradesByMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).TradesByMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/TradesByMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).TradesByMarket(ctx, req.(*TradesByMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_TradesByOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).TradesByOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/TradesByOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).TradesByOrder(ctx, req.(*TradesByOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_TradesByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).TradesByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/TradesByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).TradesByParty(ctx, req.(*TradesByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetProposals(ctx, req.(*GetProposalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetProposalsByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposalsByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetProposalsByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetProposalsByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetProposalsByParty(ctx, req.(*GetProposalsByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetVotesByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVotesByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetVotesByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetVotesByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetVotesByParty(ctx, req.(*GetVotesByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetNewMarketProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNewMarketProposalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetNewMarketProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetNewMarketProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetNewMarketProposals(ctx, req.(*GetNewMarketProposalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetUpdateMarketProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpdateMarketProposalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetUpdateMarketProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetUpdateMarketProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetUpdateMarketProposals(ctx, req.(*GetUpdateMarketProposalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetNetworkParametersProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkParametersProposalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetNetworkParametersProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetNetworkParametersProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetNetworkParametersProposals(ctx, req.(*GetNetworkParametersProposalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetNewAssetProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNewAssetProposalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetNewAssetProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetNewAssetProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetNewAssetProposals(ctx, req.(*GetNewAssetProposalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetProposalByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposalByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetProposalByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetProposalByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetProposalByID(ctx, req.(*GetProposalByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetProposalByReference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposalByReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetProposalByReference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetProposalByReference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetProposalByReference(ctx, req.(*GetProposalByReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_ObserveGovernance_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).ObserveGovernance(m, &tradingDataObserveGovernanceServer{stream})
}

type TradingData_ObserveGovernanceServer interface {
	Send(*proto1.GovernanceData) error
	grpc.ServerStream
}

type tradingDataObserveGovernanceServer struct {
	grpc.ServerStream
}

func (x *tradingDataObserveGovernanceServer) Send(m *proto1.GovernanceData) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_ObservePartyProposals_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ObservePartyProposalsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).ObservePartyProposals(m, &tradingDataObservePartyProposalsServer{stream})
}

type TradingData_ObservePartyProposalsServer interface {
	Send(*proto1.GovernanceData) error
	grpc.ServerStream
}

type tradingDataObservePartyProposalsServer struct {
	grpc.ServerStream
}

func (x *tradingDataObservePartyProposalsServer) Send(m *proto1.GovernanceData) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_ObservePartyVotes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ObservePartyVotesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).ObservePartyVotes(m, &tradingDataObservePartyVotesServer{stream})
}

type TradingData_ObservePartyVotesServer interface {
	Send(*proto1.Vote) error
	grpc.ServerStream
}

type tradingDataObservePartyVotesServer struct {
	grpc.ServerStream
}

func (x *tradingDataObservePartyVotesServer) Send(m *proto1.Vote) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_ObserveProposalVotes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ObserveProposalVotesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).ObserveProposalVotes(m, &tradingDataObserveProposalVotesServer{stream})
}

type TradingData_ObserveProposalVotesServer interface {
	Send(*proto1.Vote) error
	grpc.ServerStream
}

type tradingDataObserveProposalVotesServer struct {
	grpc.ServerStream
}

func (x *tradingDataObserveProposalVotesServer) Send(m *proto1.Vote) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_Statistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).Statistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/Statistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).Statistics(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_GetVegaTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetVegaTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetVegaTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetVegaTime(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingData_AccountsSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AccountsSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).AccountsSubscribe(m, &tradingDataAccountsSubscribeServer{stream})
}

type TradingData_AccountsSubscribeServer interface {
	Send(*proto1.Account) error
	grpc.ServerStream
}

type tradingDataAccountsSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataAccountsSubscribeServer) Send(m *proto1.Account) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_CandlesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CandlesSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).CandlesSubscribe(m, &tradingDataCandlesSubscribeServer{stream})
}

type TradingData_CandlesSubscribeServer interface {
	Send(*proto1.Candle) error
	grpc.ServerStream
}

type tradingDataCandlesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataCandlesSubscribeServer) Send(m *proto1.Candle) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_MarginLevelsSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MarginLevelsSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).MarginLevelsSubscribe(m, &tradingDataMarginLevelsSubscribeServer{stream})
}

type TradingData_MarginLevelsSubscribeServer interface {
	Send(*proto1.MarginLevels) error
	grpc.ServerStream
}

type tradingDataMarginLevelsSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataMarginLevelsSubscribeServer) Send(m *proto1.MarginLevels) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_MarketDepthSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MarketDepthSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).MarketDepthSubscribe(m, &tradingDataMarketDepthSubscribeServer{stream})
}

type TradingData_MarketDepthSubscribeServer interface {
	Send(*proto1.MarketDepth) error
	grpc.ServerStream
}

type tradingDataMarketDepthSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataMarketDepthSubscribeServer) Send(m *proto1.MarketDepth) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_MarketsDataSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MarketsDataSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).MarketsDataSubscribe(m, &tradingDataMarketsDataSubscribeServer{stream})
}

type TradingData_MarketsDataSubscribeServer interface {
	Send(*proto1.MarketData) error
	grpc.ServerStream
}

type tradingDataMarketsDataSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataMarketsDataSubscribeServer) Send(m *proto1.MarketData) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_OrdersSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrdersSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).OrdersSubscribe(m, &tradingDataOrdersSubscribeServer{stream})
}

type TradingData_OrdersSubscribeServer interface {
	Send(*OrdersStream) error
	grpc.ServerStream
}

type tradingDataOrdersSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataOrdersSubscribeServer) Send(m *OrdersStream) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_PositionsSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PositionsSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).PositionsSubscribe(m, &tradingDataPositionsSubscribeServer{stream})
}

type TradingData_PositionsSubscribeServer interface {
	Send(*proto1.Position) error
	grpc.ServerStream
}

type tradingDataPositionsSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataPositionsSubscribeServer) Send(m *proto1.Position) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_TradesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TradesSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).TradesSubscribe(m, &tradingDataTradesSubscribeServer{stream})
}

type TradingData_TradesSubscribeServer interface {
	Send(*TradesStream) error
	grpc.ServerStream
}

type tradingDataTradesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataTradesSubscribeServer) Send(m *TradesStream) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_TransferResponsesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingDataServer).TransferResponsesSubscribe(m, &tradingDataTransferResponsesSubscribeServer{stream})
}

type TradingData_TransferResponsesSubscribeServer interface {
	Send(*proto1.TransferResponse) error
	grpc.ServerStream
}

type tradingDataTransferResponsesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingDataTransferResponsesSubscribeServer) Send(m *proto1.TransferResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _TradingData_GetNodeSignaturesAggregate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeSignaturesAggregateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingDataServer).GetNodeSignaturesAggregate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading_data/GetNodeSignaturesAggregate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingDataServer).GetNodeSignaturesAggregate(ctx, req.(*GetNodeSignaturesAggregateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TradingData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.trading_data",
	HandlerType: (*TradingDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MarketAccounts",
			Handler:    _TradingData_MarketAccounts_Handler,
		},
		{
			MethodName: "PartyAccounts",
			Handler:    _TradingData_PartyAccounts_Handler,
		},
		{
			MethodName: "Candles",
			Handler:    _TradingData_Candles_Handler,
		},
		{
			MethodName: "MarketDataByID",
			Handler:    _TradingData_MarketDataByID_Handler,
		},
		{
			MethodName: "MarketsData",
			Handler:    _TradingData_MarketsData_Handler,
		},
		{
			MethodName: "MarketByID",
			Handler:    _TradingData_MarketByID_Handler,
		},
		{
			MethodName: "MarketDepth",
			Handler:    _TradingData_MarketDepth_Handler,
		},
		{
			MethodName: "Markets",
			Handler:    _TradingData_Markets_Handler,
		},
		{
			MethodName: "OrderByMarketAndID",
			Handler:    _TradingData_OrderByMarketAndID_Handler,
		},
		{
			MethodName: "OrderByReference",
			Handler:    _TradingData_OrderByReference_Handler,
		},
		{
			MethodName: "OrdersByMarket",
			Handler:    _TradingData_OrdersByMarket_Handler,
		},
		{
			MethodName: "OrdersByParty",
			Handler:    _TradingData_OrdersByParty_Handler,
		},
		{
			MethodName: "OrderByID",
			Handler:    _TradingData_OrderByID_Handler,
		},
		{
			MethodName: "OrderByReferenceID",
			Handler:    _TradingData_OrderByReferenceID_Handler,
		},
		{
			MethodName: "OrderVersionsByID",
			Handler:    _TradingData_OrderVersionsByID_Handler,
		},
		{
			MethodName: "MarginLevels",
			Handler:    _TradingData_MarginLevels_Handler,
		},
		{
			MethodName: "Parties",
			Handler:    _TradingData_Parties_Handler,
		},
		{
			MethodName: "PartyByID",
			Handler:    _TradingData_PartyByID_Handler,
		},
		{
			MethodName: "PositionsByParty",
			Handler:    _TradingData_PositionsByParty_Handler,
		},
		{
			MethodName: "LastTrade",
			Handler:    _TradingData_LastTrade_Handler,
		},
		{
			MethodName: "TradesByMarket",
			Handler:    _TradingData_TradesByMarket_Handler,
		},
		{
			MethodName: "TradesByOrder",
			Handler:    _TradingData_TradesByOrder_Handler,
		},
		{
			MethodName: "TradesByParty",
			Handler:    _TradingData_TradesByParty_Handler,
		},
		{
			MethodName: "GetProposals",
			Handler:    _TradingData_GetProposals_Handler,
		},
		{
			MethodName: "GetProposalsByParty",
			Handler:    _TradingData_GetProposalsByParty_Handler,
		},
		{
			MethodName: "GetVotesByParty",
			Handler:    _TradingData_GetVotesByParty_Handler,
		},
		{
			MethodName: "GetNewMarketProposals",
			Handler:    _TradingData_GetNewMarketProposals_Handler,
		},
		{
			MethodName: "GetUpdateMarketProposals",
			Handler:    _TradingData_GetUpdateMarketProposals_Handler,
		},
		{
			MethodName: "GetNetworkParametersProposals",
			Handler:    _TradingData_GetNetworkParametersProposals_Handler,
		},
		{
			MethodName: "GetNewAssetProposals",
			Handler:    _TradingData_GetNewAssetProposals_Handler,
		},
		{
			MethodName: "GetProposalByID",
			Handler:    _TradingData_GetProposalByID_Handler,
		},
		{
			MethodName: "GetProposalByReference",
			Handler:    _TradingData_GetProposalByReference_Handler,
		},
		{
			MethodName: "Statistics",
			Handler:    _TradingData_Statistics_Handler,
		},
		{
			MethodName: "GetVegaTime",
			Handler:    _TradingData_GetVegaTime_Handler,
		},
		{
			MethodName: "GetNodeSignaturesAggregate",
			Handler:    _TradingData_GetNodeSignaturesAggregate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ObserveGovernance",
			Handler:       _TradingData_ObserveGovernance_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ObservePartyProposals",
			Handler:       _TradingData_ObservePartyProposals_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ObservePartyVotes",
			Handler:       _TradingData_ObservePartyVotes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ObserveProposalVotes",
			Handler:       _TradingData_ObserveProposalVotes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AccountsSubscribe",
			Handler:       _TradingData_AccountsSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CandlesSubscribe",
			Handler:       _TradingData_CandlesSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MarginLevelsSubscribe",
			Handler:       _TradingData_MarginLevelsSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MarketDepthSubscribe",
			Handler:       _TradingData_MarketDepthSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MarketsDataSubscribe",
			Handler:       _TradingData_MarketsDataSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "OrdersSubscribe",
			Handler:       _TradingData_OrdersSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PositionsSubscribe",
			Handler:       _TradingData_PositionsSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TradesSubscribe",
			Handler:       _TradingData_TradesSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TransferResponsesSubscribe",
			Handler:       _TradingData_TransferResponsesSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/api/trading.proto",
}
