---
type: google.api.Service
config_version: 3

name: api.v1.trading
title: Vega Trading API

apis:
  - name: TradingService
  - name: TradingDataService

http:
  rules:
    # Markets
    - selector: api.v1.TradingDataService.Markets
      get: '/markets'
    - selector: api.v1.TradingDataService.MarketByID
      get: '/markets/{market_id}'
    - selector: api.v1.TradingDataService.Candles
      get: '/markets/{market_id}/candles'
    - selector: api.v1.TradingDataService.MarketDepth
      get: '/markets/{market_id}/depth'
    - selector: api.v1.TradingDataService.OrdersByMarket
      get: '/markets/{market_id}/orders'
    - selector: api.v1.TradingDataService.OrderByMarketAndID
      get: '/markets/{market_id}/orders/{order_id}'
    - selector: api.v1.TradingDataService.TradesByMarket
      get: '/markets/{market_id}/trades'
    - selector: api.v1.TradingDataService.LastTrade
      get: '/markets/{market_id}/trades/latest'
    - selector: api.v1.TradingDataService.MarketAccounts
      get: '/markets/{market_id}/accounts'

    # assets
    - selector: api.v1.TradingDataService.Assets
      get: '/assets'
    - selector: api.v1.TradingDataService.AssetByID
      get: '/assets/{id}'
    - selector: api.v1.TradingDataService.FeeInfrastructureAccounts
      get: '/assets/{asset}/infrastructureFeeAccount'


    # MarketData
    - selector: api.v1.TradingDataService.MarketsData
      get: '/markets-data'
    - selector: api.v1.TradingDataService.MarketDataByID
      get: '/markets-data/{market_id}'


    # transaction bundles
    - selector: api.v1.TradingService.SubmitTransaction
      post: '/transaction'
      body: "*"

    # Orders
    - selector: api.v1.TradingService.PrepareSubmitOrder
      post: '/orders/prepare/submit'
      body: "*"
    - selector: api.v1.TradingService.PrepareCancelOrder
      post: '/orders/prepare/cancel'
      body: "*"
    - selector: api.v1.TradingService.PrepareAmendOrder
      post: '/orders/prepare/amend'
      body: "*"
    - selector: api.v1.TradingDataService.OrderByReference
      get: '/orders/{reference}'
    - selector: api.v1.TradingDataService.OrderVersionsByID
      get: '/orders/{order_id}/versions'
    - selector: api.v1.TradingDataService.TradesByOrder
      get: '/orders/{order_id}/trades'

    # Fee
    - selector: api.v1.TradingDataService.EstimateFee
      post: '/orders/fee/estimate'
      body: "*"

    # Margins
    - selector: api.v1.TradingDataService.EstimateMargin
      post: '/orders/margins/estimate'
      body: "*"

      # Network parameters
    - selector: api.v1.TradingDataService.NetworkParameters
      get: '/network/parameters'

    # Parties
    - selector: api.v1.TradingDataService.Parties
      get: '/parties'
    - selector: api.v1.TradingDataService.PartyByID
      get: '/parties/{party_id}'
    - selector: api.v1.TradingDataService.OrdersByParty
      get: '/parties/{party_id}/orders'
    - selector: api.v1.TradingDataService.PositionsByParty
      get: '/parties/{party_id}/positions'
    - selector: api.v1.TradingDataService.TradesByParty
      get: '/parties/{party_id}/trades'
    - selector: api.v1.TradingDataService.PartyAccounts
      get: '/parties/{party_id}/accounts'
    - selector: api.v1.TradingDataService.MarginLevels
      get: '/parties/{party_id}/markets/{market_id}/margin'

    - selector: api.v1.TradingService.PrepareWithdraw
      post: '/parties/prepare/withdraw'
      body: '*'

    # governance stuff by party
    - selector: api.v1.TradingDataService.GetProposalsByParty
      get: '/parties/{party_id}/proposals'
    - selector: api.v1.TradingDataService.GetVotesByParty
      get: '/parties/{party_id}/votes'

    # withdrawals
    - selector: api.v1.TradingDataService.Withdrawal
      get: '/withdrawals/{id}'
    - selector: api.v1.TradingDataService.Withdrawals
      get: '/withdrawals/party/{party_id}'
    - selector: api.v1.TradingDataService.ERC20WithdrawalApproval
      get: '/withdrawals/{withdrawal_id}/approval/erc20'

    # deposits
    - selector: api.v1.TradingDataService.Deposit
      get: '/deposits/{id}'
    - selector: api.v1.TradingDataService.Deposits
      get: '/deposits/party/{party_id}'

    # Governance
    - selector: api.v1.TradingService.PrepareProposal
      post: '/governance/prepare/proposal'
      body: "*"
    - selector: api.v1.TradingService.PrepareVote
      post: '/governance/prepare/vote'
      body: "*"

    # Governance queries
    - selector: api.v1.TradingDataService.GetProposalByID
      get: '/governance/proposal/{proposal_id}'
    - selector: api.v1.TradingDataService.GetProposalByReference
      get: '/governance/proposal/reference/{reference}'
    - selector: api.v1.TradingDataService.GetNewMarketProposals
      get: '/governance/market/proposals'
    - selector: api.v1.TradingDataService.GetNewAssetProposals
      get: '/governance/asset/proposals'
    - selector: api.v1.TradingDataService.GetProposals
      get: '/governance/proposals'


    # LiquidityProvision
    - selector: api.v1.TradingService.PrepareLiquidityProvision
      post: '/liquidity-provisions/prepare/submit'
      body: "*"
    - selector: api.v1.TradingDataService.LiquidityProvisions
      get: '/liquidity-provisions/party/{party}/market/{market}'

    # Miscellaneous
    - selector: api.v1.TradingDataService.Statistics
      get: '/statistics'
    - selector: api.v1.TradingDataService.GetVegaTime
      get: '/time'

    # oracles
    - selector: api.v1.TradingDataService.OracleSpec
      get: '/oracle-specs/{id}'
    - selector: api.v1.TradingDataService.OracleDataBySpec
      get: '/oracle-specs/{id}/oracle-data'
    - selector: api.v1.TradingDataService.OracleSpecs
      get: '/oracle-specs'
    - selector: api.v1.TradingDataService.OracleData
      get: '/oracle-data'
