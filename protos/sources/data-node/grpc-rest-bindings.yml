---
type: google.api.Service
config_version: 3

name: datanode.api.v1.trading
title: Vega Trading API

apis:
  - name: TradingProxyService
  - name: TradingDataService

http:
  rules:
    # Markets
    - selector: datanode.api.v1.TradingDataService.Markets
      get: "/markets"
    - selector: datanode.api.v1.TradingDataService.MarketByID
      get: "/markets/{market_id}"
    - selector: datanode.api.v1.TradingDataService.Candles
      get: "/markets/{market_id}/candles"
    - selector: datanode.api.v1.TradingDataService.MarketDepth
      get: "/markets/{market_id}/depth"
    - selector: datanode.api.v1.TradingDataService.OrdersByMarket
      get: "/markets/{market_id}/orders"
    - selector: datanode.api.v1.TradingDataService.OrderByMarketAndID
      get: "/markets/{market_id}/orders/{order_id}"
    - selector: datanode.api.v1.TradingDataService.TradesByMarket
      get: "/markets/{market_id}/trades"
    - selector: datanode.api.v1.TradingDataService.LastTrade
      get: "/markets/{market_id}/trades/latest"
    - selector: datanode.api.v1.TradingDataService.MarketAccounts
      get: "/markets/{market_id}/accounts"

    # assets
    - selector: datanode.api.v1.TradingDataService.Assets
      get: "/assets"
    - selector: datanode.api.v1.TradingDataService.AssetByID
      get: "/assets/{id}"
    - selector: datanode.api.v1.TradingDataService.FeeInfrastructureAccounts
      get: "/assets/{asset}/infrastructureFeeAccount"
    - selector: datanode.api.v1.TradingDataService.GlobalRewardPoolAccounts
      get: "/assets/{asset}/globalRewardPoolAccount"

    # MarketData
    - selector: datanode.api.v1.TradingDataService.MarketsData
      get: "/markets-data"
    - selector: datanode.api.v1.TradingDataService.MarketDataByID
      get: "/markets-data/{market_id}"

    # Orders
    - selector: datanode.api.v1.TradingDataService.OrderByReference
      get: "/orders/{reference}"
    - selector: datanode.api.v1.TradingDataService.OrderVersionsByID
      get: "/orders/{order_id}/versions"
    - selector: datanode.api.v1.TradingDataService.TradesByOrder
      get: "/orders/{order_id}/trades"

    # Fee
    - selector: datanode.api.v1.TradingDataService.EstimateFee
      post: "/orders/fee/estimate"
      body: "*"

    # Margins
    - selector: datanode.api.v1.TradingDataService.EstimateMargin
      post: "/orders/margins/estimate"
      body: "*"

      # Network parameters
    - selector: datanode.api.v1.TradingDataService.NetworkParameters
      get: "/network/parameters"

    # Parties
    - selector: datanode.api.v1.TradingDataService.Parties
      get: "/parties"
    - selector: datanode.api.v1.TradingDataService.PartyByID
      get: "/parties/{party_id}"
    - selector: datanode.api.v1.TradingDataService.OrdersByParty
      get: "/parties/{party_id}/orders"
    - selector: datanode.api.v1.TradingDataService.PositionsByParty
      get: "/parties/{party_id}/positions"
    - selector: datanode.api.v1.TradingDataService.TradesByParty
      get: "/parties/{party_id}/trades"
    - selector: datanode.api.v1.TradingDataService.PartyAccounts
      get: "/parties/{party_id}/accounts"
    - selector: datanode.api.v1.TradingDataService.MarginLevels
      get: "/parties/{party_id}/markets/{market_id}/margin"
    - selector: datanode.api.v1.TradingDataService.GetRewards
      get: "/parties/{party_id}/rewards"
    - selector: datanode.api.v1.TradingDataService.PartyStake
      get: "/parties/{party}/stake"

    # governance stuff by party
    - selector: datanode.api.v1.TradingDataService.GetProposalsByParty
      get: "/parties/{party_id}/proposals"
    - selector: datanode.api.v1.TradingDataService.GetVotesByParty
      get: "/parties/{party_id}/votes"

    # withdrawals
    - selector: datanode.api.v1.TradingDataService.Withdrawal
      get: "/withdrawals/{id}"
    - selector: datanode.api.v1.TradingDataService.Withdrawals
      get: "/withdrawals/party/{party_id}"
    - selector: datanode.api.v1.TradingDataService.ERC20WithdrawalApproval
      get: "/withdrawals/{withdrawal_id}/approval/erc20"

    # deposits
    - selector: datanode.api.v1.TradingDataService.Deposit
      get: "/deposits/{id}"
    - selector: datanode.api.v1.TradingDataService.Deposits
      get: "/parties/{party_id}/deposits"

    # Governance queries
    - selector: datanode.api.v1.TradingDataService.GetProposalByID
      get: "/governance/proposal/{proposal_id}"
    - selector: datanode.api.v1.TradingDataService.GetProposalByReference
      get: "/governance/proposal/reference/{reference}"
    - selector: datanode.api.v1.TradingDataService.GetNewMarketProposals
      get: "/governance/market/proposals"
    - selector: datanode.api.v1.TradingDataService.GetNewAssetProposals
      get: "/governance/asset/proposals"
    - selector: datanode.api.v1.TradingDataService.GetProposals
      get: "/governance/proposals"

    # LiquidityProvision
    - selector: datanode.api.v1.TradingDataService.LiquidityProvisions
      get: "/liquidity-provisions/party/{party}/market/{market}"
    - selector: datanode.api.v1.TradingDataService.LiquidityProvisions
      get: "/liquidity-provisions/market/{market}"

    # Miscellaneous
    - selector: datanode.api.v1.TradingDataService.GetVegaTime
      get: "/time"

    # oracles
    - selector: datanode.api.v1.TradingDataService.OracleSpec
      get: "/oracle-specs/{id}"
    - selector: datanode.api.v1.TradingDataService.OracleDataBySpec
      get: "/oracle-specs/{id}/oracle-data"
    - selector: datanode.api.v1.TradingDataService.OracleSpecs
      get: "/oracle-specs"
    - selector: datanode.api.v1.TradingDataService.ListOracleData
      get: '/oracle-data'

    # Nodes
    - selector: datanode.api.v1.TradingDataService.GetNodeData
      get: "/nodes-data"
    - selector: datanode.api.v1.TradingDataService.GetNodes
      get: "/nodes"
    - selector: datanode.api.v1.TradingDataService.GetNodeByID
      get: "/nodes/{id}"

    # Epochs
    - selector: datanode.api.v1.TradingDataService.GetEpoch
      get: "/epochs/{id}"
    - selector: datanode.api.v1.TradingDataService.GetEpoch
      get: "/epochs"

    # Delegations
    - selector: datanode.api.v1.TradingDataService.Delegations
      get: "/delegations"

    # Key rotations
    - selector: datanode.api.v1.TradingDataService.GetKeyRotations
      get: "/key-rotations"

    # Transfer instructions
    - selector: datanode.api.v1.TradingDataService.TransferInstructions
      get: "/transfer-instructions"

    ## v2 APIs from this point
    ## Defined in order relative to the proto service

    - selector: datanode.api.v2.TradingDataService.ListAccounts
      get: "/api/v2/accounts"
    - selector: datanode.api.v2.TradingDataService.Info
      get: "/api/v2/info"
    - selector: datanode.api.v2.TradingDataService.GetOrder
      get: "/api/v2/order/{order_id}"
    - selector: datanode.api.v2.TradingDataService.ListOrders
      get: "/api/v2/orders"
    - selector: datanode.api.v2.TradingDataService.ListOrderVersions
      get: "/api/v2/order/versions/{order_id}"
    - selector: datanode.api.v2.TradingDataService.ListPositions
      get: "/api/v2/positions"
    - selector: datanode.api.v2.TradingDataService.GetBalanceHistory
      get: "/api/v2/balance/history"
    - selector: datanode.api.v2.TradingDataService.GetLatestMarketData
      get: "/api/v2/market/data/{market_id}/latest"
    - selector: datanode.api.v2.TradingDataService.ListLatestMarketData
      get: "/api/v2/markets/data"
    - selector: datanode.api.v2.TradingDataService.GetLatestMarketDepth
      get: "/api/v2/market/depth/{market_id}/latest"
    - selector: datanode.api.v2.TradingDataService.GetMarketDataHistoryByID
      get: "/api/v2/market/data/{market_id}"
    - selector: datanode.api.v2.TradingDataService.ListTransferInstructions
      get: "/api/v2/transfer-instructions"
    - selector: datanode.api.v2.TradingDataService.GetNetworkLimits
      get: "/api/v2/network/limits"
    - selector: datanode.api.v2.TradingDataService.ListCandleData
      get: "/api/v2/candle"
    - selector: datanode.api.v2.TradingDataService.ListCandleIntervals
      get: "/api/v2/candle/intervals"
    - selector: datanode.api.v2.TradingDataService.ListVotes
      get: "/api/v2/votes"
    - selector: datanode.api.v2.TradingDataService.GetERC20MultiSigSignerAddedBundles
      get: "/api/v2/erc20/multisigcontrol/signer/added/bundles"
    - selector: datanode.api.v2.TradingDataService.GetERC20MultiSigSignerRemovedBundles
      get: "/api/v2/erc20/multisigcontrol/signer/removed/bundles"
    - selector: datanode.api.v2.TradingDataService.GetERC20ListAssetBundle
      get: "/api/v2/erc20/asset/list/bundle"
    - selector: datanode.api.v2.TradingDataService.GetERC20SetAssetLimitsBundle
      get: "/api/v2/erc20/asset/limits/bundle"
    - selector: datanode.api.v2.TradingDataService.GetERC20WithdrawalApproval
      get: "/api/v2/erc20/asset/withdrawal/bundle"
    - selector: datanode.api.v2.TradingDataService.GetLastTrade
      get: "/api/v2/market/{market_id}/trade/latest"
    - selector: datanode.api.v2.TradingDataService.ListTrades
      get: "/api/v2/trades"
    - selector: datanode.api.v2.TradingDataService.GetMarket
      get: "/api/v2/market/{market_id}"
    - selector: datanode.api.v2.TradingDataService.ListMarkets
      get: "/api/v2/markets"
    - selector: datanode.api.v2.TradingDataService.GetParty
      get: "/api/v2/party/{party_id}"
    - selector: datanode.api.v2.TradingDataService.ListParties
      get: "/api/v2/parties"
    - selector: datanode.api.v2.TradingDataService.ListMarginLevels
      get: "/api/v2/margin/levels"
    - selector: datanode.api.v2.TradingDataService.ListRewards
      get: "/api/v2/rewards"
    - selector: datanode.api.v2.TradingDataService.ListRewardSummaries
      get: "/api/v2/rewards/summaries"
    - selector: datanode.api.v2.TradingDataService.GetDeposit
      get: "/api/v2/deposit/{id}"
    - selector: datanode.api.v2.TradingDataService.ListDeposits
      get: "/api/v2/deposits"
    - selector: datanode.api.v2.TradingDataService.GetWithdrawal
      get: "/api/v2/withdrawal/{id}"
    - selector: datanode.api.v2.TradingDataService.ListWithdrawals
      get: "/api/v2/withdrawals"
    - selector: datanode.api.v2.TradingDataService.GetAsset
      get: "/api/v2/asset/{asset_id}"
    - selector: datanode.api.v2.TradingDataService.ListAssets
      get: "/api/v2/assets"
    - selector: datanode.api.v2.TradingDataService.ListLiquidityProvisions
      get: "/api/v2/liquidity/provisions"
    - selector: datanode.api.v2.TradingDataService.ListGovernanceData
      get: "/api/v2/governance"
    - selector: datanode.api.v2.TradingDataService.ListDelegations
      get: "/api/v2/delegations"
    - selector: datanode.api.v2.TradingDataService.GetNetworkData
      get: "/api/v2/network/data"
    - selector: datanode.api.v2.TradingDataService.GetNode
      get: "/api/v2/node/{id}"
    - selector: datanode.api.v2.TradingDataService.ListNodes
      get: "/api/v2/nodes"
    - selector: datanode.api.v2.TradingDataService.ListNodeSignatures
      get: "/api/v2/node/signatures"
    - selector: datanode.api.v2.TradingDataService.GetEpoch
      get: "/api/v2/epoch"
    - selector: datanode.api.v2.TradingDataService.EstimateFee
      get: "/api/v2/estimate/fee"
    - selector: datanode.api.v2.TradingDataService.EstimateMargin
      get: "/api/v2/estimate/margin"
    - selector: datanode.api.v2.TradingDataService.ListNetworkParameters
      get: "/api/v2/network/parameters"
    - selector: datanode.api.v2.TradingDataService.ListCheckpoints
      get: "/api/v2/checkpoints"
    - selector: datanode.api.v2.TradingDataService.GetStake
      get: "/api/v2/parties/{party_id}/stake"
    - selector: datanode.api.v2.TradingDataService.ListKeyRotations
      get: "/api/v2/vega/keys/rotations"
    - selector: datanode.api.v2.TradingDataService.GetVegaTime
      get: "/api/v2/vega/time"
    - selector: datanode.api.v2.TradingDataService.GetNetworkParameter
      get: '/api/v2/network/parameters/{key}'

    # websockets

    - selector: datanode.api.v2.TradingDataService.ObserveAccounts
      get: '/api/v2/stream/accounts'
    - selector: datanode.api.v2.TradingDataService.ObserveOrders
      get: '/api/v2/stream/orders'
    - selector: datanode.api.v2.TradingDataService.ObservePositions
      get: '/api/v2/stream/positions'
    - selector: datanode.api.v2.TradingDataService.ObserveMarketsDepth
      get: '/api/v2/stream/markets/depth'
    - selector: datanode.api.v2.TradingDataService.ObserveMarketsDepthUpdates
      get: '/api/v2/stream/markets/depth/updates'
    - selector: datanode.api.v2.TradingDataService.ObserveMarketsData
      get: '/api/v2/stream/markets/data'
    - selector: datanode.api.v2.TradingDataService.ObserveCandleData
      get: '/api/v2/stream/candle/data'
    - selector: datanode.api.v2.TradingDataService.ObserveVotes
      get: '/api/v2/stream/votes'
    - selector: datanode.api.v2.TradingDataService.ObserveTrades
      get: '/api/v2/stream/trades'
    - selector: datanode.api.v2.TradingDataService.ObserveMarginLevels
      get: '/api/v2/stream/margin/levels'
    - selector: datanode.api.v2.TradingDataService.ObserveRewards
      get: '/api/v2/stream/rewards'
    - selector: datanode.api.v2.TradingDataService.ObserveGovernance
      get: '/api/v2/stream/governance'
    - selector: datanode.api.v2.TradingDataService.ObserveDelegations
      get: '/api/v2/stream/delegations'
    - selector: datanode.api.v2.TradingDataService.ObserveEventBus
      get: '/api/v2/stream/event/bus'
    - selector: datanode.api.v2.TradingDataService.ObserveTransferInstructionResponses
      get: '/api/v2/stream/transfer-instruction/responses'
    - selector: datanode.api.v2.TradingDataService.ObserveLiquidityProvisions
      get: '/api/v2/stream/liquidity-provisions'
