---

kind: pipeline
name: default
type: docker

platform:
  arch: amd64
  os: linux

steps:

  # https://docker-runner.docs.drone.io/configuration/cloning/
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags  # necessary for generation of VERSION var

  # ====== Pipeline for pull requests ======

  - name: build-PR
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:1.16.2
    pull: always
    volumes:
      - name: gocache
        path: /go/cache
      - name: gopkg
        path: /go/pkg
    environment:
      GO111MODULE: "on"
      GOCACHE: /go/cache
      GITHUB_DEPLOY_SSH_PRIVATE_KEY:
        from_secret: GITHUB_DEPLOY_SSH_PRIVATE_KEY
    commands:
      # The following git+ssh config enables accessing private github repos.
      - git config --global url."git@github.com:vegaprotocol".insteadOf "https://github.com/vegaprotocol"
      - mkdir -p -m 0700 ~/.ssh
      - if ! echo "$${GITHUB_DEPLOY_SSH_PRIVATE_KEY}" | grep -q "BEGIN [A-Z]* PRIVATE KEY" ; then
          echo "Need env var GITHUB_DEPLOY_SSH_PRIVATE_KEY to have a private key" ; exit 1 ; fi
      - echo "$${GITHUB_DEPLOY_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa ; chmod 0600 ~/.ssh/id_rsa
      - ssh-keyscan github.com 1>~/.ssh/known_hosts 2>/dev/null ; chmod 0644 ~/.ssh/known_hosts
      - unset GITHUB_DEPLOY_SSH_PRIVATE_KEY
      # Get a list of files that changed in this PR, in order to limit CI to only test things that
      # changed in this PR.
      - git diff --name-only "$$DRONE_COMMIT_BEFORE...$$DRONE_COMMIT_AFTER" >git_diff.txt
      - if test "$$DRONE_TARGET_BRANCH" = master -o "$$(grep -cE '(^go.(mod|sum)|\.go|\.feature)$$' git_diff.txt)" -gt 0 ; then
          echo "Building executable" ;
          ./script/build-multiarch-no-cgo.sh default || exit 1 ;
        else
          echo "No Go files changed. Skipping building of binary." ;
          rm -f cmd/vega/vega-* cmd/vegabenchmark/vegabenchmark-* ;
        fi
    depends_on:
      - fetch
    when:
      event:
        - pull_request

  - name: markdownspellcheck-PR
    image: docker.pkg.github.com/vegaprotocol/devops-infra/markdownspellcheck:latest
    pull: always
    environment:
      FORCE_COLOR: 1  # show colour in CI
    commands:
      - if test "$$DRONE_TARGET_BRANCH" = master -o "$$(grep -c '\.md$$' git_diff.txt)" -gt 0 ; then
          mdspell --en-gb --ignore-acronyms --ignore-numbers --no-suggestions --report '*.md' 'docs/**/*.md' || exit 1 ;
        else
          echo "No md files changed. Skipping mdspell." ;
        fi
    depends_on:
      - build-PR
    when:
      event:
        - pull_request

  - name: test-PR
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:1.16.2
    volumes:
      - name: gocache
        path: /go/cache
      - name: gopkg
        path: /go/pkg
    environment:
      GOCACHE: /go/cache
      GITHUB_API_TOKEN:
        from_secret: GITHUB_API_TOKEN
      SLACK_HOOK_URL:
        from_secret: SLACK_HOOK_URL
      JENKINS_USERNAME:
        from_secret: JENKINS_USERNAME
      JENKINS_TOKEN:
        from_secret: JENKINS_TOKEN
    commands:
      - failed=""
      - if test "$$DRONE_TARGET_BRANCH" = master -o "$$(grep -cE '(^go.(mod|sum)|\.go)$$' git_diff.txt)" -gt 0 ; then
          make retest || exit 1 ;
          for target in print_check race vet ;
          do
            echo "$$COL_CYAN$$target$$COL_RESET" ;
            make "$$target" || failed="$$failed $$target" ;
          done ;
        else
          echo "No Go files changed. Skipping go tests" ;
        fi
      - for target in codeowners_check misspell staticcheck; do
          echo "$$COL_CYAN$$target$$COL_RESET" ;
          make "$$target" || failed="$$failed $$target" ;
        done
      - difflint "$$DRONE_COMMIT_BEFORE" "$$DRONE_COMMIT_AFTER" || failed="$$failed multilint"
      - if test -n "$$failed" ; then echo "Failed checks:$$failed" ; exit 1 ; fi ; echo "$${COL_GREEN}OK$$COL_RESET"
    depends_on:
      - build-PR
    when:
      event:
        - pull_request

  # ====== Pipeline for main branches (master, develop) and tags ======

  - name: build-branch
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:1.16.2
    pull: always
    volumes:
      - name: gocache
        path: /go/cache
      - name: gopkg
        path: /go/pkg
    environment:
      GO111MODULE: "on"
      GOCACHE: /go/cache
      GITHUB_DEPLOY_SSH_PRIVATE_KEY:
        from_secret: GITHUB_DEPLOY_SSH_PRIVATE_KEY
    commands:
      # The following git+ssh config enables accessing private github repos.
      - git config --global url."git@github.com:vegaprotocol".insteadOf "https://github.com/vegaprotocol"
      - mkdir -p -m 0700 ~/.ssh
      - if ! echo "$${GITHUB_DEPLOY_SSH_PRIVATE_KEY}" | grep -q "BEGIN [A-Z]* PRIVATE KEY" ; then
          echo "Need env var GITHUB_DEPLOY_SSH_PRIVATE_KEY to have a private key" ; exit 1 ; fi
      - echo "$${GITHUB_DEPLOY_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa ; chmod 0600 ~/.ssh/id_rsa
      - ssh-keyscan github.com 1>~/.ssh/known_hosts 2>/dev/null ; chmod 0644 ~/.ssh/known_hosts
      - unset GITHUB_DEPLOY_SSH_PRIVATE_KEY
      - ./script/build-multiarch-no-cgo.sh default
    depends_on:
      - fetch
    when:
      ref:
        - refs/heads/master
        - refs/heads/develop
        - refs/tags/*

  - name: deploy_devnet
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:1.16.2
    volumes:
      - name: gopkg
        path: /go/pkg
      - name: mutex
        path: /mutex
    environment:
      DEVNET_DEPLOY_SSH_PRIVATE_KEY:
        from_secret: DEVNET_DEPLOY_SSH_PRIVATE_KEY
      DEVNET_DEPLOY_HOSTS:
        from_secret: DEVNET_DEPLOY_HOSTS
      DEVNET_DEPLOY_HOSTS_VALIDATORS:
        from_secret: DEVNET_DEPLOY_HOSTS_VALIDATORS
      DEVNET_DEPLOY_HOSTS_NONVALIDATORS:
        from_secret: DEVNET_DEPLOY_HOSTS_NONVALIDATORS
      DEVNET_DEPLOY_SSH_KNOWN_HOSTS:
        from_secret: DEVNET_DEPLOY_SSH_KNOWN_HOSTS
      SLACK_HOOK_URL:
        from_secret: SLACK_HOOK_URL
    commands:
      # Fix Drone commit message. By default, it uses the oldest commit possible, not the most recent.
      - export DRONE_COMMIT_MESSAGE="$$(git log -n1 --pretty=oneline | cut -d ' ' -f 2-)"
      # The deploy script requires vars:
      # - DEVNET_DEPLOY_HOSTS
      # - DEVNET_DEPLOY_HOSTS_VALIDATORS
      # - DEVNET_DEPLOY_HOSTS_NONVALIDATORS
      # - DEVNET_DEPLOY_SSH_KNOWN_HOSTS
      # - DEVNET_DEPLOY_SSH_PRIVATE_KEY
      # - SLACK_HOOK_URL
      - (
          if ! flock -n 9 ; then
            echo "Another devnet deployment is in progress." ;
            exit 1 ;
          fi ;
          cp -a cmd/vega/vega-linux-amd64 cmd/vega/vega &&
          /usr/local/bin/deploy-trading-core.sh devnet vega
       ) 9>/mutex/devnet_deploy
    depends_on:
      - build-branch
    when:
      branch:
        - develop
      event:
        - push

  - name: deploy_devnet_markets
    image: docker.pkg.github.com/vegaprotocol/devops-infra/pytools:devnet
    volumes: []
    environment:
      DEVNET_DEPLOY_FAUCET_URL:
        from_secret: DEVNET_DEPLOY_FAUCET_URL
      DEVNET_DEPLOY_WALLET_NAME:
        from_secret: DEVNET_DEPLOY_WALLET_NAME
      DEVNET_DEPLOY_WALLET_PASSPHRASE:
        from_secret: DEVNET_DEPLOY_WALLET_PASSPHRASE
      DEVNET_DEPLOY_WALLET_URL:
        from_secret: DEVNET_DEPLOY_WALLET_URL
      DEVNET_DEPLOY_VEGANODE_GRPC:
        from_secret: DEVNET_DEPLOY_VEGANODE_GRPC
      DEVNET_DEPLOY_VOTE_TOKEN:
        from_secret: DEVNET_DEPLOY_VOTE_TOKEN
    commands:
      - allocate-fake-tokens.py
          --config /data/token-balances.json
          --veganode "$$DEVNET_DEPLOY_VEGANODE_GRPC"
          --faucetserver "$$DEVNET_DEPLOY_FAUCET_URL"
      - sleep 10
      - propose-vote.py
          --proposals /data/markets.json
          --walletname "$$DEVNET_DEPLOY_WALLET_NAME"
          --passphrase "$$DEVNET_DEPLOY_WALLET_PASSPHRASE"
          --walletserver "$$DEVNET_DEPLOY_WALLET_URL"
          --veganode "$$DEVNET_DEPLOY_VEGANODE_GRPC"
          --vote-token "$$DEVNET_DEPLOY_VOTE_TOKEN"
    depends_on:
      - deploy_devnet
    when:
      branch:
        - develop
      event:
        - push

  - name: build-multiarch
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:1.16.2
    pull: always
    volumes:
      - name: gocache
        path: /go/cache
      - name: gopkg
        path: /go/pkg
    environment:
      GO111MODULE: "on"
      GOCACHE: /go/cache
      GITHUB_DEPLOY_SSH_PRIVATE_KEY:
        from_secret: GITHUB_DEPLOY_SSH_PRIVATE_KEY
    commands:
      # The following git+ssh config enables accessing private github repos.
      - git config --global url."git@github.com:vegaprotocol".insteadOf "https://github.com/vegaprotocol"
      - mkdir -p -m 0700 ~/.ssh
      - if ! echo "$${GITHUB_DEPLOY_SSH_PRIVATE_KEY}" | grep -q "BEGIN [A-Z]* PRIVATE KEY" ; then
          echo "Need env var GITHUB_DEPLOY_SSH_PRIVATE_KEY to have a private key" ; exit 1 ; fi
      - echo "$${GITHUB_DEPLOY_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa ; chmod 0600 ~/.ssh/id_rsa
      - ssh-keyscan github.com 1>~/.ssh/known_hosts 2>/dev/null ; chmod 0644 ~/.ssh/known_hosts
      - unset GITHUB_DEPLOY_SSH_PRIVATE_KEY
      - ./script/build-multiarch-no-cgo.sh all
    depends_on:
      - build-branch
    when:
      event: tag

volumes:
  - name: dockersock
    host:
      path: /run/docker.sock
  - name: gocache
    host:
      path: /var/lib/drone/volumes/vega/gocache
  - name: gopkg
    host:
      path: /var/lib/drone/volumes/vega/gopkg
  - name: mutex
    host:
      path: /var/lib/drone/volumes/vega/mutex

image_pull_secrets:
  - dockerconfig
