// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import proto "vega/proto"

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// AmendOrder provides a mock function with given fields: order
func (_m *Service) AmendOrder(order *proto.Amendment) error {
	ret := _m.Called(order)

	var r0 error
	if rf, ok := ret.Get(0).(func(*proto.Amendment) error); ok {
		r0 = rf(order)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Begin provides a mock function with given fields:
func (_m *Service) Begin() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CancelOrder provides a mock function with given fields: order
func (_m *Service) CancelOrder(order *proto.Order) error {
	ret := _m.Called(order)

	var r0 error
	if rf, ok := ret.Get(0).(func(*proto.Order) error); ok {
		r0 = rf(order)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Commit provides a mock function with given fields:
func (_m *Service) Commit() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubmitOrder provides a mock function with given fields: order
func (_m *Service) SubmitOrder(order *proto.Order) error {
	ret := _m.Called(order)

	var r0 error
	if rf, ok := ret.Get(0).(func(*proto.Order) error); ok {
		r0 = rf(order)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateOrder provides a mock function with given fields: order
func (_m *Service) ValidateOrder(order *proto.Order) error {
	ret := _m.Called(order)

	var r0 error
	if rf, ok := ret.Get(0).(func(*proto.Order) error); ok {
		r0 = rf(order)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
