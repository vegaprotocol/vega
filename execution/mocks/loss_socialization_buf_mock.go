// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/execution (interfaces: LossSocializationBuf)

// Package mocks is a generated GoMock package.
package mocks

import (
	events "code.vegaprotocol.io/vega/events"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLossSocializationBuf is a mock of LossSocializationBuf interface
type MockLossSocializationBuf struct {
	ctrl     *gomock.Controller
	recorder *MockLossSocializationBufMockRecorder
}

// MockLossSocializationBufMockRecorder is the mock recorder for MockLossSocializationBuf
type MockLossSocializationBufMockRecorder struct {
	mock *MockLossSocializationBuf
}

// NewMockLossSocializationBuf creates a new mock instance
func NewMockLossSocializationBuf(ctrl *gomock.Controller) *MockLossSocializationBuf {
	mock := &MockLossSocializationBuf{ctrl: ctrl}
	mock.recorder = &MockLossSocializationBufMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLossSocializationBuf) EXPECT() *MockLossSocializationBufMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockLossSocializationBuf) Add(arg0 []events.LossSocialization) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0)
}

// Add indicates an expected call of Add
func (mr *MockLossSocializationBufMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockLossSocializationBuf)(nil).Add), arg0)
}

// Flush mocks base method
func (m *MockLossSocializationBuf) Flush() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Flush")
}

// Flush indicates an expected call of Flush
func (mr *MockLossSocializationBufMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockLossSocializationBuf)(nil).Flush))
}
