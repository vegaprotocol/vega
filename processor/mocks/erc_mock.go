// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/processor (interfaces: ExtResChecker)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto/gen/golang"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExtResChecker is a mock of ExtResChecker interface
type MockExtResChecker struct {
	ctrl     *gomock.Controller
	recorder *MockExtResCheckerMockRecorder
}

// MockExtResCheckerMockRecorder is the mock recorder for MockExtResChecker
type MockExtResCheckerMockRecorder struct {
	mock *MockExtResChecker
}

// NewMockExtResChecker creates a new mock instance
func NewMockExtResChecker(ctrl *gomock.Controller) *MockExtResChecker {
	mock := &MockExtResChecker{ctrl: ctrl}
	mock.recorder = &MockExtResCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExtResChecker) EXPECT() *MockExtResCheckerMockRecorder {
	return m.recorder
}

// AddNodeCheck mocks base method
func (m *MockExtResChecker) AddNodeCheck(arg0 context.Context, arg1 *proto.NodeVote) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNodeCheck", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddNodeCheck indicates an expected call of AddNodeCheck
func (mr *MockExtResCheckerMockRecorder) AddNodeCheck(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNodeCheck", reflect.TypeOf((*MockExtResChecker)(nil).AddNodeCheck), arg0, arg1)
}
