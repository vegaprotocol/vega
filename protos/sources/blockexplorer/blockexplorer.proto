syntax = "proto3";

package blockexplorer.api.v1;

import "vega/commands/v1/transaction.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "code.vegaprotocol.io/vega/protos/blockexplorer/api/v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Vega block explorer APIs";
    version: "v0.59.0";
  }
  schemes: [HTTP, HTTPS]
  host: "lb.testnet.vega.xyz"
};

service BlockExplorerService {
  // Get transaction
  //
  // Get a transaction from the Vega blockchain
  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse) {}

  // List transactions
  //
  // List transactions from the Vega blockchain
  rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {}
 }

message GetTransactionRequest {
  // The hash of the transaction
  string hash = 1;
}

message GetTransactionResponse{
  // The transaction corresponding to the hash
  Transaction transaction = 1;
}

message ListTransactionsRequest {
  // The number of transactions to be returned from the blockchain
  uint32 limit = 1;
  // An optional cursor to paginate the request
  optional string before = 2;
  // An optional cursor to paginate the request
  optional string after = 3;
  // Filters to apply to the request
  map<string, string> filters =4;
}

message ListTransactionsResponse{
  // The transaction corresponding to the specific request and filters
  repeated Transaction transactions = 3;
}

message Transaction {
  // The height of the block the transaction was found in
  uint64 block = 1;
  // The index of the transaction in the block
  uint32 index = 2;
  // The hash of the transaction
  string hash = 3;
  // The submitter of the transaction (Vega public key)
  string submitter = 4;
  // The type of transaction
  string type = 5;
  // The results code of the transaction (0 is success)
  uint32 code = 6;
  // The cursor for this transaction (in the page, used for paginated results)
  string cursor = 7;
  // The actual command of the transaction
  vega.commands.v1.InputData command = 8;
}
