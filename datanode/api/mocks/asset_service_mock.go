// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/datanode/api (interfaces: AssetService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	vega "code.vegaprotocol.io/vega/protos/vega"
	gomock "github.com/golang/mock/gomock"
)

// MockAssetService is a mock of AssetService interface.
type MockAssetService struct {
	ctrl     *gomock.Controller
	recorder *MockAssetServiceMockRecorder
}

// MockAssetServiceMockRecorder is the mock recorder for MockAssetService.
type MockAssetServiceMockRecorder struct {
	mock *MockAssetService
}

// NewMockAssetService creates a new mock instance.
func NewMockAssetService(ctrl *gomock.Controller) *MockAssetService {
	mock := &MockAssetService{ctrl: ctrl}
	mock.recorder = &MockAssetServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssetService) EXPECT() *MockAssetServiceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockAssetService) GetAll() ([]vega.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]vega.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockAssetServiceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockAssetService)(nil).GetAll))
}

// GetByID mocks base method.
func (m *MockAssetService) GetByID(arg0 string) (*vega.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*vega.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockAssetServiceMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockAssetService)(nil).GetByID), arg0)
}
