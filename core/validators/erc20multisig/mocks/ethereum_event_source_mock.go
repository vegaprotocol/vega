// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/core/validators/erc20multisig (interfaces: EthereumEventSource)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEthereumEventSource is a mock of EthereumEventSource interface.
type MockEthereumEventSource struct {
	ctrl     *gomock.Controller
	recorder *MockEthereumEventSourceMockRecorder
}

// MockEthereumEventSourceMockRecorder is the mock recorder for MockEthereumEventSource.
type MockEthereumEventSourceMockRecorder struct {
	mock *MockEthereumEventSource
}

// NewMockEthereumEventSource creates a new mock instance.
func NewMockEthereumEventSource(ctrl *gomock.Controller) *MockEthereumEventSource {
	mock := &MockEthereumEventSource{ctrl: ctrl}
	mock.recorder = &MockEthereumEventSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEthereumEventSource) EXPECT() *MockEthereumEventSourceMockRecorder {
	return m.recorder
}

// UpdateMultisigControlStartingBlock mocks base method.
func (m *MockEthereumEventSource) UpdateMultisigControlStartingBlock(arg0 uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateMultisigControlStartingBlock", arg0)
}

// UpdateMultisigControlStartingBlock indicates an expected call of UpdateMultisigControlStartingBlock.
func (mr *MockEthereumEventSourceMockRecorder) UpdateMultisigControlStartingBlock(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMultisigControlStartingBlock", reflect.TypeOf((*MockEthereumEventSource)(nil).UpdateMultisigControlStartingBlock), arg0)
}
