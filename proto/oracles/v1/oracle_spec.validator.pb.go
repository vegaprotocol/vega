// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: oracles/v1/oracle_spec.proto

package v1

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *OracleSpecConfiguration) Validate() error {
	for _, item := range this.Filters {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Filters", err)
			}
		}
	}
	return nil
}
func (this *OracleSpec) Validate() error {
	for _, item := range this.Filters {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Filters", err)
			}
		}
	}
	return nil
}
func (this *Filter) Validate() error {
	if this.Key != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Key); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Key", err)
		}
	}
	for _, item := range this.Conditions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Conditions", err)
			}
		}
	}
	return nil
}
func (this *PropertyKey) Validate() error {
	return nil
}
func (this *Condition) Validate() error {
	return nil
}
