// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/vega.proto

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Side int32

const (
	Side_Buy  Side = 0
	Side_Sell Side = 1
)

var Side_name = map[int32]string{
	0: "Buy",
	1: "Sell",
}
var Side_value = map[string]int32{
	"Buy":  0,
	"Sell": 1,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}
func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{0}
}

type OrderError int32

const (
	OrderError_NONE                   OrderError = 0
	OrderError_INVALID_MARKET_ID      OrderError = 1
	OrderError_INVALID_ORDER_ID       OrderError = 2
	OrderError_ORDER_OUT_OF_SEQUENCE  OrderError = 3
	OrderError_INVALID_REMAINING_SIZE OrderError = 4
	OrderError_NON_EMPTY_NEW_ORDER_ID OrderError = 5
	OrderError_ORDER_REMOVAL_FAILURE  OrderError = 6
)

var OrderError_name = map[int32]string{
	0: "NONE",
	1: "INVALID_MARKET_ID",
	2: "INVALID_ORDER_ID",
	3: "ORDER_OUT_OF_SEQUENCE",
	4: "INVALID_REMAINING_SIZE",
	5: "NON_EMPTY_NEW_ORDER_ID",
	6: "ORDER_REMOVAL_FAILURE",
}
var OrderError_value = map[string]int32{
	"NONE":                   0,
	"INVALID_MARKET_ID":      1,
	"INVALID_ORDER_ID":       2,
	"ORDER_OUT_OF_SEQUENCE":  3,
	"INVALID_REMAINING_SIZE": 4,
	"NON_EMPTY_NEW_ORDER_ID": 5,
	"ORDER_REMOVAL_FAILURE":  6,
}

func (x OrderError) String() string {
	return proto.EnumName(OrderError_name, int32(x))
}
func (OrderError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{1}
}

type Order_Type int32

const (
	Order_GTC Order_Type = 0
	Order_GTT Order_Type = 1
	Order_ENE Order_Type = 2
	Order_FOK Order_Type = 3
)

var Order_Type_name = map[int32]string{
	0: "GTC",
	1: "GTT",
	2: "ENE",
	3: "FOK",
}
var Order_Type_value = map[string]int32{
	"GTC": 0,
	"GTT": 1,
	"ENE": 2,
	"FOK": 3,
}

func (x Order_Type) String() string {
	return proto.EnumName(Order_Type_name, int32(x))
}
func (Order_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{1, 0}
}

type Order_Status int32

const (
	Order_Active    Order_Status = 0
	Order_Expired   Order_Status = 1
	Order_Cancelled Order_Status = 2
)

var Order_Status_name = map[int32]string{
	0: "Active",
	1: "Expired",
	2: "Cancelled",
}
var Order_Status_value = map[string]int32{
	"Active":    0,
	"Expired":   1,
	"Cancelled": 2,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}
func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{1, 1}
}

type Market struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{0}
}
func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (dst *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(dst, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Order struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Market               string       `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Party                string       `protobuf:"bytes,3,opt,name=party,proto3" json:"party,omitempty"`
	Side                 Side         `protobuf:"varint,4,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	Price                uint64       `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64       `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Remaining            uint64       `protobuf:"varint,7,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Type                 Order_Type   `protobuf:"varint,8,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	Timestamp            uint64       `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RiskFactor           uint64       `protobuf:"varint,10,opt,name=riskFactor,proto3" json:"riskFactor,omitempty"`
	Status               Order_Status `protobuf:"varint,11,opt,name=status,proto3,enum=vega.Order_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{1}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Order) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Order) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *Order) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Order) GetRemaining() uint64 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *Order) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_GTC
}

func (m *Order) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Order) GetRiskFactor() uint64 {
	if m != nil {
		return m.RiskFactor
	}
	return 0
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_Active
}

type OrderCancellation struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{2}
}
func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellation.Unmarshal(m, b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
}
func (dst *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(dst, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellation.Size(m)
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type OrderConfirmation struct {
	Order                 *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Trades                []*Trade `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"`
	PassiveOrdersAffected []*Order `protobuf:"bytes,3,rep,name=passiveOrdersAffected,proto3" json:"passiveOrdersAffected,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *OrderConfirmation) Reset()         { *m = OrderConfirmation{} }
func (m *OrderConfirmation) String() string { return proto.CompactTextString(m) }
func (*OrderConfirmation) ProtoMessage()    {}
func (*OrderConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{3}
}
func (m *OrderConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderConfirmation.Unmarshal(m, b)
}
func (m *OrderConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderConfirmation.Marshal(b, m, deterministic)
}
func (dst *OrderConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderConfirmation.Merge(dst, src)
}
func (m *OrderConfirmation) XXX_Size() int {
	return xxx_messageInfo_OrderConfirmation.Size(m)
}
func (m *OrderConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderConfirmation proto.InternalMessageInfo

func (m *OrderConfirmation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderConfirmation) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func (m *OrderConfirmation) GetPassiveOrdersAffected() []*Order {
	if m != nil {
		return m.PassiveOrdersAffected
	}
	return nil
}

type Trade struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Market               string   `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Price                uint64   `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Buyer                string   `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Seller               string   `protobuf:"bytes,6,opt,name=seller,proto3" json:"seller,omitempty"`
	Aggressor            Side     `protobuf:"varint,7,opt,name=aggressor,proto3,enum=vega.Side" json:"aggressor,omitempty"`
	Timestamp            uint64   `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{4}
}
func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (dst *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(dst, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trade) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Trade) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Trade) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *Trade) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *Trade) GetAggressor() Side {
	if m != nil {
		return m.Aggressor
	}
	return Side_Buy
}

func (m *Trade) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TradeSet struct {
	Trades               []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeSet) Reset()         { *m = TradeSet{} }
func (m *TradeSet) String() string { return proto.CompactTextString(m) }
func (*TradeSet) ProtoMessage()    {}
func (*TradeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{5}
}
func (m *TradeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeSet.Unmarshal(m, b)
}
func (m *TradeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeSet.Marshal(b, m, deterministic)
}
func (dst *TradeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeSet.Merge(dst, src)
}
func (m *TradeSet) XXX_Size() int {
	return xxx_messageInfo_TradeSet.Size(m)
}
func (m *TradeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeSet.DiscardUnknown(m)
}

var xxx_messageInfo_TradeSet proto.InternalMessageInfo

func (m *TradeSet) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type MarketData struct {
	BestBid              uint64   `protobuf:"varint,1,opt,name=bestBid,proto3" json:"bestBid,omitempty"`
	BestOffer            uint64   `protobuf:"varint,2,opt,name=bestOffer,proto3" json:"bestOffer,omitempty"`
	LastTradedPrice      uint64   `protobuf:"varint,3,opt,name=lastTradedPrice,proto3" json:"lastTradedPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketData) Reset()         { *m = MarketData{} }
func (m *MarketData) String() string { return proto.CompactTextString(m) }
func (*MarketData) ProtoMessage()    {}
func (*MarketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{6}
}
func (m *MarketData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketData.Unmarshal(m, b)
}
func (m *MarketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketData.Marshal(b, m, deterministic)
}
func (dst *MarketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketData.Merge(dst, src)
}
func (m *MarketData) XXX_Size() int {
	return xxx_messageInfo_MarketData.Size(m)
}
func (m *MarketData) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketData.DiscardUnknown(m)
}

var xxx_messageInfo_MarketData proto.InternalMessageInfo

func (m *MarketData) GetBestBid() uint64 {
	if m != nil {
		return m.BestBid
	}
	return 0
}

func (m *MarketData) GetBestOffer() uint64 {
	if m != nil {
		return m.BestOffer
	}
	return 0
}

func (m *MarketData) GetLastTradedPrice() uint64 {
	if m != nil {
		return m.LastTradedPrice
	}
	return 0
}

type MarketDepth struct {
	BuyOrderCount        uint64   `protobuf:"varint,1,opt,name=buyOrderCount,proto3" json:"buyOrderCount,omitempty"`
	SellOrderCount       uint64   `protobuf:"varint,2,opt,name=sellOrderCount,proto3" json:"sellOrderCount,omitempty"`
	BuyOrderVolume       uint64   `protobuf:"varint,3,opt,name=buyOrderVolume,proto3" json:"buyOrderVolume,omitempty"`
	SellOrderVolume      uint64   `protobuf:"varint,4,opt,name=sellOrderVolume,proto3" json:"sellOrderVolume,omitempty"`
	BuyPriceLevels       uint64   `protobuf:"varint,5,opt,name=buyPriceLevels,proto3" json:"buyPriceLevels,omitempty"`
	SellPriceLevels      uint64   `protobuf:"varint,6,opt,name=sellPriceLevels,proto3" json:"sellPriceLevels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepth) Reset()         { *m = MarketDepth{} }
func (m *MarketDepth) String() string { return proto.CompactTextString(m) }
func (*MarketDepth) ProtoMessage()    {}
func (*MarketDepth) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{7}
}
func (m *MarketDepth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepth.Unmarshal(m, b)
}
func (m *MarketDepth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepth.Marshal(b, m, deterministic)
}
func (dst *MarketDepth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepth.Merge(dst, src)
}
func (m *MarketDepth) XXX_Size() int {
	return xxx_messageInfo_MarketDepth.Size(m)
}
func (m *MarketDepth) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepth.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepth proto.InternalMessageInfo

func (m *MarketDepth) GetBuyOrderCount() uint64 {
	if m != nil {
		return m.BuyOrderCount
	}
	return 0
}

func (m *MarketDepth) GetSellOrderCount() uint64 {
	if m != nil {
		return m.SellOrderCount
	}
	return 0
}

func (m *MarketDepth) GetBuyOrderVolume() uint64 {
	if m != nil {
		return m.BuyOrderVolume
	}
	return 0
}

func (m *MarketDepth) GetSellOrderVolume() uint64 {
	if m != nil {
		return m.SellOrderVolume
	}
	return 0
}

func (m *MarketDepth) GetBuyPriceLevels() uint64 {
	if m != nil {
		return m.BuyPriceLevels
	}
	return 0
}

func (m *MarketDepth) GetSellPriceLevels() uint64 {
	if m != nil {
		return m.SellPriceLevels
	}
	return 0
}

type Candle struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	High                 uint64   `protobuf:"varint,2,opt,name=high,proto3" json:"high,omitempty"`
	Low                  uint64   `protobuf:"varint,3,opt,name=low,proto3" json:"low,omitempty"`
	Open                 uint64   `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"`
	Close                uint64   `protobuf:"varint,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume               uint64   `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`
	OpenBlockNumber      uint64   `protobuf:"varint,7,opt,name=openBlockNumber,proto3" json:"openBlockNumber,omitempty"`
	CloseBlockNumber     uint64   `protobuf:"varint,8,opt,name=closeBlockNumber,proto3" json:"closeBlockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{8}
}
func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (dst *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(dst, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Candle) GetHigh() uint64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() uint64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetOpen() uint64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() uint64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetOpenBlockNumber() uint64 {
	if m != nil {
		return m.OpenBlockNumber
	}
	return 0
}

func (m *Candle) GetCloseBlockNumber() uint64 {
	if m != nil {
		return m.CloseBlockNumber
	}
	return 0
}

type Candles struct {
	Candles              []*Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Candles) Reset()         { *m = Candles{} }
func (m *Candles) String() string { return proto.CompactTextString(m) }
func (*Candles) ProtoMessage()    {}
func (*Candles) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{9}
}
func (m *Candles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candles.Unmarshal(m, b)
}
func (m *Candles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candles.Marshal(b, m, deterministic)
}
func (dst *Candles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candles.Merge(dst, src)
}
func (m *Candles) XXX_Size() int {
	return xxx_messageInfo_Candles.Size(m)
}
func (m *Candles) XXX_DiscardUnknown() {
	xxx_messageInfo_Candles.DiscardUnknown(m)
}

var xxx_messageInfo_Candles proto.InternalMessageInfo

func (m *Candles) GetCandles() []*Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type PriceLevel struct {
	Price                uint64   `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	NumberOfOrders       uint64   `protobuf:"varint,2,opt,name=numberOfOrders,proto3" json:"numberOfOrders,omitempty"`
	Volume               uint64   `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	CumulativeVolume     uint64   `protobuf:"varint,4,opt,name=cumulativeVolume,proto3" json:"cumulativeVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLevel) Reset()         { *m = PriceLevel{} }
func (m *PriceLevel) String() string { return proto.CompactTextString(m) }
func (*PriceLevel) ProtoMessage()    {}
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{10}
}
func (m *PriceLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLevel.Unmarshal(m, b)
}
func (m *PriceLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLevel.Marshal(b, m, deterministic)
}
func (dst *PriceLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLevel.Merge(dst, src)
}
func (m *PriceLevel) XXX_Size() int {
	return xxx_messageInfo_PriceLevel.Size(m)
}
func (m *PriceLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLevel.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLevel proto.InternalMessageInfo

func (m *PriceLevel) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PriceLevel) GetNumberOfOrders() uint64 {
	if m != nil {
		return m.NumberOfOrders
	}
	return 0
}

func (m *PriceLevel) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PriceLevel) GetCumulativeVolume() uint64 {
	if m != nil {
		return m.CumulativeVolume
	}
	return 0
}

type OrderBookDepth struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Buy                  []*PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderBookDepth) Reset()         { *m = OrderBookDepth{} }
func (m *OrderBookDepth) String() string { return proto.CompactTextString(m) }
func (*OrderBookDepth) ProtoMessage()    {}
func (*OrderBookDepth) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{11}
}
func (m *OrderBookDepth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBookDepth.Unmarshal(m, b)
}
func (m *OrderBookDepth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBookDepth.Marshal(b, m, deterministic)
}
func (dst *OrderBookDepth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBookDepth.Merge(dst, src)
}
func (m *OrderBookDepth) XXX_Size() int {
	return xxx_messageInfo_OrderBookDepth.Size(m)
}
func (m *OrderBookDepth) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBookDepth.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBookDepth proto.InternalMessageInfo

func (m *OrderBookDepth) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderBookDepth) GetBuy() []*PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *OrderBookDepth) GetSell() []*PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

type MarketPosition struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	RealisedVolume       int64    `protobuf:"varint,2,opt,name=realisedVolume,proto3" json:"realisedVolume,omitempty"`
	RealisedPNL          int64    `protobuf:"varint,3,opt,name=realisedPNL,proto3" json:"realisedPNL,omitempty"`
	UnrealisedVolume     int64    `protobuf:"varint,4,opt,name=unrealisedVolume,proto3" json:"unrealisedVolume,omitempty"`
	UnrealisedPNL        int64    `protobuf:"varint,5,opt,name=unrealisedPNL,proto3" json:"unrealisedPNL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketPosition) Reset()         { *m = MarketPosition{} }
func (m *MarketPosition) String() string { return proto.CompactTextString(m) }
func (*MarketPosition) ProtoMessage()    {}
func (*MarketPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_vega_0e08ce21cd23d24c, []int{12}
}
func (m *MarketPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketPosition.Unmarshal(m, b)
}
func (m *MarketPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketPosition.Marshal(b, m, deterministic)
}
func (dst *MarketPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketPosition.Merge(dst, src)
}
func (m *MarketPosition) XXX_Size() int {
	return xxx_messageInfo_MarketPosition.Size(m)
}
func (m *MarketPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MarketPosition proto.InternalMessageInfo

func (m *MarketPosition) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *MarketPosition) GetRealisedVolume() int64 {
	if m != nil {
		return m.RealisedVolume
	}
	return 0
}

func (m *MarketPosition) GetRealisedPNL() int64 {
	if m != nil {
		return m.RealisedPNL
	}
	return 0
}

func (m *MarketPosition) GetUnrealisedVolume() int64 {
	if m != nil {
		return m.UnrealisedVolume
	}
	return 0
}

func (m *MarketPosition) GetUnrealisedPNL() int64 {
	if m != nil {
		return m.UnrealisedPNL
	}
	return 0
}

func init() {
	proto.RegisterType((*Market)(nil), "vega.Market")
	proto.RegisterType((*Order)(nil), "vega.Order")
	proto.RegisterType((*OrderCancellation)(nil), "vega.OrderCancellation")
	proto.RegisterType((*OrderConfirmation)(nil), "vega.OrderConfirmation")
	proto.RegisterType((*Trade)(nil), "vega.Trade")
	proto.RegisterType((*TradeSet)(nil), "vega.TradeSet")
	proto.RegisterType((*MarketData)(nil), "vega.MarketData")
	proto.RegisterType((*MarketDepth)(nil), "vega.MarketDepth")
	proto.RegisterType((*Candle)(nil), "vega.Candle")
	proto.RegisterType((*Candles)(nil), "vega.Candles")
	proto.RegisterType((*PriceLevel)(nil), "vega.PriceLevel")
	proto.RegisterType((*OrderBookDepth)(nil), "vega.OrderBookDepth")
	proto.RegisterType((*MarketPosition)(nil), "vega.MarketPosition")
	proto.RegisterEnum("vega.Side", Side_name, Side_value)
	proto.RegisterEnum("vega.OrderError", OrderError_name, OrderError_value)
	proto.RegisterEnum("vega.Order_Type", Order_Type_name, Order_Type_value)
	proto.RegisterEnum("vega.Order_Status", Order_Status_name, Order_Status_value)
}

func init() { proto.RegisterFile("msg/vega.proto", fileDescriptor_vega_0e08ce21cd23d24c) }

var fileDescriptor_vega_0e08ce21cd23d24c = []byte{
	// 1023 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0x63, 0x27, 0x69, 0x4e, 0xd8, 0xe0, 0x1d, 0xb5, 0x2b, 0x2f, 0x5a, 0xad, 0x8a, 0x59,
	0x55, 0x55, 0x2f, 0xba, 0xb0, 0x48, 0xdc, 0xa7, 0xad, 0xbb, 0x8a, 0xb6, 0x75, 0xca, 0x24, 0x2d,
	0x62, 0x6f, 0x22, 0x27, 0x9e, 0xa4, 0x56, 0xfd, 0x13, 0xcd, 0xd8, 0x81, 0xf0, 0x10, 0xbc, 0x00,
	0x12, 0xef, 0xc0, 0x3b, 0x70, 0xcf, 0x3d, 0x2f, 0x03, 0x9a, 0x33, 0xe3, 0xda, 0x49, 0x8b, 0xc4,
	0xde, 0x9d, 0xf3, 0x9d, 0xff, 0x93, 0x6f, 0x8e, 0x03, 0xbd, 0x44, 0x2c, 0xde, 0xae, 0xd8, 0x22,
	0x38, 0x59, 0xf2, 0x2c, 0xcf, 0x88, 0x25, 0x65, 0xf7, 0x15, 0xb4, 0xae, 0x02, 0x7e, 0xcf, 0x72,
	0x42, 0xc0, 0x4a, 0x83, 0x84, 0x39, 0xc6, 0x81, 0x71, 0xd4, 0xa1, 0x28, 0xbb, 0xbf, 0x99, 0xd0,
	0x1c, 0xf2, 0x90, 0x71, 0xd2, 0x83, 0x46, 0x14, 0x6a, 0x5b, 0x23, 0x0a, 0xc9, 0x0b, 0x68, 0x25,
	0x18, 0xe7, 0x34, 0x10, 0xd3, 0x1a, 0xd9, 0x83, 0xe6, 0x32, 0xe0, 0xf9, 0xda, 0x31, 0x11, 0x56,
	0x0a, 0x79, 0x0d, 0x96, 0x88, 0x42, 0xe6, 0x58, 0x07, 0xc6, 0x51, 0xef, 0x1d, 0x9c, 0x60, 0x1b,
	0xa3, 0x28, 0x64, 0x14, 0x71, 0x8c, 0xe2, 0xd1, 0x8c, 0x39, 0xcd, 0x03, 0xe3, 0xc8, 0xa2, 0x4a,
	0x91, 0x1d, 0x89, 0xe8, 0x17, 0xe6, 0xb4, 0x10, 0x44, 0x99, 0xbc, 0x82, 0x0e, 0x67, 0x49, 0x10,
	0xa5, 0x51, 0xba, 0x70, 0xda, 0x68, 0xa8, 0x00, 0xf2, 0x06, 0xac, 0x7c, 0xbd, 0x64, 0xce, 0x2e,
	0xd6, 0xb1, 0x55, 0x1d, 0x1c, 0xe0, 0x64, 0xbc, 0x5e, 0x32, 0x8a, 0x56, 0x99, 0x23, 0x8f, 0x12,
	0x26, 0xf2, 0x20, 0x59, 0x3a, 0x1d, 0x95, 0xe3, 0x01, 0x20, 0xaf, 0x01, 0x78, 0x24, 0xee, 0x2f,
	0x82, 0x59, 0x9e, 0x71, 0x07, 0xd0, 0x5c, 0x43, 0xc8, 0x31, 0xb4, 0x44, 0x1e, 0xe4, 0x85, 0x70,
	0xba, 0x58, 0x85, 0xd4, 0xab, 0x8c, 0xd0, 0x42, 0xb5, 0x87, 0x7b, 0x0c, 0x96, 0xac, 0x4b, 0xda,
	0x60, 0xbe, 0x1f, 0x9f, 0xd9, 0x3b, 0x4a, 0x18, 0xdb, 0x86, 0x14, 0x3c, 0xdf, 0xb3, 0x1b, 0x52,
	0xb8, 0x18, 0x7e, 0xb0, 0x4d, 0xf7, 0x6b, 0x68, 0xa9, 0x68, 0x02, 0xd0, 0xea, 0xcf, 0xf2, 0x68,
	0xc5, 0xec, 0x1d, 0xd2, 0x85, 0xb6, 0xf7, 0xf3, 0x32, 0xe2, 0x2c, 0xb4, 0x0d, 0xf2, 0x0c, 0x3a,
	0x67, 0x41, 0x3a, 0x63, 0x71, 0xcc, 0x42, 0xbb, 0xe1, 0x7e, 0x07, 0xcf, 0xb1, 0xaa, 0xc6, 0x82,
	0x3c, 0xca, 0x52, 0xf2, 0x25, 0x34, 0x33, 0x09, 0xe2, 0x6f, 0xd5, 0x7d, 0xd7, 0xad, 0x75, 0x47,
	0x95, 0xc5, 0xfd, 0xdd, 0x28, 0x03, 0xb3, 0x74, 0x1e, 0xf1, 0xe4, 0xff, 0x06, 0x92, 0xaf, 0xa0,
	0x95, 0xf3, 0x20, 0x64, 0xc2, 0x69, 0x1c, 0x98, 0x95, 0xcf, 0x58, 0x62, 0x54, 0x9b, 0x48, 0x1f,
	0xf6, 0x97, 0x81, 0x10, 0xd1, 0x8a, 0x61, 0xac, 0xe8, 0xcf, 0xe7, 0x6c, 0x96, 0xb3, 0xd0, 0x31,
	0xeb, 0x31, 0x2a, 0xef, 0xd3, 0x9e, 0xee, 0x5f, 0x06, 0x34, 0x31, 0xe9, 0x27, 0xd1, 0x0e, 0x09,
	0x64, 0x3e, 0x45, 0x20, 0xab, 0x46, 0xa0, 0x3d, 0x68, 0x4e, 0x8b, 0x35, 0xe3, 0x48, 0xb5, 0x0e,
	0x55, 0x8a, 0xcc, 0x2b, 0xe4, 0x5a, 0x39, 0x92, 0xad, 0x43, 0xb5, 0x46, 0x8e, 0xa0, 0x13, 0x2c,
	0x16, 0x9c, 0x09, 0x91, 0x71, 0xa4, 0xdb, 0x26, 0x7b, 0x2b, 0xe3, 0x26, 0xa9, 0x76, 0xb7, 0x48,
	0xe5, 0xbe, 0x85, 0x5d, 0x1c, 0x68, 0xc4, 0xf2, 0xda, 0x16, 0x8d, 0xff, 0xdc, 0xa2, 0x9b, 0x02,
	0xa8, 0x77, 0x79, 0x1e, 0xe4, 0x01, 0x71, 0xa0, 0x3d, 0x65, 0x22, 0x3f, 0xd5, 0xbb, 0xb0, 0x68,
	0xa9, 0xca, 0xb2, 0x52, 0x1c, 0xce, 0xe7, 0x8c, 0xe3, 0x4e, 0x2c, 0x5a, 0x01, 0xe4, 0x08, 0x3e,
	0x8f, 0x03, 0x91, 0x63, 0xea, 0xf0, 0xba, 0xb6, 0xa0, 0x6d, 0xd8, 0xfd, 0xc7, 0x80, 0xae, 0x2e,
	0xc8, 0x96, 0xf9, 0x1d, 0x79, 0x03, 0xcf, 0xa6, 0xc5, 0x5a, 0xb3, 0xa4, 0x48, 0x73, 0x5d, 0x77,
	0x13, 0x24, 0x87, 0xd0, 0x93, 0x8b, 0xaa, 0xb9, 0xa9, 0x16, 0xb6, 0x50, 0xe9, 0x57, 0x06, 0xde,
	0x66, 0x71, 0x91, 0x94, 0x6d, 0x6c, 0xa1, 0xb2, 0xdf, 0x87, 0x48, 0xed, 0xa8, 0x7e, 0xbb, 0x6d,
	0x58, 0x67, 0xc4, 0xde, 0x2f, 0xd9, 0x8a, 0xc5, 0x42, 0x9f, 0x8e, 0x2d, 0xb4, 0xcc, 0x58, 0x77,
	0x6c, 0x55, 0x19, 0x6b, 0xb0, 0xfb, 0xb7, 0x01, 0xad, 0xb3, 0x20, 0x0d, 0x63, 0xe4, 0x4d, 0x18,
	0xe4, 0x0f, 0xa7, 0x50, 0xca, 0x12, 0xbb, 0x8b, 0x16, 0x77, 0x7a, 0x40, 0x94, 0x89, 0x0d, 0x66,
	0x9c, 0xfd, 0xa4, 0x67, 0x91, 0xa2, 0xf4, 0xca, 0x96, 0x2c, 0x2d, 0x19, 0x27, 0x65, 0xc9, 0xb8,
	0x59, 0x9c, 0x89, 0x87, 0xe3, 0x86, 0x8a, 0x64, 0xdc, 0x4a, 0x4d, 0xa8, 0xfa, 0xd1, 0x9a, 0x6c,
	0x58, 0x46, 0x9d, 0xc6, 0xd9, 0xec, 0xde, 0x2f, 0x92, 0x29, 0xe3, 0xfa, 0xcc, 0x6d, 0xc3, 0xe4,
	0x18, 0x6c, 0x4c, 0x55, 0x77, 0x55, 0xc4, 0x7b, 0x84, 0xbb, 0xdf, 0x40, 0x5b, 0xcd, 0x26, 0xc8,
	0x21, 0xb4, 0x67, 0x4a, 0xd4, 0xfc, 0xfb, 0x4c, 0xf1, 0x4f, 0xd9, 0x69, 0x69, 0x74, 0x7f, 0x35,
	0x00, 0xaa, 0xfd, 0x54, 0x2f, 0xcc, 0xa8, 0xbf, 0xb0, 0x43, 0xe8, 0xa5, 0x58, 0x61, 0x38, 0x57,
	0x6f, 0xb8, 0x24, 0xc0, 0x26, 0x5a, 0x9b, 0xd6, 0xdc, 0x98, 0x56, 0xce, 0x50, 0x24, 0x85, 0xbc,
	0x5d, 0x2b, 0xb6, 0xf1, 0x8b, 0x3f, 0xc2, 0xdd, 0x14, 0x7a, 0x98, 0xed, 0x34, 0xcb, 0xee, 0x15,
	0x49, 0x9f, 0xf8, 0x64, 0x11, 0x17, 0xcc, 0x69, 0xb1, 0xd6, 0x07, 0x4a, 0x7f, 0x01, 0xaa, 0x31,
	0xa8, 0x34, 0xca, 0xcf, 0x84, 0xfc, 0xf5, 0xf5, 0x45, 0x7a, 0xec, 0x84, 0x56, 0xf7, 0x4f, 0x03,
	0x7a, 0xea, 0x49, 0x5c, 0x67, 0x22, 0xc2, 0x1b, 0x59, 0x9d, 0x1f, 0x63, 0xe3, 0xfc, 0x1c, 0x42,
	0x8f, 0xb3, 0x20, 0x8e, 0x04, 0x0b, 0xf5, 0x10, 0x72, 0x0d, 0x26, 0xdd, 0x42, 0xc9, 0x01, 0x74,
	0x4b, 0xe4, 0xda, 0xbf, 0xc4, 0x5d, 0x98, 0xb4, 0x0e, 0xc9, 0x85, 0x14, 0xe9, 0x56, 0x2e, 0x0b,
	0xdd, 0x1e, 0xe1, 0xf2, 0x8d, 0x56, 0x98, 0xcc, 0xd7, 0x44, 0xc7, 0x4d, 0xf0, 0xf8, 0x25, 0x58,
	0xf2, 0x56, 0xc9, 0x0f, 0xcd, 0x69, 0xb1, 0xb6, 0x77, 0xc8, 0x2e, 0x58, 0x23, 0x16, 0xc7, 0xb6,
	0x71, 0xfc, 0x87, 0x01, 0x80, 0x2b, 0xf5, 0x38, 0xcf, 0xb8, 0x34, 0xf8, 0x43, 0xdf, 0xb3, 0x77,
	0xc8, 0x3e, 0x3c, 0x1f, 0xf8, 0xb7, 0xfd, 0xcb, 0xc1, 0xf9, 0xe4, 0xaa, 0x4f, 0x3f, 0x78, 0xe3,
	0xc9, 0xe0, 0xdc, 0x36, 0xc8, 0x1e, 0xd8, 0x25, 0x3c, 0xa4, 0xe7, 0x1e, 0x95, 0x68, 0x83, 0xbc,
	0x84, 0x7d, 0xa5, 0x0d, 0x6f, 0xc6, 0x93, 0xe1, 0xc5, 0x64, 0xe4, 0x7d, 0x7f, 0xe3, 0xf9, 0x67,
	0x9e, 0x6d, 0x92, 0x2f, 0xe0, 0x45, 0x19, 0x40, 0xbd, 0xab, 0xfe, 0xc0, 0x1f, 0xf8, 0xef, 0x27,
	0xa3, 0xc1, 0x47, 0xcf, 0xb6, 0xa4, 0xcd, 0x1f, 0xfa, 0x13, 0xef, 0xea, 0x7a, 0xfc, 0xe3, 0xc4,
	0xf7, 0x7e, 0xa8, 0x52, 0x36, 0xab, 0x94, 0xd4, 0xbb, 0x1a, 0xde, 0xf6, 0x2f, 0x27, 0x17, 0xfd,
	0xc1, 0xe5, 0x0d, 0xf5, 0xec, 0xd6, 0x69, 0xf3, 0xa3, 0x99, 0x88, 0xc5, 0xb4, 0x85, 0x7f, 0x62,
	0xbe, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x74, 0x29, 0xa1, 0x63, 0xd6, 0x08, 0x00, 0x00,
}
