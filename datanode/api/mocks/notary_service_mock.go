// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/datanode/api (interfaces: NotaryService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	v1 "code.vegaprotocol.io/protos/vega/commands/v1"
	gomock "github.com/golang/mock/gomock"
)

// MockNotaryService is a mock of NotaryService interface.
type MockNotaryService struct {
	ctrl     *gomock.Controller
	recorder *MockNotaryServiceMockRecorder
}

// MockNotaryServiceMockRecorder is the mock recorder for MockNotaryService.
type MockNotaryServiceMockRecorder struct {
	mock *MockNotaryService
}

// NewMockNotaryService creates a new mock instance.
func NewMockNotaryService(ctrl *gomock.Controller) *MockNotaryService {
	mock := &MockNotaryService{ctrl: ctrl}
	mock.recorder = &MockNotaryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotaryService) EXPECT() *MockNotaryServiceMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockNotaryService) GetByID(arg0 string) ([]v1.NodeSignature, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].([]v1.NodeSignature)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockNotaryServiceMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockNotaryService)(nil).GetByID), arg0)
}
