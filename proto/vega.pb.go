// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vega.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Side int32

const (
	Side_Buy  Side = 0
	Side_Sell Side = 1
)

var Side_name = map[int32]string{
	0: "Buy",
	1: "Sell",
}

var Side_value = map[string]int32{
	"Buy":  0,
	"Sell": 1,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{0}
}

type Interval int32

const (
	Interval_I1M  Interval = 0
	Interval_I5M  Interval = 1
	Interval_I15M Interval = 2
	Interval_I1H  Interval = 3
	Interval_I6H  Interval = 4
	Interval_I1D  Interval = 5
)

var Interval_name = map[int32]string{
	0: "I1M",
	1: "I5M",
	2: "I15M",
	3: "I1H",
	4: "I6H",
	5: "I1D",
}

var Interval_value = map[string]int32{
	"I1M":  0,
	"I5M":  1,
	"I15M": 2,
	"I1H":  3,
	"I6H":  4,
	"I1D":  5,
}

func (x Interval) String() string {
	return proto.EnumName(Interval_name, int32(x))
}

func (Interval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{1}
}

type OrderError int32

const (
	OrderError_NONE                        OrderError = 0
	OrderError_INVALID_MARKET_ID           OrderError = 1
	OrderError_INVALID_ORDER_ID            OrderError = 2
	OrderError_ORDER_OUT_OF_SEQUENCE       OrderError = 3
	OrderError_INVALID_REMAINING_SIZE      OrderError = 4
	OrderError_TIME_FAILURE                OrderError = 5
	OrderError_ORDER_REMOVAL_FAILURE       OrderError = 6
	OrderError_INVALID_EXPIRATION_DATETIME OrderError = 7
	OrderError_INVALID_ORDER_REFERENCE     OrderError = 8
	OrderError_EDIT_NOT_ALLOWED            OrderError = 9
	OrderError_ORDER_AMEND_FAILURE         OrderError = 10
	OrderError_ORDER_NOT_FOUND             OrderError = 11
)

var OrderError_name = map[int32]string{
	0:  "NONE",
	1:  "INVALID_MARKET_ID",
	2:  "INVALID_ORDER_ID",
	3:  "ORDER_OUT_OF_SEQUENCE",
	4:  "INVALID_REMAINING_SIZE",
	5:  "TIME_FAILURE",
	6:  "ORDER_REMOVAL_FAILURE",
	7:  "INVALID_EXPIRATION_DATETIME",
	8:  "INVALID_ORDER_REFERENCE",
	9:  "EDIT_NOT_ALLOWED",
	10: "ORDER_AMEND_FAILURE",
	11: "ORDER_NOT_FOUND",
}

var OrderError_value = map[string]int32{
	"NONE":                        0,
	"INVALID_MARKET_ID":           1,
	"INVALID_ORDER_ID":            2,
	"ORDER_OUT_OF_SEQUENCE":       3,
	"INVALID_REMAINING_SIZE":      4,
	"TIME_FAILURE":                5,
	"ORDER_REMOVAL_FAILURE":       6,
	"INVALID_EXPIRATION_DATETIME": 7,
	"INVALID_ORDER_REFERENCE":     8,
	"EDIT_NOT_ALLOWED":            9,
	"ORDER_AMEND_FAILURE":         10,
	"ORDER_NOT_FOUND":             11,
}

func (x OrderError) String() string {
	return proto.EnumName(OrderError_name, int32(x))
}

func (OrderError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{2}
}

type ChainStatus int32

const (
	ChainStatus_DISCONNECTED ChainStatus = 0
	ChainStatus_REPLAYING    ChainStatus = 1
	ChainStatus_CONNECTED    ChainStatus = 2
)

var ChainStatus_name = map[int32]string{
	0: "DISCONNECTED",
	1: "REPLAYING",
	2: "CONNECTED",
}

var ChainStatus_value = map[string]int32{
	"DISCONNECTED": 0,
	"REPLAYING":    1,
	"CONNECTED":    2,
}

func (x ChainStatus) String() string {
	return proto.EnumName(ChainStatus_name, int32(x))
}

func (ChainStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{3}
}

type AccountType int32

const (
	AccountType_INSURANCE  AccountType = 0
	AccountType_SETTLEMENT AccountType = 1
	AccountType_MARGIN     AccountType = 2
	AccountType_MARKET     AccountType = 3
	AccountType_GENERAL    AccountType = 4
)

var AccountType_name = map[int32]string{
	0: "INSURANCE",
	1: "SETTLEMENT",
	2: "MARGIN",
	3: "MARKET",
	4: "GENERAL",
}

var AccountType_value = map[string]int32{
	"INSURANCE":  0,
	"SETTLEMENT": 1,
	"MARGIN":     2,
	"MARKET":     3,
	"GENERAL":    4,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{4}
}

type TransferType int32

const (
	TransferType_LOSS     TransferType = 0
	TransferType_WIN      TransferType = 1
	TransferType_CLOSE    TransferType = 2
	TransferType_MTM_LOSS TransferType = 3
	TransferType_MTM_WIN  TransferType = 4
)

var TransferType_name = map[int32]string{
	0: "LOSS",
	1: "WIN",
	2: "CLOSE",
	3: "MTM_LOSS",
	4: "MTM_WIN",
}

var TransferType_value = map[string]int32{
	"LOSS":     0,
	"WIN":      1,
	"CLOSE":    2,
	"MTM_LOSS": 3,
	"MTM_WIN":  4,
}

func (x TransferType) String() string {
	return proto.EnumName(TransferType_name, int32(x))
}

func (TransferType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5}
}

type Order_Type int32

const (
	Order_GTC Order_Type = 0
	Order_GTT Order_Type = 1
	Order_ENE Order_Type = 2
	Order_FOK Order_Type = 3
)

var Order_Type_name = map[int32]string{
	0: "GTC",
	1: "GTT",
	2: "ENE",
	3: "FOK",
}

var Order_Type_value = map[string]int32{
	"GTC": 0,
	"GTT": 1,
	"ENE": 2,
	"FOK": 3,
}

func (x Order_Type) String() string {
	return proto.EnumName(Order_Type_name, int32(x))
}

func (Order_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{4, 0}
}

type Order_Status int32

const (
	Order_Active    Order_Status = 0
	Order_Expired   Order_Status = 1
	Order_Cancelled Order_Status = 2
	Order_Stopped   Order_Status = 3
	Order_Filled    Order_Status = 4
)

var Order_Status_name = map[int32]string{
	0: "Active",
	1: "Expired",
	2: "Cancelled",
	3: "Stopped",
	4: "Filled",
}

var Order_Status_value = map[string]int32{
	"Active":    0,
	"Expired":   1,
	"Cancelled": 2,
	"Stopped":   3,
	"Filled":    4,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}

func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{4, 1}
}

type Amount struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Amount) Reset()         { *m = Amount{} }
func (m *Amount) String() string { return proto.CompactTextString(m) }
func (*Amount) ProtoMessage()    {}
func (*Amount) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{0}
}

func (m *Amount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Amount.Unmarshal(m, b)
}
func (m *Amount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Amount.Marshal(b, m, deterministic)
}
func (m *Amount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Amount.Merge(m, src)
}
func (m *Amount) XXX_Size() int {
	return xxx_messageInfo_Amount.Size(m)
}
func (m *Amount) XXX_DiscardUnknown() {
	xxx_messageInfo_Amount.DiscardUnknown(m)
}

var xxx_messageInfo_Amount proto.InternalMessageInfo

func (m *Amount) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Party struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Positions            []*MarketPosition `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Party) Reset()         { *m = Party{} }
func (m *Party) String() string { return proto.CompactTextString(m) }
func (*Party) ProtoMessage()    {}
func (*Party) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{1}
}

func (m *Party) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Party.Unmarshal(m, b)
}
func (m *Party) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Party.Marshal(b, m, deterministic)
}
func (m *Party) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Party.Merge(m, src)
}
func (m *Party) XXX_Size() int {
	return xxx_messageInfo_Party.Size(m)
}
func (m *Party) XXX_DiscardUnknown() {
	xxx_messageInfo_Party.DiscardUnknown(m)
}

var xxx_messageInfo_Party proto.InternalMessageInfo

func (m *Party) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Party) GetPositions() []*MarketPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

type RiskFactor struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Short                float64  `protobuf:"fixed64,2,opt,name=short,proto3" json:"short,omitempty"`
	Long                 float64  `protobuf:"fixed64,3,opt,name=long,proto3" json:"long,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskFactor) Reset()         { *m = RiskFactor{} }
func (m *RiskFactor) String() string { return proto.CompactTextString(m) }
func (*RiskFactor) ProtoMessage()    {}
func (*RiskFactor) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{2}
}

func (m *RiskFactor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskFactor.Unmarshal(m, b)
}
func (m *RiskFactor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskFactor.Marshal(b, m, deterministic)
}
func (m *RiskFactor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskFactor.Merge(m, src)
}
func (m *RiskFactor) XXX_Size() int {
	return xxx_messageInfo_RiskFactor.Size(m)
}
func (m *RiskFactor) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskFactor.DiscardUnknown(m)
}

var xxx_messageInfo_RiskFactor proto.InternalMessageInfo

func (m *RiskFactor) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *RiskFactor) GetShort() float64 {
	if m != nil {
		return m.Short
	}
	return 0
}

func (m *RiskFactor) GetLong() float64 {
	if m != nil {
		return m.Long
	}
	return 0
}

type RiskResult struct {
	// timestamp when these risk factors were generated
	UpdatedTimestamp int64 `protobuf:"varint,1,opt,name=updatedTimestamp,proto3" json:"updatedTimestamp,omitempty"`
	// risk factors (long and short) for each marginable asset/currency (usualy == settlement assets) in the market
	RiskFactors map[string]*RiskFactor `protobuf:"bytes,2,rep,name=riskFactors,proto3" json:"riskFactors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// time when risk factors are expected to change (or empty if risk factors are continually updated)
	NextUpdateTimestamp int64 `protobuf:"varint,3,opt,name=nextUpdateTimestamp,proto3" json:"nextUpdateTimestamp,omitempty"`
	// predicted risk factors at next change (what they'd be if the change occurred now)
	PredictedNextRiskFactors map[string]*RiskFactor `protobuf:"bytes,4,rep,name=predictedNextRiskFactors,proto3" json:"predictedNextRiskFactors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral     struct{}               `json:"-"`
	XXX_unrecognized         []byte                 `json:"-"`
	XXX_sizecache            int32                  `json:"-"`
}

func (m *RiskResult) Reset()         { *m = RiskResult{} }
func (m *RiskResult) String() string { return proto.CompactTextString(m) }
func (*RiskResult) ProtoMessage()    {}
func (*RiskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{3}
}

func (m *RiskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskResult.Unmarshal(m, b)
}
func (m *RiskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskResult.Marshal(b, m, deterministic)
}
func (m *RiskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskResult.Merge(m, src)
}
func (m *RiskResult) XXX_Size() int {
	return xxx_messageInfo_RiskResult.Size(m)
}
func (m *RiskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskResult.DiscardUnknown(m)
}

var xxx_messageInfo_RiskResult proto.InternalMessageInfo

func (m *RiskResult) GetUpdatedTimestamp() int64 {
	if m != nil {
		return m.UpdatedTimestamp
	}
	return 0
}

func (m *RiskResult) GetRiskFactors() map[string]*RiskFactor {
	if m != nil {
		return m.RiskFactors
	}
	return nil
}

func (m *RiskResult) GetNextUpdateTimestamp() int64 {
	if m != nil {
		return m.NextUpdateTimestamp
	}
	return 0
}

func (m *RiskResult) GetPredictedNextRiskFactors() map[string]*RiskFactor {
	if m != nil {
		return m.PredictedNextRiskFactors
	}
	return nil
}

type Order struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID             string       `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string       `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Side                 Side         `protobuf:"varint,4,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	Price                uint64       `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64       `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Remaining            uint64       `protobuf:"varint,7,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Type                 Order_Type   `protobuf:"varint,8,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	CreatedAt            int64        `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Status               Order_Status `protobuf:"varint,10,opt,name=status,proto3,enum=vega.Order_Status" json:"status,omitempty"`
	ExpiresAt            int64        `protobuf:"varint,11,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Reference            string       `protobuf:"bytes,12,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{4}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Order) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Order) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *Order) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Order) GetRemaining() uint64 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *Order) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_GTC
}

func (m *Order) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_Active
}

func (m *Order) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *Order) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrderCancellationConfirmation struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellationConfirmation) Reset()         { *m = OrderCancellationConfirmation{} }
func (m *OrderCancellationConfirmation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellationConfirmation) ProtoMessage()    {}
func (*OrderCancellationConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5}
}

func (m *OrderCancellationConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellationConfirmation.Unmarshal(m, b)
}
func (m *OrderCancellationConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellationConfirmation.Marshal(b, m, deterministic)
}
func (m *OrderCancellationConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellationConfirmation.Merge(m, src)
}
func (m *OrderCancellationConfirmation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellationConfirmation.Size(m)
}
func (m *OrderCancellationConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellationConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellationConfirmation proto.InternalMessageInfo

func (m *OrderCancellationConfirmation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type OrderConfirmation struct {
	Order                 *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Trades                []*Trade `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"`
	PassiveOrdersAffected []*Order `protobuf:"bytes,3,rep,name=passiveOrdersAffected,proto3" json:"passiveOrdersAffected,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *OrderConfirmation) Reset()         { *m = OrderConfirmation{} }
func (m *OrderConfirmation) String() string { return proto.CompactTextString(m) }
func (*OrderConfirmation) ProtoMessage()    {}
func (*OrderConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{6}
}

func (m *OrderConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderConfirmation.Unmarshal(m, b)
}
func (m *OrderConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderConfirmation.Marshal(b, m, deterministic)
}
func (m *OrderConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderConfirmation.Merge(m, src)
}
func (m *OrderConfirmation) XXX_Size() int {
	return xxx_messageInfo_OrderConfirmation.Size(m)
}
func (m *OrderConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderConfirmation proto.InternalMessageInfo

func (m *OrderConfirmation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderConfirmation) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func (m *OrderConfirmation) GetPassiveOrdersAffected() []*Order {
	if m != nil {
		return m.PassiveOrdersAffected
	}
	return nil
}

type Trade struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Price                uint64   `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Buyer                string   `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Seller               string   `protobuf:"bytes,6,opt,name=seller,proto3" json:"seller,omitempty"`
	Aggressor            Side     `protobuf:"varint,7,opt,name=aggressor,proto3,enum=vega.Side" json:"aggressor,omitempty"`
	BuyOrder             string   `protobuf:"bytes,8,opt,name=buyOrder,proto3" json:"buyOrder,omitempty"`
	SellOrder            string   `protobuf:"bytes,9,opt,name=sellOrder,proto3" json:"sellOrder,omitempty"`
	Timestamp            int64    `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{7}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trade) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Trade) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Trade) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *Trade) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *Trade) GetAggressor() Side {
	if m != nil {
		return m.Aggressor
	}
	return Side_Buy
}

func (m *Trade) GetBuyOrder() string {
	if m != nil {
		return m.BuyOrder
	}
	return ""
}

func (m *Trade) GetSellOrder() string {
	if m != nil {
		return m.SellOrder
	}
	return ""
}

func (m *Trade) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TradeSet struct {
	Trades               []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeSet) Reset()         { *m = TradeSet{} }
func (m *TradeSet) String() string { return proto.CompactTextString(m) }
func (*TradeSet) ProtoMessage()    {}
func (*TradeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{8}
}

func (m *TradeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeSet.Unmarshal(m, b)
}
func (m *TradeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeSet.Marshal(b, m, deterministic)
}
func (m *TradeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeSet.Merge(m, src)
}
func (m *TradeSet) XXX_Size() int {
	return xxx_messageInfo_TradeSet.Size(m)
}
func (m *TradeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeSet.DiscardUnknown(m)
}

var xxx_messageInfo_TradeSet proto.InternalMessageInfo

func (m *TradeSet) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type MarketData struct {
	BestBid              uint64   `protobuf:"varint,1,opt,name=bestBid,proto3" json:"bestBid,omitempty"`
	BestOffer            uint64   `protobuf:"varint,2,opt,name=bestOffer,proto3" json:"bestOffer,omitempty"`
	LastTradedPrice      uint64   `protobuf:"varint,3,opt,name=lastTradedPrice,proto3" json:"lastTradedPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketData) Reset()         { *m = MarketData{} }
func (m *MarketData) String() string { return proto.CompactTextString(m) }
func (*MarketData) ProtoMessage()    {}
func (*MarketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{9}
}

func (m *MarketData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketData.Unmarshal(m, b)
}
func (m *MarketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketData.Marshal(b, m, deterministic)
}
func (m *MarketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketData.Merge(m, src)
}
func (m *MarketData) XXX_Size() int {
	return xxx_messageInfo_MarketData.Size(m)
}
func (m *MarketData) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketData.DiscardUnknown(m)
}

var xxx_messageInfo_MarketData proto.InternalMessageInfo

func (m *MarketData) GetBestBid() uint64 {
	if m != nil {
		return m.BestBid
	}
	return 0
}

func (m *MarketData) GetBestOffer() uint64 {
	if m != nil {
		return m.BestOffer
	}
	return 0
}

func (m *MarketData) GetLastTradedPrice() uint64 {
	if m != nil {
		return m.LastTradedPrice
	}
	return 0
}

type Candle struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Datetime             string   `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	High                 uint64   `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`
	Low                  uint64   `protobuf:"varint,4,opt,name=low,proto3" json:"low,omitempty"`
	Open                 uint64   `protobuf:"varint,5,opt,name=open,proto3" json:"open,omitempty"`
	Close                uint64   `protobuf:"varint,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume               uint64   `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Interval             Interval `protobuf:"varint,8,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{10}
}

func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (m *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(m, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Candle) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *Candle) GetHigh() uint64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() uint64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetOpen() uint64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() uint64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetInterval() Interval {
	if m != nil {
		return m.Interval
	}
	return Interval_I1M
}

type PriceLevel struct {
	Price                uint64   `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	NumberOfOrders       uint64   `protobuf:"varint,2,opt,name=numberOfOrders,proto3" json:"numberOfOrders,omitempty"`
	Volume               uint64   `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	CumulativeVolume     uint64   `protobuf:"varint,4,opt,name=cumulativeVolume,proto3" json:"cumulativeVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLevel) Reset()         { *m = PriceLevel{} }
func (m *PriceLevel) String() string { return proto.CompactTextString(m) }
func (*PriceLevel) ProtoMessage()    {}
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{11}
}

func (m *PriceLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLevel.Unmarshal(m, b)
}
func (m *PriceLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLevel.Marshal(b, m, deterministic)
}
func (m *PriceLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLevel.Merge(m, src)
}
func (m *PriceLevel) XXX_Size() int {
	return xxx_messageInfo_PriceLevel.Size(m)
}
func (m *PriceLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLevel.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLevel proto.InternalMessageInfo

func (m *PriceLevel) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PriceLevel) GetNumberOfOrders() uint64 {
	if m != nil {
		return m.NumberOfOrders
	}
	return 0
}

func (m *PriceLevel) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PriceLevel) GetCumulativeVolume() uint64 {
	if m != nil {
		return m.CumulativeVolume
	}
	return 0
}

type MarketDepth struct {
	MarketID             string        `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Buy                  []*PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MarketDepth) Reset()         { *m = MarketDepth{} }
func (m *MarketDepth) String() string { return proto.CompactTextString(m) }
func (*MarketDepth) ProtoMessage()    {}
func (*MarketDepth) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{12}
}

func (m *MarketDepth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepth.Unmarshal(m, b)
}
func (m *MarketDepth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepth.Marshal(b, m, deterministic)
}
func (m *MarketDepth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepth.Merge(m, src)
}
func (m *MarketDepth) XXX_Size() int {
	return xxx_messageInfo_MarketDepth.Size(m)
}
func (m *MarketDepth) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepth.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepth proto.InternalMessageInfo

func (m *MarketDepth) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketDepth) GetBuy() []*PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MarketDepth) GetSell() []*PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

type MarketPosition struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	RealisedVolume       int64    `protobuf:"varint,2,opt,name=realisedVolume,proto3" json:"realisedVolume,omitempty"`
	RealisedPNL          int64    `protobuf:"varint,3,opt,name=realisedPNL,proto3" json:"realisedPNL,omitempty"`
	UnrealisedVolume     int64    `protobuf:"varint,4,opt,name=unrealisedVolume,proto3" json:"unrealisedVolume,omitempty"`
	UnrealisedPNL        int64    `protobuf:"varint,5,opt,name=unrealisedPNL,proto3" json:"unrealisedPNL,omitempty"`
	AverageEntryPrice    uint64   `protobuf:"varint,6,opt,name=averageEntryPrice,proto3" json:"averageEntryPrice,omitempty"`
	MinimumMargin        int64    `protobuf:"varint,7,opt,name=minimumMargin,proto3" json:"minimumMargin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketPosition) Reset()         { *m = MarketPosition{} }
func (m *MarketPosition) String() string { return proto.CompactTextString(m) }
func (*MarketPosition) ProtoMessage()    {}
func (*MarketPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{13}
}

func (m *MarketPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketPosition.Unmarshal(m, b)
}
func (m *MarketPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketPosition.Marshal(b, m, deterministic)
}
func (m *MarketPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketPosition.Merge(m, src)
}
func (m *MarketPosition) XXX_Size() int {
	return xxx_messageInfo_MarketPosition.Size(m)
}
func (m *MarketPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MarketPosition proto.InternalMessageInfo

func (m *MarketPosition) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketPosition) GetRealisedVolume() int64 {
	if m != nil {
		return m.RealisedVolume
	}
	return 0
}

func (m *MarketPosition) GetRealisedPNL() int64 {
	if m != nil {
		return m.RealisedPNL
	}
	return 0
}

func (m *MarketPosition) GetUnrealisedVolume() int64 {
	if m != nil {
		return m.UnrealisedVolume
	}
	return 0
}

func (m *MarketPosition) GetUnrealisedPNL() int64 {
	if m != nil {
		return m.UnrealisedPNL
	}
	return 0
}

func (m *MarketPosition) GetAverageEntryPrice() uint64 {
	if m != nil {
		return m.AverageEntryPrice
	}
	return 0
}

func (m *MarketPosition) GetMinimumMargin() int64 {
	if m != nil {
		return m.MinimumMargin
	}
	return 0
}

type Statistics struct {
	BlockHeight              uint64      `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	BacklogLength            uint64      `protobuf:"varint,2,opt,name=backlogLength,proto3" json:"backlogLength,omitempty"`
	TotalPeers               uint64      `protobuf:"varint,3,opt,name=totalPeers,proto3" json:"totalPeers,omitempty"`
	GenesisTime              string      `protobuf:"bytes,4,opt,name=genesisTime,proto3" json:"genesisTime,omitempty"`
	CurrentTime              string      `protobuf:"bytes,5,opt,name=currentTime,proto3" json:"currentTime,omitempty"`
	VegaTime                 string      `protobuf:"bytes,6,opt,name=vegaTime,proto3" json:"vegaTime,omitempty"`
	Status                   ChainStatus `protobuf:"varint,7,opt,name=status,proto3,enum=vega.ChainStatus" json:"status,omitempty"`
	TxPerBlock               uint64      `protobuf:"varint,8,opt,name=txPerBlock,proto3" json:"txPerBlock,omitempty"`
	AverageTxBytes           uint64      `protobuf:"varint,9,opt,name=averageTxBytes,proto3" json:"averageTxBytes,omitempty"`
	AverageOrdersPerBlock    uint64      `protobuf:"varint,10,opt,name=averageOrdersPerBlock,proto3" json:"averageOrdersPerBlock,omitempty"`
	TradesPerSecond          uint64      `protobuf:"varint,11,opt,name=tradesPerSecond,proto3" json:"tradesPerSecond,omitempty"`
	OrdersPerSecond          uint64      `protobuf:"varint,12,opt,name=ordersPerSecond,proto3" json:"ordersPerSecond,omitempty"`
	TotalMarkets             uint64      `protobuf:"varint,13,opt,name=totalMarkets,proto3" json:"totalMarkets,omitempty"`
	TotalParties             uint64      `protobuf:"varint,14,opt,name=totalParties,proto3" json:"totalParties,omitempty"`
	Parties                  []string    `protobuf:"bytes,15,rep,name=parties,proto3" json:"parties,omitempty"`
	TotalAmendOrder          uint64      `protobuf:"varint,16,opt,name=totalAmendOrder,proto3" json:"totalAmendOrder,omitempty"`
	TotalCancelOrder         uint64      `protobuf:"varint,17,opt,name=totalCancelOrder,proto3" json:"totalCancelOrder,omitempty"`
	TotalCreateOrder         uint64      `protobuf:"varint,18,opt,name=totalCreateOrder,proto3" json:"totalCreateOrder,omitempty"`
	TotalOrders              uint64      `protobuf:"varint,19,opt,name=totalOrders,proto3" json:"totalOrders,omitempty"`
	TotalTrades              uint64      `protobuf:"varint,20,opt,name=totalTrades,proto3" json:"totalTrades,omitempty"`
	OrderSubscriptions       int32       `protobuf:"varint,21,opt,name=orderSubscriptions,proto3" json:"orderSubscriptions,omitempty"`
	TradeSubscriptions       int32       `protobuf:"varint,22,opt,name=tradeSubscriptions,proto3" json:"tradeSubscriptions,omitempty"`
	CandleSubscriptions      int32       `protobuf:"varint,23,opt,name=candleSubscriptions,proto3" json:"candleSubscriptions,omitempty"`
	MarketDepthSubscriptions int32       `protobuf:"varint,24,opt,name=marketDepthSubscriptions,proto3" json:"marketDepthSubscriptions,omitempty"`
	PositionsSubscriptions   int32       `protobuf:"varint,25,opt,name=positionsSubscriptions,proto3" json:"positionsSubscriptions,omitempty"`
	AppVersionHash           string      `protobuf:"bytes,26,opt,name=appVersionHash,proto3" json:"appVersionHash,omitempty"`
	AppVersion               string      `protobuf:"bytes,27,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	ChainVersion             string      `protobuf:"bytes,28,opt,name=chainVersion,proto3" json:"chainVersion,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}    `json:"-"`
	XXX_unrecognized         []byte      `json:"-"`
	XXX_sizecache            int32       `json:"-"`
}

func (m *Statistics) Reset()         { *m = Statistics{} }
func (m *Statistics) String() string { return proto.CompactTextString(m) }
func (*Statistics) ProtoMessage()    {}
func (*Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{14}
}

func (m *Statistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistics.Unmarshal(m, b)
}
func (m *Statistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistics.Marshal(b, m, deterministic)
}
func (m *Statistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistics.Merge(m, src)
}
func (m *Statistics) XXX_Size() int {
	return xxx_messageInfo_Statistics.Size(m)
}
func (m *Statistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistics.DiscardUnknown(m)
}

var xxx_messageInfo_Statistics proto.InternalMessageInfo

func (m *Statistics) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Statistics) GetBacklogLength() uint64 {
	if m != nil {
		return m.BacklogLength
	}
	return 0
}

func (m *Statistics) GetTotalPeers() uint64 {
	if m != nil {
		return m.TotalPeers
	}
	return 0
}

func (m *Statistics) GetGenesisTime() string {
	if m != nil {
		return m.GenesisTime
	}
	return ""
}

func (m *Statistics) GetCurrentTime() string {
	if m != nil {
		return m.CurrentTime
	}
	return ""
}

func (m *Statistics) GetVegaTime() string {
	if m != nil {
		return m.VegaTime
	}
	return ""
}

func (m *Statistics) GetStatus() ChainStatus {
	if m != nil {
		return m.Status
	}
	return ChainStatus_DISCONNECTED
}

func (m *Statistics) GetTxPerBlock() uint64 {
	if m != nil {
		return m.TxPerBlock
	}
	return 0
}

func (m *Statistics) GetAverageTxBytes() uint64 {
	if m != nil {
		return m.AverageTxBytes
	}
	return 0
}

func (m *Statistics) GetAverageOrdersPerBlock() uint64 {
	if m != nil {
		return m.AverageOrdersPerBlock
	}
	return 0
}

func (m *Statistics) GetTradesPerSecond() uint64 {
	if m != nil {
		return m.TradesPerSecond
	}
	return 0
}

func (m *Statistics) GetOrdersPerSecond() uint64 {
	if m != nil {
		return m.OrdersPerSecond
	}
	return 0
}

func (m *Statistics) GetTotalMarkets() uint64 {
	if m != nil {
		return m.TotalMarkets
	}
	return 0
}

func (m *Statistics) GetTotalParties() uint64 {
	if m != nil {
		return m.TotalParties
	}
	return 0
}

func (m *Statistics) GetParties() []string {
	if m != nil {
		return m.Parties
	}
	return nil
}

func (m *Statistics) GetTotalAmendOrder() uint64 {
	if m != nil {
		return m.TotalAmendOrder
	}
	return 0
}

func (m *Statistics) GetTotalCancelOrder() uint64 {
	if m != nil {
		return m.TotalCancelOrder
	}
	return 0
}

func (m *Statistics) GetTotalCreateOrder() uint64 {
	if m != nil {
		return m.TotalCreateOrder
	}
	return 0
}

func (m *Statistics) GetTotalOrders() uint64 {
	if m != nil {
		return m.TotalOrders
	}
	return 0
}

func (m *Statistics) GetTotalTrades() uint64 {
	if m != nil {
		return m.TotalTrades
	}
	return 0
}

func (m *Statistics) GetOrderSubscriptions() int32 {
	if m != nil {
		return m.OrderSubscriptions
	}
	return 0
}

func (m *Statistics) GetTradeSubscriptions() int32 {
	if m != nil {
		return m.TradeSubscriptions
	}
	return 0
}

func (m *Statistics) GetCandleSubscriptions() int32 {
	if m != nil {
		return m.CandleSubscriptions
	}
	return 0
}

func (m *Statistics) GetMarketDepthSubscriptions() int32 {
	if m != nil {
		return m.MarketDepthSubscriptions
	}
	return 0
}

func (m *Statistics) GetPositionsSubscriptions() int32 {
	if m != nil {
		return m.PositionsSubscriptions
	}
	return 0
}

func (m *Statistics) GetAppVersionHash() string {
	if m != nil {
		return m.AppVersionHash
	}
	return ""
}

func (m *Statistics) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Statistics) GetChainVersion() string {
	if m != nil {
		return m.ChainVersion
	}
	return ""
}

type PendingOrder struct {
	Reference            string       `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Price                uint64       `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Type                 Order_Type   `protobuf:"varint,3,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	Side                 Side         `protobuf:"varint,4,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	MarketID             string       `protobuf:"bytes,5,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Size                 uint64       `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	PartyID              string       `protobuf:"bytes,7,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Status               Order_Status `protobuf:"varint,8,opt,name=status,proto3,enum=vega.Order_Status" json:"status,omitempty"`
	Id                   string       `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PendingOrder) Reset()         { *m = PendingOrder{} }
func (m *PendingOrder) String() string { return proto.CompactTextString(m) }
func (*PendingOrder) ProtoMessage()    {}
func (*PendingOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{15}
}

func (m *PendingOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingOrder.Unmarshal(m, b)
}
func (m *PendingOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingOrder.Marshal(b, m, deterministic)
}
func (m *PendingOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingOrder.Merge(m, src)
}
func (m *PendingOrder) XXX_Size() int {
	return xxx_messageInfo_PendingOrder.Size(m)
}
func (m *PendingOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PendingOrder proto.InternalMessageInfo

func (m *PendingOrder) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *PendingOrder) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PendingOrder) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_GTC
}

func (m *PendingOrder) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *PendingOrder) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *PendingOrder) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *PendingOrder) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *PendingOrder) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_Active
}

func (m *PendingOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type OrderAmendment struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Price                uint64   `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ExpiresAt            int64    `protobuf:"varint,5,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderAmendment) Reset()         { *m = OrderAmendment{} }
func (m *OrderAmendment) String() string { return proto.CompactTextString(m) }
func (*OrderAmendment) ProtoMessage()    {}
func (*OrderAmendment) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{16}
}

func (m *OrderAmendment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAmendment.Unmarshal(m, b)
}
func (m *OrderAmendment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAmendment.Marshal(b, m, deterministic)
}
func (m *OrderAmendment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAmendment.Merge(m, src)
}
func (m *OrderAmendment) XXX_Size() int {
	return xxx_messageInfo_OrderAmendment.Size(m)
}
func (m *OrderAmendment) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAmendment.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAmendment proto.InternalMessageInfo

func (m *OrderAmendment) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderAmendment) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrderAmendment) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderAmendment) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OrderAmendment) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type OrderSubmission struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID             string     `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string     `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Price                uint64     `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64     `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Side                 Side       `protobuf:"varint,6,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	Type                 Order_Type `protobuf:"varint,7,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	ExpiresAt            int64      `protobuf:"varint,8,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OrderSubmission) Reset()         { *m = OrderSubmission{} }
func (m *OrderSubmission) String() string { return proto.CompactTextString(m) }
func (*OrderSubmission) ProtoMessage()    {}
func (*OrderSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{17}
}

func (m *OrderSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSubmission.Unmarshal(m, b)
}
func (m *OrderSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSubmission.Marshal(b, m, deterministic)
}
func (m *OrderSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSubmission.Merge(m, src)
}
func (m *OrderSubmission) XXX_Size() int {
	return xxx_messageInfo_OrderSubmission.Size(m)
}
func (m *OrderSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSubmission proto.InternalMessageInfo

func (m *OrderSubmission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderSubmission) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderSubmission) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrderSubmission) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderSubmission) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OrderSubmission) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *OrderSubmission) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_GTC
}

func (m *OrderSubmission) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type OrderCancellation struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{18}
}

func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellation.Unmarshal(m, b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
}
func (m *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(m, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellation.Size(m)
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderCancellation) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderCancellation) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type Account struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner                string      `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Balance              int64       `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	Asset                string      `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	MarketID             string      `protobuf:"bytes,5,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Type                 AccountType `protobuf:"varint,6,opt,name=type,proto3,enum=vega.AccountType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{19}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Account) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *Account) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return AccountType_INSURANCE
}

type FinancialAmount struct {
	Amount               int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinancialAmount) Reset()         { *m = FinancialAmount{} }
func (m *FinancialAmount) String() string { return proto.CompactTextString(m) }
func (*FinancialAmount) ProtoMessage()    {}
func (*FinancialAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{20}
}

func (m *FinancialAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinancialAmount.Unmarshal(m, b)
}
func (m *FinancialAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinancialAmount.Marshal(b, m, deterministic)
}
func (m *FinancialAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinancialAmount.Merge(m, src)
}
func (m *FinancialAmount) XXX_Size() int {
	return xxx_messageInfo_FinancialAmount.Size(m)
}
func (m *FinancialAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_FinancialAmount.DiscardUnknown(m)
}

var xxx_messageInfo_FinancialAmount proto.InternalMessageInfo

func (m *FinancialAmount) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *FinancialAmount) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type Transfer struct {
	Owner                string           `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Size                 uint64           `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Amount               *FinancialAmount `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 TransferType     `protobuf:"varint,4,opt,name=type,proto3,enum=vega.TransferType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{21}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Transfer) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Transfer) GetAmount() *FinancialAmount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Transfer) GetType() TransferType {
	if m != nil {
		return m.Type
	}
	return TransferType_LOSS
}

type TransferRequest struct {
	FromAccount          []*Account `protobuf:"bytes,1,rep,name=fromAccount,proto3" json:"fromAccount,omitempty"`
	ToAccount            []*Account `protobuf:"bytes,2,rep,name=toAccount,proto3" json:"toAccount,omitempty"`
	Amount               uint64     `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	MinAmount            uint64     `protobuf:"varint,4,opt,name=minAmount,proto3" json:"minAmount,omitempty"`
	Asset                string     `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Reference            string     `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{22}
}

func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (m *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(m, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetFromAccount() []*Account {
	if m != nil {
		return m.FromAccount
	}
	return nil
}

func (m *TransferRequest) GetToAccount() []*Account {
	if m != nil {
		return m.ToAccount
	}
	return nil
}

func (m *TransferRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransferRequest) GetMinAmount() uint64 {
	if m != nil {
		return m.MinAmount
	}
	return 0
}

func (m *TransferRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *TransferRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type LedgerEntry struct {
	FromAccount          string   `protobuf:"bytes,1,opt,name=fromAccount,proto3" json:"fromAccount,omitempty"`
	ToAccount            string   `protobuf:"bytes,2,opt,name=toAccount,proto3" json:"toAccount,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Reference            string   `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LedgerEntry) Reset()         { *m = LedgerEntry{} }
func (m *LedgerEntry) String() string { return proto.CompactTextString(m) }
func (*LedgerEntry) ProtoMessage()    {}
func (*LedgerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{23}
}

func (m *LedgerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LedgerEntry.Unmarshal(m, b)
}
func (m *LedgerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LedgerEntry.Marshal(b, m, deterministic)
}
func (m *LedgerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerEntry.Merge(m, src)
}
func (m *LedgerEntry) XXX_Size() int {
	return xxx_messageInfo_LedgerEntry.Size(m)
}
func (m *LedgerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerEntry proto.InternalMessageInfo

func (m *LedgerEntry) GetFromAccount() string {
	if m != nil {
		return m.FromAccount
	}
	return ""
}

func (m *LedgerEntry) GetToAccount() string {
	if m != nil {
		return m.ToAccount
	}
	return ""
}

func (m *LedgerEntry) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *LedgerEntry) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *LedgerEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LedgerEntry) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TransferBalance struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Balance              int64    `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferBalance) Reset()         { *m = TransferBalance{} }
func (m *TransferBalance) String() string { return proto.CompactTextString(m) }
func (*TransferBalance) ProtoMessage()    {}
func (*TransferBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{24}
}

func (m *TransferBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferBalance.Unmarshal(m, b)
}
func (m *TransferBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferBalance.Marshal(b, m, deterministic)
}
func (m *TransferBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferBalance.Merge(m, src)
}
func (m *TransferBalance) XXX_Size() int {
	return xxx_messageInfo_TransferBalance.Size(m)
}
func (m *TransferBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TransferBalance proto.InternalMessageInfo

func (m *TransferBalance) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *TransferBalance) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type TransferResponse struct {
	Transfers            []*LedgerEntry     `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Balances             []*TransferBalance `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TransferResponse) Reset()         { *m = TransferResponse{} }
func (m *TransferResponse) String() string { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()    {}
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{25}
}

func (m *TransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponse.Unmarshal(m, b)
}
func (m *TransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponse.Marshal(b, m, deterministic)
}
func (m *TransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponse.Merge(m, src)
}
func (m *TransferResponse) XXX_Size() int {
	return xxx_messageInfo_TransferResponse.Size(m)
}
func (m *TransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponse proto.InternalMessageInfo

func (m *TransferResponse) GetTransfers() []*LedgerEntry {
	if m != nil {
		return m.Transfers
	}
	return nil
}

func (m *TransferResponse) GetBalances() []*TransferBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

func init() {
	proto.RegisterEnum("vega.Side", Side_name, Side_value)
	proto.RegisterEnum("vega.Interval", Interval_name, Interval_value)
	proto.RegisterEnum("vega.OrderError", OrderError_name, OrderError_value)
	proto.RegisterEnum("vega.ChainStatus", ChainStatus_name, ChainStatus_value)
	proto.RegisterEnum("vega.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("vega.TransferType", TransferType_name, TransferType_value)
	proto.RegisterEnum("vega.Order_Type", Order_Type_name, Order_Type_value)
	proto.RegisterEnum("vega.Order_Status", Order_Status_name, Order_Status_value)
	proto.RegisterType((*Amount)(nil), "vega.Amount")
	proto.RegisterType((*Party)(nil), "vega.Party")
	proto.RegisterType((*RiskFactor)(nil), "vega.RiskFactor")
	proto.RegisterType((*RiskResult)(nil), "vega.RiskResult")
	proto.RegisterMapType((map[string]*RiskFactor)(nil), "vega.RiskResult.PredictedNextRiskFactorsEntry")
	proto.RegisterMapType((map[string]*RiskFactor)(nil), "vega.RiskResult.RiskFactorsEntry")
	proto.RegisterType((*Order)(nil), "vega.Order")
	proto.RegisterType((*OrderCancellationConfirmation)(nil), "vega.OrderCancellationConfirmation")
	proto.RegisterType((*OrderConfirmation)(nil), "vega.OrderConfirmation")
	proto.RegisterType((*Trade)(nil), "vega.Trade")
	proto.RegisterType((*TradeSet)(nil), "vega.TradeSet")
	proto.RegisterType((*MarketData)(nil), "vega.MarketData")
	proto.RegisterType((*Candle)(nil), "vega.Candle")
	proto.RegisterType((*PriceLevel)(nil), "vega.PriceLevel")
	proto.RegisterType((*MarketDepth)(nil), "vega.MarketDepth")
	proto.RegisterType((*MarketPosition)(nil), "vega.MarketPosition")
	proto.RegisterType((*Statistics)(nil), "vega.Statistics")
	proto.RegisterType((*PendingOrder)(nil), "vega.PendingOrder")
	proto.RegisterType((*OrderAmendment)(nil), "vega.OrderAmendment")
	proto.RegisterType((*OrderSubmission)(nil), "vega.OrderSubmission")
	proto.RegisterType((*OrderCancellation)(nil), "vega.OrderCancellation")
	proto.RegisterType((*Account)(nil), "vega.Account")
	proto.RegisterType((*FinancialAmount)(nil), "vega.FinancialAmount")
	proto.RegisterType((*Transfer)(nil), "vega.Transfer")
	proto.RegisterType((*TransferRequest)(nil), "vega.TransferRequest")
	proto.RegisterType((*LedgerEntry)(nil), "vega.LedgerEntry")
	proto.RegisterType((*TransferBalance)(nil), "vega.TransferBalance")
	proto.RegisterType((*TransferResponse)(nil), "vega.TransferResponse")
}

func init() { proto.RegisterFile("proto/vega.proto", fileDescriptor_bb6b8173ee11af27) }

var fileDescriptor_bb6b8173ee11af27 = []byte{
	// 2416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0xdd, 0x6e, 0x1c, 0x4b,
	0x11, 0xf6, 0xec, 0xce, 0xfe, 0xd5, 0x3a, 0xf6, 0xa4, 0x63, 0x3b, 0x13, 0x27, 0x27, 0x71, 0x86,
	0x43, 0x30, 0x86, 0xd8, 0x24, 0x70, 0x22, 0x74, 0x24, 0x84, 0xd6, 0xde, 0xb1, 0x33, 0xca, 0xfe,
	0x9d, 0xde, 0x75, 0x0e, 0x1c, 0x09, 0x59, 0xe3, 0xd9, 0xf6, 0x7a, 0xf0, 0xee, 0xcc, 0x32, 0x33,
	0xeb, 0xc4, 0xbc, 0x02, 0xe2, 0x3c, 0x01, 0xe2, 0x02, 0x71, 0xc3, 0x03, 0xf0, 0x16, 0x5c, 0x23,
	0xb8, 0x42, 0x42, 0xe2, 0x8a, 0x97, 0x40, 0x5d, 0xdd, 0xf3, 0x6b, 0x3b, 0xd1, 0x01, 0xae, 0xdc,
	0xfd, 0x55, 0x75, 0x4d, 0x55, 0xd7, 0xd7, 0xd5, 0xd5, 0x6b, 0xd0, 0xe6, 0x81, 0x1f, 0xf9, 0x7b,
	0x97, 0x6c, 0x62, 0xef, 0xe2, 0x90, 0xa8, 0x7c, 0xbc, 0xf9, 0x6a, 0xe2, 0x46, 0xe7, 0x8b, 0xd3,
	0x5d, 0xc7, 0x9f, 0xed, 0xcd, 0xde, 0xb9, 0xd1, 0x85, 0xff, 0x6e, 0x6f, 0xe2, 0x3f, 0x47, 0x95,
	0xe7, 0x97, 0xf6, 0xd4, 0x1d, 0xdb, 0x91, 0x1f, 0x84, 0x7b, 0xc9, 0x50, 0xac, 0x36, 0x1e, 0x43,
	0xb5, 0x35, 0xf3, 0x17, 0x5e, 0x44, 0xd6, 0xa0, 0x72, 0x69, 0x4f, 0x17, 0x4c, 0x57, 0xb6, 0x94,
	0xed, 0x06, 0x15, 0x13, 0x63, 0x08, 0x95, 0x81, 0x1d, 0x44, 0x57, 0x64, 0x03, 0x4a, 0xee, 0x58,
	0xc8, 0xf6, 0xab, 0xff, 0xfc, 0xc7, 0x93, 0xd2, 0x96, 0x42, 0x4b, 0xee, 0x98, 0xbc, 0x84, 0xc6,
	0xdc, 0x0f, 0xdd, 0xc8, 0xf5, 0xbd, 0x50, 0x2f, 0x6d, 0x95, 0xb7, 0x9b, 0x2f, 0xd7, 0x76, 0xd1,
	0xbd, 0xae, 0x1d, 0x5c, 0xb0, 0x68, 0x20, 0x85, 0x34, 0x55, 0x33, 0x7a, 0x00, 0xd4, 0x0d, 0x2f,
	0x0e, 0x6d, 0x27, 0xf2, 0x03, 0xb2, 0x01, 0xd5, 0x19, 0xaa, 0xca, 0x2f, 0xcb, 0x19, 0x77, 0x28,
	0x3c, 0xf7, 0x83, 0x48, 0x2f, 0x6d, 0x29, 0xdb, 0x0a, 0x15, 0x13, 0x42, 0x40, 0x9d, 0xfa, 0xde,
	0x44, 0x2f, 0x23, 0x88, 0x63, 0xe3, 0x2f, 0x65, 0x61, 0x90, 0xb2, 0x70, 0x31, 0x8d, 0xc8, 0x0e,
	0x68, 0x8b, 0xf9, 0xd8, 0x8e, 0xd8, 0x78, 0xe4, 0xce, 0x58, 0x18, 0xd9, 0xb3, 0x39, 0x9a, 0x2e,
	0xd3, 0x6b, 0x38, 0x39, 0x80, 0x66, 0x90, 0xb8, 0x12, 0x07, 0xf0, 0x54, 0x04, 0x90, 0x9a, 0xdc,
	0x4d, 0xdd, 0x0d, 0x4d, 0x2f, 0x0a, 0xae, 0x68, 0x76, 0x15, 0xf9, 0x01, 0xdc, 0xf3, 0xd8, 0xfb,
	0xe8, 0x18, 0x8d, 0xa7, 0xdf, 0x2c, 0xe3, 0x37, 0x6f, 0x12, 0x91, 0x5f, 0x82, 0x3e, 0x0f, 0xd8,
	0xd8, 0x75, 0x22, 0x36, 0xee, 0xb1, 0xf7, 0x51, 0xc6, 0xbe, 0xae, 0xa2, 0x0f, 0xbb, 0xd7, 0x7c,
	0x18, 0xdc, 0xb2, 0x40, 0x38, 0x74, 0xab, 0xbd, 0xcd, 0x01, 0x68, 0x45, 0x6d, 0xa2, 0x41, 0xf9,
	0x82, 0x5d, 0xc9, 0x0d, 0xe7, 0x43, 0xf2, 0x2c, 0x4e, 0x3f, 0xdf, 0xed, 0xe6, 0x4b, 0x2d, 0xfd,
	0xbc, 0x58, 0x28, 0x09, 0xf1, 0x79, 0xe9, 0xc7, 0xca, 0xe6, 0x2f, 0xe0, 0x93, 0x0f, 0x3a, 0xf3,
	0xbf, 0x99, 0x37, 0xfe, 0x56, 0x86, 0x4a, 0x3f, 0x18, 0xb3, 0x80, 0xac, 0xa4, 0xa4, 0x43, 0xb2,
	0x6d, 0x42, 0x5d, 0x90, 0xc3, 0x6a, 0xa3, 0xa1, 0x06, 0x4d, 0xe6, 0x44, 0x87, 0xda, 0x9c, 0x33,
	0xd5, 0x6a, 0xe3, 0xc6, 0x37, 0x68, 0x3c, 0x25, 0x8f, 0x41, 0x0d, 0xdd, 0x31, 0xd3, 0xd5, 0x2d,
	0x65, 0x7b, 0xe5, 0x25, 0x88, 0x4f, 0x0f, 0xdd, 0x31, 0xa3, 0x88, 0x73, 0xa2, 0xcd, 0x03, 0xd7,
	0x61, 0x7a, 0x65, 0x4b, 0xd9, 0x56, 0xa9, 0x98, 0x70, 0xa2, 0x85, 0xee, 0xaf, 0x99, 0x5e, 0x45,
	0x10, 0xc7, 0xe4, 0x11, 0x34, 0x02, 0x36, 0xb3, 0x5d, 0xcf, 0xf5, 0x26, 0x7a, 0x0d, 0x05, 0x29,
	0x40, 0x3e, 0x05, 0x35, 0xba, 0x9a, 0x33, 0xbd, 0x8e, 0xdf, 0x91, 0x21, 0x62, 0x20, 0xbb, 0xa3,
	0xab, 0x39, 0xa3, 0x28, 0xe5, 0x36, 0x9c, 0x80, 0x71, 0x16, 0xb6, 0x22, 0xbd, 0x81, 0x14, 0x49,
	0x01, 0xb2, 0x03, 0xd5, 0x30, 0xb2, 0xa3, 0x45, 0xa8, 0x03, 0x5a, 0x21, 0x59, 0x2b, 0x43, 0x94,
	0x50, 0xa9, 0xc1, 0x2d, 0xb1, 0xf7, 0x73, 0x37, 0x60, 0x61, 0x2b, 0xd2, 0x9b, 0xc2, 0x52, 0x02,
	0x08, 0x5f, 0xcf, 0x58, 0xc0, 0x3c, 0x87, 0xe9, 0xcb, 0xb8, 0x23, 0x29, 0x60, 0xec, 0x80, 0xca,
	0x7d, 0x22, 0x35, 0x28, 0x1f, 0x8d, 0x0e, 0xb4, 0x25, 0x31, 0x18, 0x69, 0x0a, 0x1f, 0x98, 0x3d,
	0x53, 0x2b, 0xf1, 0xc1, 0x61, 0xff, 0x8d, 0x56, 0x36, 0x2c, 0xa8, 0x8a, 0x2f, 0x13, 0x80, 0x6a,
	0xcb, 0x89, 0xdc, 0x4b, 0xa6, 0x2d, 0x91, 0x26, 0xd4, 0x4c, 0xfc, 0xd8, 0x58, 0x53, 0xc8, 0x1d,
	0x68, 0x1c, 0xd8, 0x9e, 0xc3, 0xa6, 0x53, 0x36, 0xd6, 0x4a, 0x5c, 0x36, 0x8c, 0xfc, 0xf9, 0x9c,
	0x8d, 0xb5, 0x32, 0x5f, 0x74, 0xe8, 0xa2, 0x40, 0x35, 0xf6, 0xe1, 0x13, 0x0c, 0x45, 0x2a, 0xdb,
	0xbc, 0x1e, 0x1c, 0xf8, 0xde, 0x99, 0x1b, 0xcc, 0x70, 0x4c, 0x9e, 0x42, 0xc5, 0xe7, 0x0a, 0x98,
	0xf4, 0xe6, 0xcb, 0x66, 0x26, 0x7c, 0x2a, 0x24, 0xc6, 0xef, 0x15, 0xb8, 0x2b, 0x8c, 0x7c, 0xb3,
	0x85, 0xe4, 0x5b, 0x50, 0x8d, 0x02, 0x7b, 0xcc, 0xe2, 0x63, 0x2e, 0x75, 0x46, 0x1c, 0xa3, 0x52,
	0x44, 0x5a, 0xb0, 0x3e, 0xb7, 0xc3, 0xd0, 0xbd, 0x64, 0xb8, 0x36, 0x6c, 0x9d, 0x9d, 0x31, 0xce,
	0x73, 0xbd, 0x9c, 0x5d, 0x23, 0xec, 0xde, 0xac, 0x69, 0xfc, 0xb6, 0x04, 0x15, 0x34, 0xfa, 0x8d,
	0xf8, 0x9b, 0xb0, 0xb0, 0x7c, 0x13, 0x0b, 0xd5, 0x0c, 0x0b, 0xd7, 0xa0, 0x72, 0xba, 0xb8, 0x62,
	0x01, 0xf2, 0xb5, 0x41, 0xc5, 0x84, 0x97, 0xd1, 0x90, 0xef, 0x7f, 0x80, 0x8c, 0x6d, 0x50, 0x39,
	0x23, 0xdb, 0xd0, 0xb0, 0x27, 0x93, 0x80, 0x85, 0xa1, 0x1f, 0x20, 0x67, 0xf3, 0x47, 0x20, 0x15,
	0x72, 0xef, 0x4e, 0x17, 0x57, 0x18, 0x0c, 0x72, 0xb8, 0x41, 0x93, 0x39, 0x67, 0x13, 0xb7, 0x27,
	0x84, 0x0d, 0xc1, 0xa6, 0x04, 0xe0, 0xd2, 0x28, 0x29, 0x7b, 0x20, 0x98, 0x98, 0x00, 0xc6, 0x1e,
	0xd4, 0x71, 0x3b, 0x86, 0x2c, 0xca, 0xe4, 0x40, 0xb9, 0x35, 0x07, 0x86, 0x07, 0x20, 0x2e, 0x8f,
	0xb6, 0x1d, 0xd9, 0xfc, 0x60, 0x9f, 0xb2, 0x30, 0xda, 0x97, 0x3b, 0xa9, 0xd2, 0x78, 0xca, 0x3f,
	0xcb, 0x87, 0xfd, 0xb3, 0x33, 0x16, 0xe0, 0x7e, 0xaa, 0x34, 0x05, 0xc8, 0x36, 0xac, 0x4e, 0xed,
	0x30, 0x42, 0xd3, 0xe3, 0x41, 0x66, 0x6b, 0x8b, 0xb0, 0xf1, 0x57, 0x05, 0xaa, 0x07, 0xb6, 0x37,
	0x9e, 0xb2, 0x7c, 0x24, 0x4a, 0x21, 0x12, 0xbe, 0x43, 0xbc, 0x8e, 0x73, 0x20, 0xce, 0x5f, 0x3c,
	0xe7, 0x99, 0x3a, 0x77, 0x27, 0xe7, 0xf2, 0x1b, 0x38, 0xe6, 0x75, 0x70, 0xea, 0xbf, 0x93, 0xc9,
	0xe3, 0x43, 0xae, 0xe5, 0xcf, 0x99, 0x27, 0x4b, 0x0d, 0x8e, 0x79, 0x3e, 0x9d, 0xa9, 0x1f, 0xc6,
	0xa5, 0x46, 0x4c, 0x78, 0x3e, 0x2f, 0xfd, 0xe9, 0x62, 0xc6, 0x64, 0xa1, 0x91, 0x33, 0xb2, 0x03,
	0x75, 0xd7, 0x8b, 0x58, 0x70, 0x69, 0x4f, 0x65, 0xa5, 0x59, 0x11, 0x7b, 0x68, 0x49, 0x94, 0x26,
	0x72, 0xe3, 0x6b, 0x05, 0x00, 0x43, 0xec, 0xb0, 0x4b, 0x36, 0x4d, 0x29, 0xa6, 0x64, 0x29, 0xf6,
	0x0c, 0x56, 0xbc, 0xc5, 0xec, 0x94, 0x05, 0xfd, 0x33, 0x41, 0x64, 0xb9, 0x95, 0x05, 0x34, 0xe3,
	0x50, 0xb9, 0xe0, 0x90, 0xe6, 0x2c, 0x66, 0x0b, 0x7e, 0x98, 0x2f, 0xd9, 0x5b, 0xa1, 0x21, 0x22,
	0xbe, 0x86, 0x1b, 0x21, 0x34, 0x65, 0x66, 0xd9, 0x3c, 0x3a, 0xcf, 0x9d, 0x07, 0xa5, 0x70, 0x1e,
	0x0c, 0x28, 0x9f, 0x2e, 0xae, 0xe4, 0x51, 0x95, 0xc5, 0x34, 0x8d, 0x85, 0x72, 0x21, 0xaf, 0xb8,
	0x9c, 0x84, 0xf2, 0x6c, 0x5e, 0x57, 0x42, 0xa9, 0xf1, 0xbb, 0x12, 0xac, 0xe4, 0x9b, 0x91, 0x0f,
	0x7e, 0xf8, 0x19, 0xac, 0x04, 0xcc, 0x9e, 0xba, 0x21, 0x1b, 0xcb, 0x68, 0x4a, 0xc8, 0x83, 0x02,
	0x4a, 0xb6, 0xa0, 0x19, 0x23, 0x83, 0x5e, 0x47, 0xde, 0xf6, 0x59, 0x08, 0x1b, 0x11, 0xaf, 0x60,
	0x4b, 0x95, 0x8d, 0x48, 0x01, 0x27, 0x9f, 0xc2, 0x9d, 0x14, 0xe3, 0xf6, 0x2a, 0xa8, 0x98, 0x07,
	0xc9, 0xf7, 0xe1, 0xae, 0x7d, 0xc9, 0x02, 0x7b, 0xc2, 0xf0, 0xa2, 0x15, 0xac, 0x16, 0xb4, 0xb9,
	0x2e, 0xe0, 0x36, 0x67, 0xae, 0xe7, 0xce, 0x16, 0xb3, 0xae, 0x1d, 0x4c, 0x5c, 0x0f, 0x99, 0x54,
	0xa6, 0x79, 0xd0, 0xf8, 0x77, 0x1d, 0x80, 0xd7, 0x77, 0x37, 0x8c, 0x5c, 0x27, 0xe4, 0x61, 0x9d,
	0x4e, 0x7d, 0xe7, 0xe2, 0x35, 0x73, 0x27, 0xe7, 0x91, 0xa4, 0x4a, 0x16, 0xe2, 0x66, 0x4f, 0x6d,
	0xe7, 0x62, 0xea, 0x4f, 0x3a, 0xcc, 0x9b, 0x44, 0xe7, 0x92, 0x2f, 0x79, 0x90, 0x3c, 0x06, 0x88,
	0xfc, 0xc8, 0x9e, 0x0e, 0x18, 0xa7, 0x94, 0xa0, 0x4c, 0x06, 0xe1, 0xdf, 0x99, 0x30, 0x8f, 0x85,
	0x6e, 0xc8, 0xdb, 0x22, 0xdc, 0x97, 0x06, 0xcd, 0x42, 0x5c, 0xc3, 0x59, 0x04, 0x01, 0xf3, 0x22,
	0xd4, 0x10, 0xd5, 0x2e, 0x0b, 0xf1, 0x34, 0xf2, 0x94, 0xa3, 0x58, 0x54, 0xbd, 0x64, 0x4e, 0xbe,
	0x9b, 0xdc, 0xa4, 0xa2, 0xe8, 0xdd, 0x15, 0xec, 0x38, 0x38, 0xb7, 0x5d, 0xaf, 0x70, 0x91, 0x72,
	0x57, 0xdf, 0x0f, 0x58, 0xb0, 0xcf, 0x83, 0xc4, 0x43, 0xc5, 0x5d, 0x4d, 0x10, 0xce, 0x08, 0xb9,
	0xb9, 0xa3, 0xf7, 0xfb, 0x57, 0x11, 0x0b, 0xb1, 0x02, 0xaa, 0xb4, 0x80, 0x92, 0x1f, 0xc1, 0xba,
	0x44, 0xc4, 0x91, 0x49, 0x4c, 0x02, 0xaa, 0xdf, 0x2c, 0xe4, 0x75, 0x4a, 0xd4, 0xbd, 0x01, 0x0b,
	0x86, 0xcc, 0xf1, 0xbd, 0x31, 0x5e, 0xe6, 0x2a, 0x2d, 0xc2, 0x5c, 0xd3, 0x8f, 0xd7, 0x4a, 0xcd,
	0x65, 0xa1, 0x59, 0x80, 0x89, 0x01, 0xcb, 0xb8, 0xd5, 0x82, 0xf6, 0xa1, 0x7e, 0x07, 0xd5, 0x72,
	0x58, 0xa2, 0xc3, 0xfb, 0x7b, 0x97, 0x85, 0xfa, 0x4a, 0x46, 0x47, 0x62, 0x71, 0x53, 0xc5, 0xc5,
	0xab, 0x5b, 0xe5, 0xb8, 0xa9, 0xe2, 0x12, 0xee, 0x35, 0xd7, 0x6c, 0xcd, 0x98, 0x37, 0x16, 0xd7,
	0x82, 0x26, 0xbd, 0xce, 0xc3, 0xfc, 0x14, 0x20, 0x24, 0xee, 0x7c, 0xa1, 0x7a, 0x57, 0xd4, 0x87,
	0x22, 0x9e, 0xea, 0x62, 0x43, 0x24, 0x74, 0x49, 0x56, 0x37, 0xc5, 0x39, 0x3d, 0x10, 0x93, 0x45,
	0xeb, 0x9e, 0x20, 0x6a, 0x06, 0x4a, 0x34, 0x46, 0xe2, 0xc6, 0x59, 0xcb, 0x68, 0x08, 0x88, 0xec,
	0x02, 0xc1, 0xad, 0x1b, 0x2e, 0x4e, 0x43, 0x27, 0x70, 0xe7, 0xe2, 0x19, 0xb3, 0xbe, 0xa5, 0x6c,
	0x57, 0xe8, 0x0d, 0x12, 0xae, 0x8f, 0x49, 0xc9, 0xeb, 0x6f, 0x08, 0xfd, 0xeb, 0x12, 0xfe, 0x32,
	0x70, 0xf0, 0x62, 0xc9, 0x2f, 0xb8, 0x8f, 0x0b, 0x6e, 0x12, 0x91, 0xcf, 0x41, 0x9f, 0xa5, 0x15,
	0x32, 0xbf, 0x4c, 0xc7, 0x65, 0xb7, 0xca, 0xc9, 0x2b, 0xd8, 0x48, 0x1e, 0x59, 0xf9, 0x95, 0x0f,
	0x70, 0xe5, 0x2d, 0x52, 0xe4, 0xf7, 0x7c, 0xfe, 0x96, 0x05, 0xa1, 0xeb, 0x7b, 0xaf, 0xed, 0xf0,
	0x5c, 0xdf, 0xc4, 0xc3, 0x54, 0x40, 0xf9, 0x39, 0x49, 0x11, 0xfd, 0x21, 0xea, 0x64, 0x10, 0xce,
	0x28, 0x87, 0x1f, 0xaf, 0x58, 0xe3, 0x11, 0x6a, 0xe4, 0x30, 0xe3, 0xeb, 0x12, 0x2c, 0x0f, 0x98,
	0x37, 0x76, 0xbd, 0x49, 0xd2, 0x3b, 0xa4, 0x7d, 0xaa, 0x52, 0xe8, 0x53, 0xd3, 0x2b, 0xab, 0x94,
	0xbd, 0xb2, 0xe2, 0x4e, 0xbb, 0xfc, 0xc1, 0x4e, 0xfb, 0x63, 0x7d, 0x7f, 0xf6, 0x12, 0xa8, 0x14,
	0x2e, 0x81, 0x9b, 0xba, 0xff, 0xcc, 0x0b, 0xa3, 0x96, 0x7f, 0x61, 0xa4, 0x5d, 0x7b, 0xfd, 0xa3,
	0x5d, 0xbb, 0xe8, 0x09, 0x1b, 0x71, 0x4f, 0x68, 0xfc, 0x51, 0x81, 0x15, 0x54, 0xc4, 0x23, 0x33,
	0x63, 0x5e, 0x44, 0xb6, 0xa0, 0x86, 0xdc, 0x8b, 0x2f, 0xa7, 0xe4, 0xc1, 0x1d, 0xc3, 0x5c, 0x23,
	0x76, 0xa5, 0x94, 0xd7, 0x88, 0x5d, 0xba, 0xb9, 0x9d, 0xdc, 0xcc, 0xb6, 0x93, 0x62, 0x91, 0xb6,
	0x94, 0x3e, 0x6e, 0xd2, 0xe7, 0x44, 0xa5, 0xf0, 0x9c, 0x30, 0xfe, 0xa5, 0xc0, 0x6a, 0x5f, 0x1e,
	0x88, 0x99, 0x1b, 0x62, 0xbe, 0xff, 0x3f, 0xcf, 0xb3, 0xc4, 0x53, 0xf5, 0xa6, 0xc6, 0xb7, 0x92,
	0x49, 0x40, 0x9c, 0xd0, 0xea, 0x2d, 0x09, 0x8d, 0x69, 0x51, 0xfb, 0xd8, 0x03, 0x2c, 0x8d, 0xb3,
	0x5e, 0x8c, 0xd3, 0x89, 0x1f, 0x17, 0x99, 0x17, 0x0a, 0x77, 0x3e, 0x97, 0x90, 0x34, 0x11, 0xff,
	0x55, 0xc8, 0xc6, 0x1f, 0x14, 0xa8, 0xb5, 0x1c, 0x07, 0x7f, 0x77, 0x29, 0x6e, 0xe2, 0x1a, 0x54,
	0xfc, 0x77, 0x9e, 0x6c, 0x68, 0x1b, 0x54, 0x4c, 0xb0, 0x09, 0xb6, 0xa7, 0xdc, 0x27, 0xd9, 0x68,
	0xc4, 0x53, 0xae, 0x6f, 0x87, 0x21, 0x8b, 0xe4, 0x0d, 0x2a, 0x26, 0x1f, 0xe4, 0xf6, 0xb7, 0xe5,
	0x36, 0x55, 0xb3, 0xf7, 0xa2, 0x74, 0x27, 0xdd, 0x27, 0xe3, 0xa7, 0xb0, 0x7a, 0xe8, 0x7a, 0xb6,
	0xe7, 0xb8, 0xbc, 0x9c, 0xa3, 0xaf, 0x1b, 0x50, 0xb5, 0x71, 0x24, 0x5b, 0x63, 0x39, 0x4b, 0x7d,
	0x28, 0x65, 0x7c, 0x30, 0x7e, 0xa3, 0x60, 0xe3, 0xef, 0x85, 0xbc, 0x1b, 0x4f, 0xc2, 0x52, 0xb2,
	0x61, 0xc5, 0x59, 0x2e, 0x65, 0xb2, 0xfc, 0x3c, 0xf9, 0x48, 0x19, 0x9f, 0x72, 0xeb, 0xc2, 0xc1,
	0x82, 0x2f, 0xc9, 0xb7, 0x9f, 0xc9, 0x68, 0xd4, 0xec, 0xc9, 0x8b, 0x3f, 0x9b, 0x09, 0xe7, 0xef,
	0x0a, 0xac, 0xc6, 0x30, 0x65, 0xbf, 0x5a, 0xb0, 0x30, 0x22, 0x7b, 0xd0, 0x3c, 0x0b, 0xfc, 0x99,
	0x8c, 0x5d, 0x3e, 0x49, 0xee, 0xe4, 0x36, 0x84, 0x66, 0x35, 0xc8, 0xf7, 0xa0, 0x11, 0xf9, 0xb1,
	0x7a, 0xe9, 0x26, 0xf5, 0x54, 0x9e, 0xd9, 0x2d, 0xd9, 0x30, 0x4b, 0x8f, 0x1f, 0x41, 0x63, 0xe6,
	0x7a, 0x22, 0x0c, 0x49, 0xfa, 0x14, 0x48, 0xf7, 0xb2, 0x92, 0xcd, 0x67, 0xae, 0x4a, 0x56, 0x8b,
	0xaf, 0xf9, 0x3f, 0x2b, 0xd0, 0xec, 0xb0, 0xf1, 0x84, 0x05, 0xe2, 0xf7, 0x97, 0xad, 0x62, 0x5c,
	0xd8, 0x39, 0x65, 0x03, 0x79, 0x94, 0x0f, 0x04, 0xed, 0xdd, 0xe6, 0x79, 0x39, 0xeb, 0x79, 0xea,
	0x85, 0x5a, 0xac, 0xd5, 0x44, 0x66, 0x42, 0x38, 0x9e, 0x1c, 0xb6, 0xf4, 0x3d, 0x55, 0x2d, 0xbe,
	0x0c, 0x47, 0x69, 0x4a, 0xf6, 0x25, 0x9d, 0xbf, 0x03, 0x35, 0x3b, 0xe3, 0xf6, 0xb5, 0xfd, 0x8d,
	0xa5, 0xd9, 0x13, 0x51, 0xca, 0x9d, 0x08, 0xe3, 0x12, 0xb4, 0x34, 0xd1, 0xe1, 0xdc, 0xf7, 0x42,
	0x46, 0xf6, 0xa0, 0x11, 0x49, 0x2c, 0x7e, 0x7a, 0x4a, 0xe2, 0x67, 0xf6, 0x8d, 0xa6, 0x3a, 0xe4,
	0x05, 0xd4, 0xa5, 0xbd, 0xf8, 0xe7, 0x82, 0xf5, 0x3c, 0xb5, 0xa4, 0xc3, 0x34, 0x51, 0xdb, 0x79,
	0x00, 0x2a, 0x2f, 0x46, 0xa4, 0x06, 0xe5, 0xfd, 0xc5, 0x95, 0xb6, 0x44, 0xea, 0xa0, 0x0e, 0xd9,
	0x74, 0xaa, 0x29, 0x3b, 0x2d, 0xa8, 0xc7, 0xcf, 0x33, 0x2e, 0xb6, 0x5e, 0x74, 0xc5, 0x4f, 0x2e,
	0xd6, 0x67, 0x5d, 0x4d, 0xe1, 0x7a, 0xd6, 0x8b, 0xcf, 0xba, 0xe2, 0x37, 0x17, 0xeb, 0xc5, 0x6b,
	0xad, 0x8c, 0x83, 0x57, 0xaf, 0x35, 0x55, 0x20, 0x6d, 0xad, 0xb2, 0xf3, 0xa7, 0x12, 0x00, 0x56,
	0x26, 0x33, 0x08, 0xfc, 0x80, 0xaf, 0xe9, 0xf5, 0x7b, 0xa6, 0xb6, 0x44, 0xd6, 0xe1, 0xae, 0xd5,
	0x7b, 0xdb, 0xea, 0x58, 0xed, 0x93, 0x6e, 0x8b, 0xbe, 0x31, 0x47, 0x27, 0x56, 0x5b, 0x53, 0xc8,
	0x1a, 0x68, 0x31, 0xdc, 0xa7, 0x6d, 0x93, 0x72, 0xb4, 0x44, 0x1e, 0xc0, 0xba, 0x98, 0xf5, 0x8f,
	0x47, 0x27, 0xfd, 0xc3, 0x93, 0xa1, 0xf9, 0xc5, 0xb1, 0xd9, 0x3b, 0x30, 0xb5, 0x32, 0xd9, 0x84,
	0x8d, 0x78, 0x01, 0x35, 0xbb, 0x2d, 0xab, 0x67, 0xf5, 0x8e, 0x4e, 0x86, 0xd6, 0x57, 0xa6, 0xa6,
	0x12, 0x0d, 0x96, 0x47, 0x56, 0xd7, 0x3c, 0x39, 0x6c, 0x59, 0x9d, 0x63, 0x6a, 0x6a, 0x95, 0xd4,
	0x10, 0x35, 0xbb, 0xfd, 0xb7, 0xad, 0x4e, 0x22, 0xaa, 0x92, 0x27, 0xf0, 0x30, 0x36, 0x64, 0xfe,
	0x6c, 0x60, 0xd1, 0xd6, 0xc8, 0xea, 0xf7, 0x4e, 0xda, 0xad, 0x91, 0xc9, 0x6d, 0x68, 0x35, 0xf2,
	0x10, 0xee, 0xe7, 0x5d, 0xa3, 0xe6, 0xa1, 0x49, 0xd1, 0x8d, 0x3a, 0xf7, 0xdb, 0x6c, 0x5b, 0xa3,
	0x93, 0x5e, 0x7f, 0x74, 0xd2, 0xea, 0x74, 0xfa, 0x5f, 0x9a, 0x6d, 0xad, 0x41, 0xee, 0xc3, 0x3d,
	0xa1, 0xda, 0xea, 0x9a, 0xbd, 0x76, 0xf2, 0x31, 0x20, 0xf7, 0x60, 0x55, 0x08, 0xb8, 0xfe, 0x61,
	0xff, 0xb8, 0xd7, 0xd6, 0x9a, 0x3b, 0x3f, 0x81, 0x66, 0xa6, 0xcf, 0xe7, 0xde, 0xb7, 0xad, 0xe1,
	0x41, 0xbf, 0xd7, 0x33, 0x0f, 0x46, 0x66, 0x5b, 0x5b, 0x22, 0x77, 0xa0, 0x41, 0xcd, 0x41, 0xa7,
	0xf5, 0x73, 0xab, 0x77, 0x24, 0x7f, 0xbe, 0x4a, 0xa4, 0xa5, 0x9d, 0x2f, 0xa0, 0x99, 0x29, 0x87,
	0x5c, 0x6a, 0xf5, 0x86, 0xc7, 0xb4, 0xc5, 0x1d, 0x5c, 0x22, 0x2b, 0x00, 0x43, 0x73, 0x34, 0xea,
	0x98, 0x5d, 0xb3, 0x37, 0xd2, 0x14, 0x02, 0x50, 0xed, 0xb6, 0xe8, 0x91, 0xd5, 0xd3, 0x4a, 0x72,
	0xfc, 0xc6, 0x1c, 0x69, 0x65, 0xd2, 0x84, 0xda, 0x91, 0xd9, 0x33, 0x69, 0xab, 0xa3, 0xa9, 0x3b,
	0x47, 0xb0, 0x9c, 0xad, 0x49, 0x3c, 0x7d, 0x9d, 0xfe, 0x70, 0x28, 0x58, 0xf0, 0xa5, 0xd5, 0xd3,
	0x14, 0xd2, 0x80, 0xca, 0x41, 0xa7, 0x3f, 0x34, 0xb5, 0x12, 0x59, 0x86, 0x7a, 0x77, 0xd4, 0x3d,
	0x41, 0x0d, 0x34, 0xc4, 0x67, 0x5c, 0x4b, 0xdd, 0x7f, 0xfa, 0xd5, 0x13, 0xc7, 0x1f, 0x33, 0xe4,
	0x22, 0xfe, 0x84, 0xef, 0xf8, 0xd3, 0x5d, 0x57, 0xfc, 0x47, 0x60, 0x0f, 0x81, 0xd3, 0x2a, 0xfe,
	0xf9, 0xe1, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x72, 0x48, 0x1c, 0x2c, 0x18, 0x00, 0x00,
}
