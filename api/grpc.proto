syntax = "proto3";

import "proto/vega.proto";

package grpc;
option go_package = "api";

service trading {
    rpc CreateOrder(vega.Order) returns (OrderResponse);
    rpc OrdersByMarket(OrdersByMarketRequest) returns (OrdersByMarketResponse);
    rpc OrdersByParty(OrdersByPartyRequest) returns (OrdersByPartyResponse);
    rpc OrderByMarketAndId(OrderByMarketAndIdRequest) returns (OrderByMarketAndIdResponse);
    rpc Markets(MarketsRequest) returns (MarketsResponse);
}

message OrderResponse {
    bool success = 1;
}

message OrdersByMarketRequest {
    string market = 1;
    OptionalParams params = 2;
}

message OrdersByMarketResponse {
    repeated vega.Order orders = 1;
}

message OrdersByPartyRequest {
    string party = 1;
    OptionalParams params = 2;
}

message OrdersByPartyResponse {
    repeated vega.Order orders = 1;
}

message OrderByMarketAndIdRequest {
    string market = 1;
    string id = 2;
}

message OrderByMarketAndIdResponse {
    vega.Order order = 1;
}

message MarketsRequest {
    // empty for now
}

message MarketsResponse {
    repeated string markets = 1;
}

message OptionalParams {
    uint64 limit = 1;
}