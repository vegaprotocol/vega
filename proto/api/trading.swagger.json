{
  "swagger": "2.0",
  "info": {
    "title": "proto/api/trading.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/token": {
      "get": {
        "summary": "Check an API token",
        "operationId": "CheckToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCheckTokenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "trading"
        ]
      },
      "post": {
        "summary": "Sign In",
        "operationId": "SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiSignInResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiSignInRequest"
            }
          }
        ],
        "tags": [
          "trading"
        ]
      }
    },
    "/markets": {
      "get": {
        "summary": "Get a list of Markets",
        "operationId": "Markets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarketsResponse"
            }
          }
        },
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets-data": {
      "get": {
        "summary": "Get a list of Market Data",
        "operationId": "MarketsData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarketsDataResponse"
            }
          }
        },
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets-data/{marketID}": {
      "get": {
        "summary": "Get Market Data by MarketID",
        "operationId": "MarketDataByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarketDataByIDResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}": {
      "get": {
        "summary": "Get a Market by ID",
        "operationId": "MarketByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarketByIDResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/accounts": {
      "get": {
        "summary": "Get a list of Accounts by Market",
        "operationId": "MarketAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarketAccountsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/candles": {
      "get": {
        "summary": "Get a list of Candles by Market",
        "operationId": "Candles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCandlesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sinceTimestamp",
            "description": "nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "interval",
            "description": " - I1M: 1 minute\n - I5M: 5 minutes\n - I15M: 15 minutes\n - I1H: 1 hour\n - I6H: 6 hours\n - I1D: 1 day",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "I1M",
              "I5M",
              "I15M",
              "I1H",
              "I6H",
              "I1D"
            ],
            "default": "I1M"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/depth": {
      "get": {
        "summary": "Get Market Depth",
        "operationId": "MarketDepth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarketDepthResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxDepth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/orders": {
      "get": {
        "summary": "Get a list of Orders by Market",
        "operationId": "OrdersByMarket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrdersByMarketResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.skip",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.descending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "open",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/orders/{orderID}": {
      "get": {
        "summary": "Get an Order by Market and OrderID",
        "operationId": "OrderByMarketAndID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrderByMarketAndIdResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/trades": {
      "get": {
        "summary": "Get a list of Trades by Market",
        "operationId": "TradesByMarket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTradesByMarketResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.skip",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.descending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/markets/{marketID}/trades/latest": {
      "get": {
        "summary": "Get latest Trade",
        "operationId": "LastTrade",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiLastTradeResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/orders": {
      "post": {
        "summary": "Submit an Order",
        "operationId": "SubmitOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/vegaPendingOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiSubmitOrderRequest"
            }
          }
        ],
        "tags": [
          "trading"
        ]
      }
    },
    "/orders/{amendment.orderID}": {
      "put": {
        "summary": "Amend an Order",
        "operationId": "AmendOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/vegaPendingOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "amendment.orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAmendOrderRequest"
            }
          }
        ],
        "tags": [
          "trading"
        ]
      }
    },
    "/orders/{cancellation.orderID}": {
      "delete": {
        "summary": "Cancel an Order",
        "operationId": "CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/vegaPendingOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "cancellation.orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cancellation.marketID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cancellation.partyID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "trading"
        ]
      }
    },
    "/orders/{orderID}/trades": {
      "get": {
        "summary": "Get a list of Trades by Order",
        "operationId": "TradesByOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTradesByOrderResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/orders/{reference}": {
      "get": {
        "summary": "Get an Order by Pending Order reference (UUID)",
        "operationId": "OrderByReference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrderByReferenceResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties": {
      "get": {
        "summary": "Get a list of Parties",
        "operationId": "Parties",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiPartiesResponse"
            }
          }
        },
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{partyID}": {
      "get": {
        "summary": "Get a Party by ID",
        "operationId": "PartyByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiPartyByIDResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{partyID}/accounts": {
      "get": {
        "summary": "Get a list of Accounts by Party",
        "operationId": "PartyAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiPartyAccountsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ALL",
              "INSURANCE",
              "SETTLEMENT",
              "MARGIN",
              "GENERAL"
            ],
            "default": "ALL"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{partyID}/markets/{marketID}/margin": {
      "get": {
        "summary": "Get Margin Levels by PartyID",
        "operationId": "MarginLevels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMarginLevelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{partyID}/orders": {
      "get": {
        "summary": "Get a list of Orders by Party",
        "operationId": "OrdersByParty",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrdersByPartyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.skip",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.descending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "open",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{partyID}/positions": {
      "get": {
        "summary": "Get a list of Positions by Party",
        "operationId": "PositionsByParty",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiPositionsByPartyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{partyID}/trades": {
      "get": {
        "summary": "Get a list of Trades by Party",
        "operationId": "TradesByParty",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTradesByPartyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.skip",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.descending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "trading_data"
        ]
      }
    },
    "/parties/{withdraw.partyID}/withdrawals": {
      "post": {
        "summary": "Request withdrawal",
        "operationId": "Withdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiWithdrawResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "withdraw.partyID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiWithdrawRequest"
            }
          }
        ],
        "tags": [
          "trading"
        ]
      }
    },
    "/statistics": {
      "get": {
        "summary": "Get Statistics",
        "operationId": "Statistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/vegaStatistics"
            }
          }
        },
        "tags": [
          "trading_data"
        ]
      }
    },
    "/time": {
      "get": {
        "summary": "Get Time",
        "operationId": "GetVegaTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiVegaTimeResponse"
            }
          }
        },
        "tags": [
          "trading_data"
        ]
      }
    }
  },
  "definitions": {
    "OrderStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Expired",
        "Cancelled",
        "Stopped",
        "Filled",
        "Rejected"
      ],
      "default": "Active"
    },
    "OrderTimeInForce": {
      "type": "string",
      "enum": [
        "GTC",
        "GTT",
        "IOC",
        "FOK"
      ],
      "default": "GTC",
      "description": "- GTC: good til cancelled\n - GTT: good til time\n - IOC: immediate or cancel\n - FOK: fill or kill",
      "title": "Order Time in Force"
    },
    "apiAmendOrderRequest": {
      "type": "object",
      "properties": {
        "amendment": {
          "$ref": "#/definitions/vegaOrderAmendment"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "apiCandlesResponse": {
      "type": "object",
      "properties": {
        "candles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaCandle"
          }
        }
      }
    },
    "apiCheckTokenResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiLastTradeResponse": {
      "type": "object",
      "properties": {
        "trade": {
          "$ref": "#/definitions/vegaTrade"
        }
      }
    },
    "apiMarginLevelsResponse": {
      "type": "object",
      "properties": {
        "marginLevels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaMarginLevels"
          }
        }
      }
    },
    "apiMarketAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaAccount"
          }
        }
      }
    },
    "apiMarketByIDResponse": {
      "type": "object",
      "properties": {
        "market": {
          "$ref": "#/definitions/vegaMarket"
        }
      }
    },
    "apiMarketDataByIDResponse": {
      "type": "object",
      "properties": {
        "marketData": {
          "$ref": "#/definitions/vegaMarketData"
        }
      }
    },
    "apiMarketDepthResponse": {
      "type": "object",
      "properties": {
        "marketID": {
          "type": "string"
        },
        "buy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaPriceLevel"
          }
        },
        "sell": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaPriceLevel"
          }
        },
        "lastTrade": {
          "$ref": "#/definitions/vegaTrade"
        }
      }
    },
    "apiMarketsDataResponse": {
      "type": "object",
      "properties": {
        "marketsData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaMarketData"
          }
        }
      }
    },
    "apiMarketsResponse": {
      "type": "object",
      "properties": {
        "markets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaMarket"
          },
          "title": "a list of Markets"
        }
      }
    },
    "apiOrderByMarketAndIdResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/vegaOrder"
        }
      }
    },
    "apiOrderByReferenceResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/vegaOrder"
        }
      }
    },
    "apiOrdersByMarketResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaOrder"
          }
        }
      }
    },
    "apiOrdersByPartyResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaOrder"
          }
        }
      }
    },
    "apiOrdersStream": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaOrder"
          }
        }
      }
    },
    "apiPagination": {
      "type": "object",
      "properties": {
        "skip": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "descending": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiPartiesResponse": {
      "type": "object",
      "properties": {
        "parties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaParty"
          }
        }
      }
    },
    "apiPartyAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaAccount"
          }
        }
      }
    },
    "apiPartyByIDResponse": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/vegaParty"
        }
      }
    },
    "apiPositionsByPartyResponse": {
      "type": "object",
      "properties": {
        "positions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaPosition"
          }
        }
      }
    },
    "apiSignInRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "a party ID"
        },
        "password": {
          "type": "string",
          "title": "a password"
        }
      }
    },
    "apiSignInResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "a token corresponding to the party given in the request, and valid for subsequent requests for that party"
        }
      }
    },
    "apiSubmitOrderRequest": {
      "type": "object",
      "properties": {
        "submission": {
          "$ref": "#/definitions/vegaOrderSubmission",
          "description": "the bulk of the Order, including market, party, price, size, side, time in force, etc."
        },
        "token": {
          "type": "string",
          "description": "a token acquired from a SignIn request and corresponding to the party specified in the `submission`."
        }
      }
    },
    "apiTradesByMarketResponse": {
      "type": "object",
      "properties": {
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaTrade"
          }
        }
      }
    },
    "apiTradesByOrderResponse": {
      "type": "object",
      "properties": {
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaTrade"
          }
        }
      }
    },
    "apiTradesByPartyResponse": {
      "type": "object",
      "properties": {
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaTrade"
          }
        }
      }
    },
    "apiTradesStream": {
      "type": "object",
      "properties": {
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaTrade"
          }
        }
      }
    },
    "apiVegaTimeResponse": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "nanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`"
        }
      }
    },
    "apiWithdrawRequest": {
      "type": "object",
      "properties": {
        "withdraw": {
          "$ref": "#/definitions/vegaWithdraw"
        }
      }
    },
    "apiWithdrawResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "vegaAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "balance": {
          "type": "string",
          "format": "int64"
        },
        "asset": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/vegaAccountType"
        }
      }
    },
    "vegaAccountType": {
      "type": "string",
      "enum": [
        "ALL",
        "INSURANCE",
        "SETTLEMENT",
        "MARGIN",
        "GENERAL"
      ],
      "default": "ALL"
    },
    "vegaCandle": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64",
          "description": "nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`."
        },
        "datetime": {
          "type": "string",
          "title": "ISO 8601 datetime"
        },
        "high": {
          "type": "string",
          "format": "uint64"
        },
        "low": {
          "type": "string",
          "format": "uint64"
        },
        "open": {
          "type": "string",
          "format": "uint64"
        },
        "close": {
          "type": "string",
          "format": "uint64"
        },
        "volume": {
          "type": "string",
          "format": "uint64"
        },
        "interval": {
          "$ref": "#/definitions/vegaInterval"
        }
      }
    },
    "vegaChainStatus": {
      "type": "string",
      "enum": [
        "DISCONNECTED",
        "REPLAYING",
        "CONNECTED"
      ],
      "default": "DISCONNECTED"
    },
    "vegaContinuousTrading": {
      "type": "object",
      "properties": {
        "tickSize": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "vegaDiscreteTrading": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vegaEthereumEvent": {
      "type": "object",
      "properties": {
        "contractID": {
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "vegaExternalRiskModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "socket": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "vegaFuture": {
      "type": "object",
      "properties": {
        "maturity": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "ethereumEvent": {
          "$ref": "#/definitions/vegaEthereumEvent"
        }
      }
    },
    "vegaInstrument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "baseName": {
          "type": "string"
        },
        "quoteName": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/vegaInstrumentMetadata"
        },
        "initialMarkPrice": {
          "type": "string",
          "format": "uint64"
        },
        "future": {
          "$ref": "#/definitions/vegaFuture"
        }
      }
    },
    "vegaInstrumentMetadata": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "vegaInterval": {
      "type": "string",
      "enum": [
        "I1M",
        "I5M",
        "I15M",
        "I1H",
        "I6H",
        "I1D"
      ],
      "default": "I1M",
      "title": "- I1M: 1 minute\n - I5M: 5 minutes\n - I15M: 15 minutes\n - I1H: 1 hour\n - I6H: 6 hours\n - I1D: 1 day"
    },
    "vegaLedgerEntry": {
      "type": "object",
      "properties": {
        "fromAccount": {
          "type": "string"
        },
        "toAccount": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "reference": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vegaLogNormalModelParams": {
      "type": "object",
      "properties": {
        "mu": {
          "type": "number",
          "format": "double"
        },
        "r": {
          "type": "number",
          "format": "double"
        },
        "sigma": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "vegaLogNormalRiskModel": {
      "type": "object",
      "properties": {
        "riskAversionParameter": {
          "type": "number",
          "format": "double"
        },
        "tau": {
          "type": "number",
          "format": "double"
        },
        "params": {
          "$ref": "#/definitions/vegaLogNormalModelParams"
        }
      }
    },
    "vegaMarginCalculator": {
      "type": "object",
      "properties": {
        "scalingFactors": {
          "$ref": "#/definitions/vegaScalingFactors"
        }
      }
    },
    "vegaMarginLevels": {
      "type": "object",
      "properties": {
        "maintenanceMargin": {
          "type": "string",
          "format": "int64"
        },
        "searchLevel": {
          "type": "string",
          "format": "int64"
        },
        "initialMargin": {
          "type": "string",
          "format": "int64"
        },
        "collateralReleaseLevel": {
          "type": "string",
          "format": "int64"
        },
        "partyID": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vegaMarket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "32 pseudo-random upper-case letters and digits"
        },
        "name": {
          "type": "string",
          "title": "a human-understandable name for the Market, perhaps including a currency pair and a maturity date"
        },
        "tradableInstrument": {
          "$ref": "#/definitions/vegaTradableInstrument"
        },
        "decimalPlaces": {
          "type": "string",
          "format": "uint64",
          "title": "the number of decimal places that a price must be shifted by in order to get a correct price denominated in the currency of the Market. ie `realPrice = price / 10^decimalPlaces`"
        },
        "continuous": {
          "$ref": "#/definitions/vegaContinuousTrading"
        },
        "discrete": {
          "$ref": "#/definitions/vegaDiscreteTrading"
        }
      }
    },
    "vegaMarketData": {
      "type": "object",
      "properties": {
        "markPrice": {
          "type": "string",
          "format": "uint64"
        },
        "bestBidPrice": {
          "type": "string",
          "format": "uint64"
        },
        "bestBidVolume": {
          "type": "string",
          "format": "uint64"
        },
        "bestOfferPrice": {
          "type": "string",
          "format": "uint64"
        },
        "bestOfferVolume": {
          "type": "string",
          "format": "uint64"
        },
        "midPrice": {
          "type": "string",
          "format": "uint64"
        },
        "market": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vegaMarketDepth": {
      "type": "object",
      "properties": {
        "marketID": {
          "type": "string"
        },
        "buy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaPriceLevel"
          }
        },
        "sell": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaPriceLevel"
          }
        }
      }
    },
    "vegaOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "partyID": {
          "type": "string"
        },
        "side": {
          "$ref": "#/definitions/vegaSide"
        },
        "price": {
          "type": "string",
          "format": "uint64"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "remaining": {
          "type": "string",
          "format": "uint64"
        },
        "timeInForce": {
          "$ref": "#/definitions/OrderTimeInForce"
        },
        "type": {
          "$ref": "#/definitions/vegaOrderType"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/OrderStatus",
          "description": "If `status` is `Rejected`, check `reason`."
        },
        "expiresAt": {
          "type": "string",
          "format": "int64"
        },
        "reference": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/vegaOrderError"
        }
      }
    },
    "vegaOrderAmendment": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string"
        },
        "partyID": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "uint64"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "expiresAt": {
          "type": "string",
          "format": "int64"
        },
        "side": {
          "$ref": "#/definitions/vegaSide"
        }
      }
    },
    "vegaOrderCancellation": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "partyID": {
          "type": "string"
        }
      }
    },
    "vegaOrderError": {
      "type": "string",
      "enum": [
        "NONE",
        "INVALID_MARKET_ID",
        "INVALID_ORDER_ID",
        "ORDER_OUT_OF_SEQUENCE",
        "INVALID_REMAINING_SIZE",
        "TIME_FAILURE",
        "ORDER_REMOVAL_FAILURE",
        "INVALID_EXPIRATION_DATETIME",
        "INVALID_ORDER_REFERENCE",
        "EDIT_NOT_ALLOWED",
        "ORDER_AMEND_FAILURE",
        "ORDER_NOT_FOUND",
        "INVALID_PARTY_ID",
        "MARKET_CLOSED",
        "MARGIN_CHECK_FAILED",
        "MISSING_GENERAL_ACCOUNT",
        "INTERNAL_ERROR",
        "INVALID_SIZE",
        "INVALID_PERSISTENCE"
      ],
      "default": "NONE"
    },
    "vegaOrderSubmission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "partyID": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "uint64"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "side": {
          "$ref": "#/definitions/vegaSide"
        },
        "TimeInForce": {
          "$ref": "#/definitions/OrderTimeInForce"
        },
        "expiresAt": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/vegaOrderType"
        }
      }
    },
    "vegaOrderType": {
      "type": "string",
      "enum": [
        "LIMIT",
        "MARKET",
        "NETWORK"
      ],
      "default": "LIMIT",
      "description": "- LIMIT: used for Limit orders\n - MARKET: used for Market orders\n - NETWORK: used for orders where the initiating party is the network (used for distressed traders)",
      "title": "Order Type"
    },
    "vegaParty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "positions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaPosition"
          }
        }
      }
    },
    "vegaPendingOrder": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "uint64"
        },
        "TimeInForce": {
          "$ref": "#/definitions/OrderTimeInForce"
        },
        "side": {
          "$ref": "#/definitions/vegaSide"
        },
        "marketID": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "partyID": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/OrderStatus"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/vegaOrderType"
        }
      }
    },
    "vegaPosition": {
      "type": "object",
      "properties": {
        "marketID": {
          "type": "string"
        },
        "partyID": {
          "type": "string"
        },
        "openVolume": {
          "type": "string",
          "format": "int64"
        },
        "realisedPNL": {
          "type": "string",
          "format": "int64"
        },
        "unrealisedPNL": {
          "type": "string",
          "format": "int64"
        },
        "averageEntryPrice": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "vegaPriceLevel": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string",
          "format": "uint64"
        },
        "numberOfOrders": {
          "type": "string",
          "format": "uint64"
        },
        "volume": {
          "type": "string",
          "format": "uint64"
        },
        "cumulativeVolume": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "vegaScalingFactors": {
      "type": "object",
      "properties": {
        "searchLevel": {
          "type": "number",
          "format": "double"
        },
        "initialMargin": {
          "type": "number",
          "format": "double"
        },
        "collateralRelease": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "vegaSide": {
      "type": "string",
      "enum": [
        "Buy",
        "Sell"
      ],
      "default": "Buy"
    },
    "vegaSimpleModelParams": {
      "type": "object",
      "properties": {
        "factorLong": {
          "type": "number",
          "format": "double"
        },
        "factorShort": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "vegaSimpleRiskModel": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/vegaSimpleModelParams"
        }
      }
    },
    "vegaStatistics": {
      "type": "object",
      "properties": {
        "blockHeight": {
          "type": "string",
          "format": "uint64"
        },
        "backlogLength": {
          "type": "string",
          "format": "uint64"
        },
        "totalPeers": {
          "type": "string",
          "format": "uint64"
        },
        "genesisTime": {
          "type": "string",
          "title": "ISO 8601 datetime, nanosecond precision"
        },
        "currentTime": {
          "type": "string",
          "title": "ISO 8601 datetime, nanosecond precision"
        },
        "vegaTime": {
          "type": "string",
          "title": "ISO 8601 datetime, nanosecond precision"
        },
        "status": {
          "$ref": "#/definitions/vegaChainStatus"
        },
        "txPerBlock": {
          "type": "string",
          "format": "uint64"
        },
        "averageTxBytes": {
          "type": "string",
          "format": "uint64"
        },
        "averageOrdersPerBlock": {
          "type": "string",
          "format": "uint64"
        },
        "tradesPerSecond": {
          "type": "string",
          "format": "uint64"
        },
        "ordersPerSecond": {
          "type": "string",
          "format": "uint64"
        },
        "totalMarkets": {
          "type": "string",
          "format": "uint64"
        },
        "totalParties": {
          "type": "string",
          "format": "uint64"
        },
        "parties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalAmendOrder": {
          "type": "string",
          "format": "uint64"
        },
        "totalCancelOrder": {
          "type": "string",
          "format": "uint64"
        },
        "totalCreateOrder": {
          "type": "string",
          "format": "uint64"
        },
        "totalOrders": {
          "type": "string",
          "format": "uint64"
        },
        "totalTrades": {
          "type": "string",
          "format": "uint64"
        },
        "orderSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "tradeSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "candleSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "marketDepthSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "positionsSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "accountSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "marketDataSubscriptions": {
          "type": "integer",
          "format": "int32"
        },
        "appVersionHash": {
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "chainVersion": {
          "type": "string"
        },
        "blockDuration": {
          "type": "string",
          "format": "uint64",
          "title": "nanoseconds"
        },
        "uptime": {
          "type": "string",
          "title": "ISO 8601 datetime, nanosecond precision"
        }
      }
    },
    "vegaTradableInstrument": {
      "type": "object",
      "properties": {
        "instrument": {
          "$ref": "#/definitions/vegaInstrument"
        },
        "marginCalculator": {
          "$ref": "#/definitions/vegaMarginCalculator"
        },
        "logNormalRiskModel": {
          "$ref": "#/definitions/vegaLogNormalRiskModel"
        },
        "externalRiskModel": {
          "$ref": "#/definitions/vegaExternalRiskModel"
        },
        "simpleRiskModel": {
          "$ref": "#/definitions/vegaSimpleRiskModel"
        }
      }
    },
    "vegaTrade": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "marketID": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "uint64"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "buyer": {
          "type": "string"
        },
        "seller": {
          "type": "string"
        },
        "aggressor": {
          "$ref": "#/definitions/vegaSide"
        },
        "buyOrder": {
          "type": "string"
        },
        "sellOrder": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "description": "nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`."
        }
      }
    },
    "vegaTransferBalance": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/vegaAccount"
        },
        "balance": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vegaTransferResponse": {
      "type": "object",
      "properties": {
        "transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaLedgerEntry"
          }
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vegaTransferBalance"
          }
        }
      }
    },
    "vegaWithdraw": {
      "type": "object",
      "properties": {
        "partyID": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "asset": {
          "type": "string"
        }
      }
    }
  },
  "x-stream-definitions": {
    "apiOrdersStream": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/apiOrdersStream"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of apiOrdersStream"
    },
    "apiTradesStream": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/apiTradesStream"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of apiTradesStream"
    },
    "vegaAccount": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaAccount"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaAccount"
    },
    "vegaCandle": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaCandle"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaCandle"
    },
    "vegaMarginLevels": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaMarginLevels"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaMarginLevels"
    },
    "vegaMarketData": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaMarketData"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaMarketData"
    },
    "vegaMarketDepth": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaMarketDepth"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaMarketDepth"
    },
    "vegaPosition": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaPosition"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaPosition"
    },
    "vegaTransferResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/vegaTransferResponse"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of vegaTransferResponse"
    }
  }
}
