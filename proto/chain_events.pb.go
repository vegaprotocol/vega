// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/chain_events.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AssetList struct {
	VegaAssetID          string   `protobuf:"bytes,1,opt,name=vegaAssetID,proto3" json:"vegaAssetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetList) Reset()         { *m = AssetList{} }
func (m *AssetList) String() string { return proto.CompactTextString(m) }
func (*AssetList) ProtoMessage()    {}
func (*AssetList) Descriptor() ([]byte, []int) {
	return fileDescriptor_53124a7566d3b0d6, []int{0}
}

func (m *AssetList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetList.Unmarshal(m, b)
}
func (m *AssetList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetList.Marshal(b, m, deterministic)
}
func (m *AssetList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetList.Merge(m, src)
}
func (m *AssetList) XXX_Size() int {
	return xxx_messageInfo_AssetList.Size(m)
}
func (m *AssetList) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetList.DiscardUnknown(m)
}

var xxx_messageInfo_AssetList proto.InternalMessageInfo

func (m *AssetList) GetVegaAssetID() string {
	if m != nil {
		return m.VegaAssetID
	}
	return ""
}

type Deposit struct {
	VegaAssetID          string   `protobuf:"bytes,1,opt,name=vegaAssetID,proto3" json:"vegaAssetID,omitempty"`
	SourcePartyID        string   `protobuf:"bytes,2,opt,name=sourcePartyID,proto3" json:"sourcePartyID,omitempty"`
	TargetPartyID        string   `protobuf:"bytes,3,opt,name=targetPartyID,proto3" json:"targetPartyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deposit) Reset()         { *m = Deposit{} }
func (m *Deposit) String() string { return proto.CompactTextString(m) }
func (*Deposit) ProtoMessage()    {}
func (*Deposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_53124a7566d3b0d6, []int{1}
}

func (m *Deposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deposit.Unmarshal(m, b)
}
func (m *Deposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deposit.Marshal(b, m, deterministic)
}
func (m *Deposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deposit.Merge(m, src)
}
func (m *Deposit) XXX_Size() int {
	return xxx_messageInfo_Deposit.Size(m)
}
func (m *Deposit) XXX_DiscardUnknown() {
	xxx_messageInfo_Deposit.DiscardUnknown(m)
}

var xxx_messageInfo_Deposit proto.InternalMessageInfo

func (m *Deposit) GetVegaAssetID() string {
	if m != nil {
		return m.VegaAssetID
	}
	return ""
}

func (m *Deposit) GetSourcePartyID() string {
	if m != nil {
		return m.SourcePartyID
	}
	return ""
}

func (m *Deposit) GetTargetPartyID() string {
	if m != nil {
		return m.TargetPartyID
	}
	return ""
}

type Withdrawal struct {
	VegaAssetID          string   `protobuf:"bytes,1,opt,name=vegaAssetID,proto3" json:"vegaAssetID,omitempty"`
	SourcePartyId        string   `protobuf:"bytes,2,opt,name=sourcePartyId,proto3" json:"sourcePartyId,omitempty"`
	TargetPartyId        string   `protobuf:"bytes,3,opt,name=targetPartyId,proto3" json:"targetPartyId,omitempty"`
	ReferenceNonce       string   `protobuf:"bytes,4,opt,name=referenceNonce,proto3" json:"referenceNonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Withdrawal) Reset()         { *m = Withdrawal{} }
func (m *Withdrawal) String() string { return proto.CompactTextString(m) }
func (*Withdrawal) ProtoMessage()    {}
func (*Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_53124a7566d3b0d6, []int{2}
}

func (m *Withdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Withdrawal.Unmarshal(m, b)
}
func (m *Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Withdrawal.Marshal(b, m, deterministic)
}
func (m *Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Withdrawal.Merge(m, src)
}
func (m *Withdrawal) XXX_Size() int {
	return xxx_messageInfo_Withdrawal.Size(m)
}
func (m *Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_Withdrawal proto.InternalMessageInfo

func (m *Withdrawal) GetVegaAssetID() string {
	if m != nil {
		return m.VegaAssetID
	}
	return ""
}

func (m *Withdrawal) GetSourcePartyId() string {
	if m != nil {
		return m.SourcePartyId
	}
	return ""
}

func (m *Withdrawal) GetTargetPartyId() string {
	if m != nil {
		return m.TargetPartyId
	}
	return ""
}

func (m *Withdrawal) GetReferenceNonce() string {
	if m != nil {
		return m.ReferenceNonce
	}
	return ""
}

type ChainEvent struct {
	TxHash string `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Index  uint64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Block  uint64 `protobuf:"varint,3,opt,name=block,proto3" json:"block,omitempty"`
	// Types that are valid to be assigned to EventSource:
	//	*ChainEvent_BuiltinAsset
	//	*ChainEvent_Erc20
	EventSource isChainEvent_EventSource `protobuf_oneof:"eventSource"`
	// Types that are valid to be assigned to EventType:
	//	*ChainEvent_Deposit
	//	*ChainEvent_Withdrawal
	//	*ChainEvent_AssetList
	EventType            isChainEvent_EventType `protobuf_oneof:"eventType"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ChainEvent) Reset()         { *m = ChainEvent{} }
func (m *ChainEvent) String() string { return proto.CompactTextString(m) }
func (*ChainEvent) ProtoMessage()    {}
func (*ChainEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_53124a7566d3b0d6, []int{3}
}

func (m *ChainEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainEvent.Unmarshal(m, b)
}
func (m *ChainEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainEvent.Marshal(b, m, deterministic)
}
func (m *ChainEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainEvent.Merge(m, src)
}
func (m *ChainEvent) XXX_Size() int {
	return xxx_messageInfo_ChainEvent.Size(m)
}
func (m *ChainEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ChainEvent proto.InternalMessageInfo

func (m *ChainEvent) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ChainEvent) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ChainEvent) GetBlock() uint64 {
	if m != nil {
		return m.Block
	}
	return 0
}

type isChainEvent_EventSource interface {
	isChainEvent_EventSource()
}

type ChainEvent_BuiltinAsset struct {
	BuiltinAsset *BuiltinAsset `protobuf:"bytes,101,opt,name=builtinAsset,proto3,oneof"`
}

type ChainEvent_Erc20 struct {
	Erc20 *ERC20 `protobuf:"bytes,102,opt,name=erc20,proto3,oneof"`
}

func (*ChainEvent_BuiltinAsset) isChainEvent_EventSource() {}

func (*ChainEvent_Erc20) isChainEvent_EventSource() {}

func (m *ChainEvent) GetEventSource() isChainEvent_EventSource {
	if m != nil {
		return m.EventSource
	}
	return nil
}

func (m *ChainEvent) GetBuiltinAsset() *BuiltinAsset {
	if x, ok := m.GetEventSource().(*ChainEvent_BuiltinAsset); ok {
		return x.BuiltinAsset
	}
	return nil
}

func (m *ChainEvent) GetErc20() *ERC20 {
	if x, ok := m.GetEventSource().(*ChainEvent_Erc20); ok {
		return x.Erc20
	}
	return nil
}

type isChainEvent_EventType interface {
	isChainEvent_EventType()
}

type ChainEvent_Deposit struct {
	Deposit *Deposit `protobuf:"bytes,1001,opt,name=deposit,proto3,oneof"`
}

type ChainEvent_Withdrawal struct {
	Withdrawal *Withdrawal `protobuf:"bytes,1002,opt,name=withdrawal,proto3,oneof"`
}

type ChainEvent_AssetList struct {
	AssetList *AssetList `protobuf:"bytes,1003,opt,name=assetList,proto3,oneof"`
}

func (*ChainEvent_Deposit) isChainEvent_EventType() {}

func (*ChainEvent_Withdrawal) isChainEvent_EventType() {}

func (*ChainEvent_AssetList) isChainEvent_EventType() {}

func (m *ChainEvent) GetEventType() isChainEvent_EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (m *ChainEvent) GetDeposit() *Deposit {
	if x, ok := m.GetEventType().(*ChainEvent_Deposit); ok {
		return x.Deposit
	}
	return nil
}

func (m *ChainEvent) GetWithdrawal() *Withdrawal {
	if x, ok := m.GetEventType().(*ChainEvent_Withdrawal); ok {
		return x.Withdrawal
	}
	return nil
}

func (m *ChainEvent) GetAssetList() *AssetList {
	if x, ok := m.GetEventType().(*ChainEvent_AssetList); ok {
		return x.AssetList
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ChainEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ChainEvent_BuiltinAsset)(nil),
		(*ChainEvent_Erc20)(nil),
		(*ChainEvent_Deposit)(nil),
		(*ChainEvent_Withdrawal)(nil),
		(*ChainEvent_AssetList)(nil),
	}
}

func init() {
	proto.RegisterType((*AssetList)(nil), "vega.AssetList")
	proto.RegisterType((*Deposit)(nil), "vega.Deposit")
	proto.RegisterType((*Withdrawal)(nil), "vega.Withdrawal")
	proto.RegisterType((*ChainEvent)(nil), "vega.ChainEvent")
}

func init() { proto.RegisterFile("proto/chain_events.proto", fileDescriptor_53124a7566d3b0d6) }

var fileDescriptor_53124a7566d3b0d6 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x51, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0x7b, 0xf5, 0xda, 0x70, 0x73, 0x46, 0x65, 0x11, 0x59, 0x7c, 0x31, 0x9e, 0x22, 0x45,
	0xf0, 0x12, 0xd2, 0x17, 0x5f, 0xbd, 0xa6, 0x70, 0x05, 0x11, 0x59, 0x05, 0xc1, 0x17, 0xd9, 0xec,
	0x4e, 0x9b, 0xc5, 0xe3, 0x36, 0xec, 0x6d, 0x9b, 0xf6, 0xeb, 0xf8, 0xc1, 0x7c, 0x57, 0xbf, 0x84,
	0xec, 0x6c, 0xae, 0x4d, 0x4a, 0x1f, 0xf4, 0xe9, 0xf8, 0xff, 0xe7, 0x37, 0xcc, 0xdc, 0xfe, 0x07,
	0xf8, 0xd2, 0x59, 0x6f, 0xc7, 0x6a, 0x21, 0x4d, 0xfb, 0x0d, 0x2f, 0xb0, 0xf5, 0x5d, 0x49, 0x16,
	0x4b, 0x2f, 0xf0, 0x4c, 0x3e, 0x65, 0xb1, 0x2e, 0xbb, 0x0e, 0xfb, 0x4a, 0xf1, 0x06, 0xb2, 0x77,
	0x41, 0xbf, 0x37, 0x9d, 0x67, 0x23, 0xc8, 0x03, 0x48, 0xc6, 0xc9, 0x8c, 0x27, 0xa3, 0xe4, 0x20,
	0x13, 0x9b, 0x56, 0xb1, 0x82, 0xc1, 0x0c, 0x97, 0xb6, 0x33, 0xff, 0x00, 0xb3, 0x97, 0x30, 0xec,
	0xec, 0xb9, 0x53, 0xf8, 0x51, 0x3a, 0x7f, 0x75, 0x32, 0xe3, 0xbb, 0xc4, 0x6c, 0x9b, 0x81, 0xf2,
	0xd2, 0x9d, 0xa1, 0xef, 0xa9, 0x7b, 0x91, 0xda, 0x32, 0x8b, 0x1f, 0x09, 0xc0, 0x17, 0xe3, 0x17,
	0xda, 0xc9, 0x95, 0x6c, 0xfe, 0x7f, 0xb8, 0xbe, 0x6b, 0xb8, 0xbe, 0x3d, 0x5c, 0xdf, 0x35, 0x5c,
	0xb3, 0x57, 0xf0, 0xc0, 0xe1, 0x29, 0x3a, 0x6c, 0x15, 0x7e, 0xb0, 0xad, 0x42, 0x9e, 0x12, 0x76,
	0xcb, 0x2d, 0x7e, 0xee, 0x02, 0x1c, 0x85, 0xd7, 0x3f, 0x0e, 0x8f, 0xcf, 0x9e, 0xc0, 0xbe, 0xbf,
	0xac, 0x65, 0xb7, 0x58, 0xef, 0xb7, 0x56, 0xec, 0x31, 0xec, 0x99, 0x56, 0xe3, 0x25, 0xad, 0x94,
	0x8a, 0x28, 0x82, 0x3b, 0x6f, 0xac, 0xfa, 0x4e, 0x2b, 0xa4, 0x22, 0x0a, 0xf6, 0x16, 0xee, 0xcf,
	0xcf, 0x4d, 0xe3, 0x4d, 0x4b, 0x3f, 0xc6, 0x71, 0x94, 0x1c, 0xe4, 0x53, 0x56, 0x86, 0x5f, 0x2d,
	0xab, 0x8d, 0x4a, 0xbd, 0x23, 0xb6, 0x48, 0xf6, 0x02, 0xf6, 0xd0, 0xa9, 0xe9, 0x84, 0x9f, 0x52,
	0x4b, 0x1e, 0x5b, 0x8e, 0xc5, 0xd1, 0x74, 0x52, 0xef, 0x88, 0x58, 0x63, 0xaf, 0x61, 0xa0, 0x63,
	0x9e, 0xfc, 0xd7, 0x80, 0xb8, 0x61, 0xe4, 0xd6, 0x29, 0xd7, 0x89, 0xe8, 0x01, 0x76, 0x08, 0xb0,
	0xba, 0x4e, 0x80, 0xff, 0x8e, 0xf8, 0xa3, 0x88, 0xdf, 0x44, 0x53, 0x27, 0x62, 0x03, 0x63, 0x13,
	0xc8, 0x64, 0x7f, 0x5f, 0xfc, 0x4f, 0xec, 0x79, 0x18, 0x7b, 0xae, 0xef, 0xae, 0x4e, 0xc4, 0x0d,
	0x54, 0x0d, 0x21, 0xa7, 0xdb, 0xfd, 0x44, 0x41, 0x55, 0x39, 0x64, 0x24, 0x3f, 0x5f, 0x2d, 0xb1,
	0x7a, 0xfe, 0xf5, 0x99, 0xb2, 0x1a, 0xa9, 0x9f, 0xee, 0x57, 0xd9, 0xa6, 0x34, 0x76, 0x1c, 0xf4,
	0x98, 0x8c, 0xf9, 0x3e, 0x7d, 0x0e, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x55, 0xb6, 0xa8, 0xed,
	0x0d, 0x03, 0x00, 0x00,
}
