// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import datastore "vega/datastore"
import mock "github.com/stretchr/testify/mock"

// OrderStore is an autogenerated mock type for the OrderStore type
type OrderStore struct {
	mock.Mock
}

// Delete provides a mock function with given fields: r
func (_m *OrderStore) Delete(r datastore.Order) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(datastore.Order) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: market, id
func (_m *OrderStore) Get(market string, id string) (datastore.Order, error) {
	ret := _m.Called(market, id)

	var r0 datastore.Order
	if rf, ok := ret.Get(0).(func(string, string) datastore.Order); ok {
		r0 = rf(market, id)
	} else {
		r0 = ret.Get(0).(datastore.Order)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(market, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: market, party, params
func (_m *OrderStore) GetAll(market string, party string, params datastore.GetParams) ([]datastore.Order, error) {
	ret := _m.Called(market, party, params)

	var r0 []datastore.Order
	if rf, ok := ret.Get(0).(func(string, string, datastore.GetParams) []datastore.Order); ok {
		r0 = rf(market, party, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]datastore.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, datastore.GetParams) error); ok {
		r1 = rf(market, party, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Post provides a mock function with given fields: r
func (_m *OrderStore) Post(r datastore.Order) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(datastore.Order) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Put provides a mock function with given fields: r
func (_m *OrderStore) Put(r datastore.Order) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(datastore.Order) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
