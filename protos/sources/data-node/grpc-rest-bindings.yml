---
type: google.api.Service
config_version: 3

name: datanode.api.v1.trading
title: Vega Trading API

apis:
  - name: TradingProxyService
  - name: TradingDataService

http:
  rules:
    # Markets
    - selector: datanode.api.v1.TradingDataService.Markets
      get: "/markets"
    - selector: datanode.api.v1.TradingDataService.MarketByID
      get: "/markets/{market_id}"
    - selector: datanode.api.v1.TradingDataService.Candles
      get: "/markets/{market_id}/candles"
    - selector: datanode.api.v1.TradingDataService.MarketDepth
      get: "/markets/{market_id}/depth"
    - selector: datanode.api.v1.TradingDataService.OrdersByMarket
      get: "/markets/{market_id}/orders"
    - selector: datanode.api.v1.TradingDataService.OrderByMarketAndID
      get: "/markets/{market_id}/orders/{order_id}"
    - selector: datanode.api.v1.TradingDataService.TradesByMarket
      get: "/markets/{market_id}/trades"
    - selector: datanode.api.v1.TradingDataService.LastTrade
      get: "/markets/{market_id}/trades/latest"
    - selector: datanode.api.v1.TradingDataService.MarketAccounts
      get: "/markets/{market_id}/accounts"

    # assets
    - selector: datanode.api.v1.TradingDataService.Assets
      get: "/assets"
    - selector: datanode.api.v1.TradingDataService.AssetByID
      get: "/assets/{id}"
    - selector: datanode.api.v1.TradingDataService.FeeInfrastructureAccounts
      get: "/assets/{asset}/infrastructureFeeAccount"
    - selector: datanode.api.v1.TradingDataService.GlobalRewardPoolAccounts
      get: "/assets/{asset}/globalRewardPoolAccount"

    # MarketData
    - selector: datanode.api.v1.TradingDataService.MarketsData
      get: "/markets-data"
    - selector: datanode.api.v1.TradingDataService.MarketDataByID
      get: "/markets-data/{market_id}"

    # Orders
    - selector: datanode.api.v1.TradingDataService.OrderByReference
      get: "/orders/{reference}"
    - selector: datanode.api.v1.TradingDataService.OrderVersionsByID
      get: "/orders/{order_id}/versions"
    - selector: datanode.api.v1.TradingDataService.TradesByOrder
      get: "/orders/{order_id}/trades"

    # Fee
    - selector: datanode.api.v1.TradingDataService.EstimateFee
      post: "/orders/fee/estimate"
      body: "*"

    # Margins
    - selector: datanode.api.v1.TradingDataService.EstimateMargin
      post: "/orders/margins/estimate"
      body: "*"

      # Network parameters
    - selector: datanode.api.v1.TradingDataService.NetworkParameters
      get: "/network/parameters"

    # Parties
    - selector: datanode.api.v1.TradingDataService.Parties
      get: "/parties"
    - selector: datanode.api.v1.TradingDataService.PartyByID
      get: "/parties/{party_id}"
    - selector: datanode.api.v1.TradingDataService.OrdersByParty
      get: "/parties/{party_id}/orders"
    - selector: datanode.api.v1.TradingDataService.PositionsByParty
      get: "/parties/{party_id}/positions"
    - selector: datanode.api.v1.TradingDataService.TradesByParty
      get: "/parties/{party_id}/trades"
    - selector: datanode.api.v1.TradingDataService.PartyAccounts
      get: "/parties/{party_id}/accounts"
    - selector: datanode.api.v1.TradingDataService.MarginLevels
      get: "/parties/{party_id}/markets/{market_id}/margin"
    - selector: datanode.api.v1.TradingDataService.GetRewards
      get: "/parties/{party_id}/rewards"
    - selector: datanode.api.v1.TradingDataService.PartyStake
      get: "/parties/{party}/stake"

    # governance stuff by party
    - selector: datanode.api.v1.TradingDataService.GetProposalsByParty
      get: "/parties/{party_id}/proposals"
    - selector: datanode.api.v1.TradingDataService.GetVotesByParty
      get: "/parties/{party_id}/votes"

    # withdrawals
    - selector: datanode.api.v1.TradingDataService.Withdrawal
      get: "/withdrawals/{id}"
    - selector: datanode.api.v1.TradingDataService.Withdrawals
      get: "/withdrawals/party/{party_id}"
    - selector: datanode.api.v1.TradingDataService.ERC20WithdrawalApproval
      get: "/withdrawals/{withdrawal_id}/approval/erc20"

    # deposits
    - selector: datanode.api.v1.TradingDataService.Deposit
      get: "/deposits/{id}"
    - selector: datanode.api.v1.TradingDataService.Deposits
      get: "/parties/{party_id}/deposits"

    # Governance queries
    - selector: datanode.api.v1.TradingDataService.GetProposalByID
      get: "/governance/proposal/{proposal_id}"
    - selector: datanode.api.v1.TradingDataService.GetProposalByReference
      get: "/governance/proposal/reference/{reference}"
    - selector: datanode.api.v1.TradingDataService.GetNewMarketProposals
      get: "/governance/market/proposals"
    - selector: datanode.api.v1.TradingDataService.GetNewAssetProposals
      get: "/governance/asset/proposals"
    - selector: datanode.api.v1.TradingDataService.GetProposals
      get: "/governance/proposals"

    # LiquidityProvision
    - selector: datanode.api.v1.TradingDataService.LiquidityProvisions
      get: "/liquidity-provisions/party/{party}/market/{market}"
    - selector: datanode.api.v1.TradingDataService.LiquidityProvisions
      get: "/liquidity-provisions/market/{market}"

    # Miscellaneous
    - selector: datanode.api.v1.TradingDataService.GetVegaTime
      get: "/time"

    # oracles
    - selector: datanode.api.v1.TradingDataService.OracleSpec
      get: "/oracle-specs/{id}"
    - selector: datanode.api.v1.TradingDataService.OracleDataBySpec
      get: "/oracle-specs/{id}/oracle-data"
    - selector: datanode.api.v1.TradingDataService.OracleSpecs
      get: "/oracle-specs"
    - selector: datanode.api.v1.TradingDataService.ListOracleData
      get: '/oracle-data'

    # Nodes
    - selector: datanode.api.v1.TradingDataService.GetNodeData
      get: "/nodes-data"
    - selector: datanode.api.v1.TradingDataService.GetNodes
      get: "/nodes"
    - selector: datanode.api.v1.TradingDataService.GetNodeByID
      get: "/nodes/{id}"

    # Epochs
    - selector: datanode.api.v1.TradingDataService.GetEpoch
      get: "/epochs/{id}"
    - selector: datanode.api.v1.TradingDataService.GetEpoch
      get: "/epochs"

    # Delegations
    - selector: datanode.api.v1.TradingDataService.Delegations
      get: "/delegations"

    # Key rotations
    - selector: datanode.api.v1.TradingDataService.GetKeyRotations
      get: "/key-rotations"

    # Transfers
    - selector: datanode.api.v1.TradingDataService.Transfers
      get: "/transfers"

    # Transfers
    - selector: datanode.api.v2.TradingDataService.Info
      get: "/api/v2/info"
