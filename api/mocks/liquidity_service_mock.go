// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/api (interfaces: LiquidityService)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto/gen/golang"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLiquidityService is a mock of LiquidityService interface
type MockLiquidityService struct {
	ctrl     *gomock.Controller
	recorder *MockLiquidityServiceMockRecorder
}

// MockLiquidityServiceMockRecorder is the mock recorder for MockLiquidityService
type MockLiquidityServiceMockRecorder struct {
	mock *MockLiquidityService
}

// NewMockLiquidityService creates a new mock instance
func NewMockLiquidityService(ctrl *gomock.Controller) *MockLiquidityService {
	mock := &MockLiquidityService{ctrl: ctrl}
	mock.recorder = &MockLiquidityServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLiquidityService) EXPECT() *MockLiquidityServiceMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockLiquidityService) Get(arg0, arg1 string) ([]proto.LiquidityProvision, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].([]proto.LiquidityProvision)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockLiquidityServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockLiquidityService)(nil).Get), arg0, arg1)
}

// PrepareLiquidityProvisionSubmission mocks base method
func (m *MockLiquidityService) PrepareLiquidityProvisionSubmission(arg0 context.Context, arg1 *proto.LiquidityProvisionSubmission) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareLiquidityProvisionSubmission", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PrepareLiquidityProvisionSubmission indicates an expected call of PrepareLiquidityProvisionSubmission
func (mr *MockLiquidityServiceMockRecorder) PrepareLiquidityProvisionSubmission(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareLiquidityProvisionSubmission", reflect.TypeOf((*MockLiquidityService)(nil).PrepareLiquidityProvisionSubmission), arg0, arg1)
}
