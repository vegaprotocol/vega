// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/positions/proto/positions.proto

package api

import (
	proto1 "code.vegaprotocol.io/vega/proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PositionsByPartyRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsByPartyRequest) Reset()         { *m = PositionsByPartyRequest{} }
func (m *PositionsByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyRequest) ProtoMessage()    {}
func (*PositionsByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_adb0b1282838828f, []int{0}
}

func (m *PositionsByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyRequest.Unmarshal(m, b)
}
func (m *PositionsByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyRequest.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyRequest.Merge(m, src)
}
func (m *PositionsByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyRequest.Size(m)
}
func (m *PositionsByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyRequest proto.InternalMessageInfo

func (m *PositionsByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *PositionsByPartyRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type PositionsSubscribeRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsSubscribeRequest) Reset()         { *m = PositionsSubscribeRequest{} }
func (m *PositionsSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsSubscribeRequest) ProtoMessage()    {}
func (*PositionsSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_adb0b1282838828f, []int{1}
}

func (m *PositionsSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsSubscribeRequest.Unmarshal(m, b)
}
func (m *PositionsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *PositionsSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsSubscribeRequest.Merge(m, src)
}
func (m *PositionsSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsSubscribeRequest.Size(m)
}
func (m *PositionsSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsSubscribeRequest proto.InternalMessageInfo

func (m *PositionsSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type PositionsByPartyResponse struct {
	Positions            []*proto1.MarketPosition `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PositionsByPartyResponse) Reset()         { *m = PositionsByPartyResponse{} }
func (m *PositionsByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyResponse) ProtoMessage()    {}
func (*PositionsByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_adb0b1282838828f, []int{2}
}

func (m *PositionsByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyResponse.Unmarshal(m, b)
}
func (m *PositionsByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyResponse.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyResponse.Merge(m, src)
}
func (m *PositionsByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyResponse.Size(m)
}
func (m *PositionsByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyResponse proto.InternalMessageInfo

func (m *PositionsByPartyResponse) GetPositions() []*proto1.MarketPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

func init() {
	proto.RegisterType((*PositionsByPartyRequest)(nil), "api.PositionsByPartyRequest")
	proto.RegisterType((*PositionsSubscribeRequest)(nil), "api.PositionsSubscribeRequest")
	proto.RegisterType((*PositionsByPartyResponse)(nil), "api.PositionsByPartyResponse")
}

func init() {
	proto.RegisterFile("plugins/positions/proto/positions.proto", fileDescriptor_adb0b1282838828f)
}

var fileDescriptor_adb0b1282838828f = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x65, 0x5a, 0xe8, 0xf7, 0x75, 0xdc, 0x94, 0x41, 0x30, 0x06, 0x7f, 0x42, 0x44, 0xec, 0xa6,
	0x13, 0x89, 0xe8, 0x03, 0x84, 0x6e, 0x0a, 0xfe, 0x94, 0xb8, 0x10, 0xdc, 0x4d, 0xd2, 0x21, 0x0e,
	0x4d, 0x7a, 0xc7, 0xcc, 0xa4, 0xa5, 0xaf, 0xe4, 0x4b, 0x09, 0x3e, 0x89, 0x64, 0xd2, 0xa4, 0x9a,
	0xda, 0xdd, 0x3d, 0x73, 0xee, 0x39, 0xf7, 0x6f, 0xf0, 0x95, 0x4c, 0x8b, 0x44, 0x2c, 0x94, 0x27,
	0x41, 0x09, 0x2d, 0xa0, 0x8c, 0x72, 0xd0, 0xb0, 0xc5, 0xd4, 0x60, 0xd2, 0x65, 0x52, 0xd8, 0x83,
	0x8a, 0x5b, 0xf2, 0x84, 0x55, 0xcf, 0xf6, 0x5d, 0x22, 0xf4, 0x5b, 0x11, 0xd1, 0x18, 0x32, 0x2f,
	0x5b, 0x09, 0x3d, 0x87, 0x95, 0x97, 0xc0, 0xc8, 0x90, 0xa3, 0x25, 0x4b, 0xc5, 0x8c, 0x69, 0xc8,
	0x95, 0xd7, 0x84, 0x95, 0xce, 0x7d, 0xc1, 0x47, 0xd3, 0xba, 0x42, 0xb0, 0x9e, 0xb2, 0x5c, 0xaf,
	0x43, 0xfe, 0x5e, 0x70, 0xa5, 0x89, 0x83, 0xff, 0xc9, 0x12, 0x4f, 0xc6, 0x16, 0x72, 0xd0, 0xb0,
	0x1f, 0xf4, 0xbe, 0x3e, 0xcf, 0x3b, 0x0e, 0x0a, 0xeb, 0x67, 0x62, 0xe3, 0xff, 0x19, 0xcb, 0xe7,
	0x5c, 0x4f, 0xc6, 0x56, 0xa7, 0x4c, 0x09, 0x1b, 0xec, 0xde, 0xe2, 0xe3, 0xc6, 0xf8, 0xb9, 0x88,
	0x54, 0x9c, 0x8b, 0x88, 0xd7, 0xd6, 0x56, 0xcb, 0xba, 0xb1, 0x74, 0x1f, 0xb1, 0xb5, 0xdb, 0x8f,
	0x92, 0xb0, 0x50, 0x9c, 0xf8, 0xb8, 0xdf, 0x6c, 0xc3, 0x42, 0x4e, 0x77, 0x78, 0xe0, 0x1f, 0x52,
	0xb3, 0x83, 0x07, 0x53, 0xb5, 0x16, 0x86, 0xdb, 0x34, 0xff, 0x03, 0xfd, 0x10, 0x91, 0x27, 0x3c,
	0x68, 0xbb, 0x93, 0x13, 0xca, 0xa4, 0xa0, 0x7b, 0x96, 0x60, 0x9f, 0xee, 0x61, 0x37, 0x2d, 0xdd,
	0x63, 0xb2, 0x3b, 0x25, 0x39, 0xfb, 0x2d, 0x6a, 0x8f, 0x6f, 0xff, 0xd9, 0xf5, 0x35, 0x0a, 0x2e,
	0x5f, 0x2f, 0x62, 0x98, 0x71, 0xc3, 0x9a, 0xf3, 0xc4, 0x90, 0x52, 0x51, 0xdd, 0x79, 0xf3, 0x1d,
	0x98, 0x14, 0x51, 0xcf, 0x84, 0x37, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xed, 0x3c, 0x61, 0x2d,
	0x34, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PositionsClient is the client API for Positions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PositionsClient interface {
	PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error)
	// streams
	PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (Positions_PositionsSubscribeClient, error)
}

type positionsClient struct {
	cc *grpc.ClientConn
}

func NewPositionsClient(cc *grpc.ClientConn) PositionsClient {
	return &positionsClient{cc}
}

func (c *positionsClient) PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error) {
	out := new(PositionsByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.positions/PositionsByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionsClient) PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (Positions_PositionsSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Positions_serviceDesc.Streams[0], "/api.positions/PositionsSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &positionsPositionsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Positions_PositionsSubscribeClient interface {
	Recv() (*proto1.MarketPosition, error)
	grpc.ClientStream
}

type positionsPositionsSubscribeClient struct {
	grpc.ClientStream
}

func (x *positionsPositionsSubscribeClient) Recv() (*proto1.MarketPosition, error) {
	m := new(proto1.MarketPosition)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PositionsServer is the server API for Positions service.
type PositionsServer interface {
	PositionsByParty(context.Context, *PositionsByPartyRequest) (*PositionsByPartyResponse, error)
	// streams
	PositionsSubscribe(*PositionsSubscribeRequest, Positions_PositionsSubscribeServer) error
}

func RegisterPositionsServer(s *grpc.Server, srv PositionsServer) {
	s.RegisterService(&_Positions_serviceDesc, srv)
}

func _Positions_PositionsByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionsByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionsServer).PositionsByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.positions/PositionsByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionsServer).PositionsByParty(ctx, req.(*PositionsByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Positions_PositionsSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PositionsSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PositionsServer).PositionsSubscribe(m, &positionsPositionsSubscribeServer{stream})
}

type Positions_PositionsSubscribeServer interface {
	Send(*proto1.MarketPosition) error
	grpc.ServerStream
}

type positionsPositionsSubscribeServer struct {
	grpc.ServerStream
}

func (x *positionsPositionsSubscribeServer) Send(m *proto1.MarketPosition) error {
	return x.ServerStream.SendMsg(m)
}

var _Positions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.positions",
	HandlerType: (*PositionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PositionsByParty",
			Handler:    _Positions_PositionsByParty_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PositionsSubscribe",
			Handler:       _Positions_PositionsSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "plugins/positions/proto/positions.proto",
}
