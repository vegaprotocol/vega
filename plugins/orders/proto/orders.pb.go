// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/orders/proto/orders.proto

package proto

import (
	proto1 "code.vegaprotocol.io/vega/proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrdersByPartyRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersByPartyRequest) Reset()         { *m = OrdersByPartyRequest{} }
func (m *OrdersByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyRequest) ProtoMessage()    {}
func (*OrdersByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_812730c69be5f60a, []int{0}
}

func (m *OrdersByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyRequest.Unmarshal(m, b)
}
func (m *OrdersByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyRequest.Merge(m, src)
}
func (m *OrdersByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyRequest.Size(m)
}
func (m *OrdersByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyRequest proto.InternalMessageInfo

func (m *OrdersByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type OrdersByPartyResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyResponse) Reset()         { *m = OrdersByPartyResponse{} }
func (m *OrdersByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyResponse) ProtoMessage()    {}
func (*OrdersByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_812730c69be5f60a, []int{1}
}

func (m *OrdersByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyResponse.Unmarshal(m, b)
}
func (m *OrdersByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyResponse.Merge(m, src)
}
func (m *OrdersByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyResponse.Size(m)
}
func (m *OrdersByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyResponse proto.InternalMessageInfo

func (m *OrdersByPartyResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrdersByPartyAndMarketRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersByPartyAndMarketRequest) Reset()         { *m = OrdersByPartyAndMarketRequest{} }
func (m *OrdersByPartyAndMarketRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyAndMarketRequest) ProtoMessage()    {}
func (*OrdersByPartyAndMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_812730c69be5f60a, []int{2}
}

func (m *OrdersByPartyAndMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyAndMarketRequest.Unmarshal(m, b)
}
func (m *OrdersByPartyAndMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyAndMarketRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyAndMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyAndMarketRequest.Merge(m, src)
}
func (m *OrdersByPartyAndMarketRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyAndMarketRequest.Size(m)
}
func (m *OrdersByPartyAndMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyAndMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyAndMarketRequest proto.InternalMessageInfo

func (m *OrdersByPartyAndMarketRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrdersByPartyAndMarketRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type OrdersByPartyAndMarketResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyAndMarketResponse) Reset()         { *m = OrdersByPartyAndMarketResponse{} }
func (m *OrdersByPartyAndMarketResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyAndMarketResponse) ProtoMessage()    {}
func (*OrdersByPartyAndMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_812730c69be5f60a, []int{3}
}

func (m *OrdersByPartyAndMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyAndMarketResponse.Unmarshal(m, b)
}
func (m *OrdersByPartyAndMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyAndMarketResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyAndMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyAndMarketResponse.Merge(m, src)
}
func (m *OrdersByPartyAndMarketResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyAndMarketResponse.Size(m)
}
func (m *OrdersByPartyAndMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyAndMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyAndMarketResponse proto.InternalMessageInfo

func (m *OrdersByPartyAndMarketResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderByIDRequest struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByIDRequest) Reset()         { *m = OrderByIDRequest{} }
func (m *OrderByIDRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByIDRequest) ProtoMessage()    {}
func (*OrderByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_812730c69be5f60a, []int{4}
}

func (m *OrderByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByIDRequest.Unmarshal(m, b)
}
func (m *OrderByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByIDRequest.Marshal(b, m, deterministic)
}
func (m *OrderByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByIDRequest.Merge(m, src)
}
func (m *OrderByIDRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByIDRequest.Size(m)
}
func (m *OrderByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByIDRequest proto.InternalMessageInfo

func (m *OrderByIDRequest) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

type OrderByIDResponse struct {
	Order                *proto1.Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderByIDResponse) Reset()         { *m = OrderByIDResponse{} }
func (m *OrderByIDResponse) String() string { return proto.CompactTextString(m) }
func (*OrderByIDResponse) ProtoMessage()    {}
func (*OrderByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_812730c69be5f60a, []int{5}
}

func (m *OrderByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByIDResponse.Unmarshal(m, b)
}
func (m *OrderByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByIDResponse.Marshal(b, m, deterministic)
}
func (m *OrderByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByIDResponse.Merge(m, src)
}
func (m *OrderByIDResponse) XXX_Size() int {
	return xxx_messageInfo_OrderByIDResponse.Size(m)
}
func (m *OrderByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByIDResponse proto.InternalMessageInfo

func (m *OrderByIDResponse) GetOrder() *proto1.Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func init() {
	proto.RegisterType((*OrdersByPartyRequest)(nil), "orders.OrdersByPartyRequest")
	proto.RegisterType((*OrdersByPartyResponse)(nil), "orders.OrdersByPartyResponse")
	proto.RegisterType((*OrdersByPartyAndMarketRequest)(nil), "orders.OrdersByPartyAndMarketRequest")
	proto.RegisterType((*OrdersByPartyAndMarketResponse)(nil), "orders.OrdersByPartyAndMarketResponse")
	proto.RegisterType((*OrderByIDRequest)(nil), "orders.OrderByIDRequest")
	proto.RegisterType((*OrderByIDResponse)(nil), "orders.OrderByIDResponse")
}

func init() { proto.RegisterFile("plugins/orders/proto/orders.proto", fileDescriptor_812730c69be5f60a) }

var fileDescriptor_812730c69be5f60a = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0xc5, 0x6a, 0xa7, 0x08, 0x75, 0x51, 0x89, 0xc1, 0x4a, 0xbb, 0xa2, 0xf4, 0x20,
	0x49, 0xa9, 0xe0, 0xc9, 0x8b, 0x31, 0x1e, 0x72, 0xf0, 0x0f, 0x01, 0x2f, 0xde, 0x62, 0xb3, 0x94,
	0x60, 0xcd, 0xc6, 0x4d, 0x2a, 0xe4, 0x33, 0xf8, 0xa5, 0xc5, 0xd9, 0x6d, 0x4c, 0xc2, 0x96, 0xd2,
	0x53, 0x78, 0xf9, 0xcd, 0xec, 0x7b, 0xcc, 0x0c, 0x0c, 0xd3, 0xf9, 0x62, 0x16, 0x27, 0x99, 0xc3,
	0x45, 0xc4, 0x44, 0xe6, 0xa4, 0x82, 0xe7, 0x5c, 0x09, 0x1b, 0x05, 0x69, 0x4b, 0x65, 0xf5, 0x24,
	0xfb, 0x66, 0xb3, 0x50, 0x12, 0x3a, 0x86, 0xc3, 0x67, 0x64, 0x6e, 0xf1, 0x12, 0x8a, 0xbc, 0x08,
	0xd8, 0xd7, 0x82, 0x65, 0x39, 0x31, 0x61, 0x37, 0xfd, 0xd3, 0xbe, 0x67, 0x1a, 0x03, 0x63, 0xd4,
	0x09, 0x96, 0x92, 0xde, 0xc2, 0x51, 0xa3, 0x23, 0x4b, 0x79, 0x92, 0x31, 0x72, 0x0e, 0xca, 0xc6,
	0x34, 0x06, 0xdb, 0xa3, 0xee, 0xa4, 0x6b, 0xa3, 0x0f, 0x16, 0x07, 0x0a, 0xd1, 0x57, 0xe8, 0xd7,
	0xba, 0xef, 0x92, 0xe8, 0x31, 0x14, 0x1f, 0x2c, 0x5f, 0x6b, 0x4c, 0x2c, 0xd8, 0xfb, 0xc4, 0x52,
	0xdf, 0x33, 0x5b, 0x88, 0x4a, 0x4d, 0x1f, 0xe0, 0x6c, 0xd5, 0xb3, 0x9b, 0xa4, 0xbb, 0x82, 0x1e,
	0xfe, 0x70, 0x0b, 0xdf, 0xab, 0x04, 0x42, 0xfa, 0x1f, 0x48, 0x49, 0x7a, 0x03, 0x07, 0x95, 0x6a,
	0xe5, 0x33, 0x84, 0x1d, 0xe4, 0x58, 0xdc, 0xb0, 0x91, 0x64, 0xf2, 0xd3, 0x02, 0x90, 0x69, 0xef,
	0xb9, 0x60, 0xe4, 0x09, 0xf6, 0x6b, 0xd9, 0xc9, 0xa9, 0xad, 0x96, 0xa7, 0xdb, 0x8c, 0xd5, 0x5f,
	0x41, 0xa5, 0x3f, 0xdd, 0x22, 0x31, 0x1c, 0xeb, 0x67, 0x41, 0x2e, 0xb4, 0xad, 0xcd, 0x15, 0x58,
	0x97, 0xeb, 0xca, 0x4a, 0x2b, 0x17, 0x3a, 0xe5, 0x04, 0x88, 0x59, 0x6b, 0xab, 0x8c, 0xd0, 0x3a,
	0xd1, 0x90, 0xe5, 0x1b, 0xee, 0xf8, 0xcd, 0x9e, 0xf2, 0x88, 0xe1, 0x9c, 0xf0, 0x26, 0xa7, 0x7c,
	0x6e, 0xc7, 0xf2, 0x48, 0x1d, 0xdd, 0x69, 0xbf, 0xb7, 0xf1, 0x73, 0xfd, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0x16, 0xff, 0x61, 0xf9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrdersCoreClient is the client API for OrdersCore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersCoreClient interface {
	// List orders on the book, for all markets, for a party.
	OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error)
	// List orders on the book, for a particular market.
	OrdersByPartyAndMarket(ctx context.Context, in *OrdersByPartyAndMarketRequest, opts ...grpc.CallOption) (*OrdersByPartyAndMarketResponse, error)
	// Retrieve an order, if its on the book, for a particular order identifier.
	OrderByID(ctx context.Context, in *OrderByIDRequest, opts ...grpc.CallOption) (*OrderByIDResponse, error)
}

type ordersCoreClient struct {
	cc *grpc.ClientConn
}

func NewOrdersCoreClient(cc *grpc.ClientConn) OrdersCoreClient {
	return &ordersCoreClient{cc}
}

func (c *ordersCoreClient) OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error) {
	out := new(OrdersByPartyResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersCore/OrdersByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersCoreClient) OrdersByPartyAndMarket(ctx context.Context, in *OrdersByPartyAndMarketRequest, opts ...grpc.CallOption) (*OrdersByPartyAndMarketResponse, error) {
	out := new(OrdersByPartyAndMarketResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersCore/OrdersByPartyAndMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersCoreClient) OrderByID(ctx context.Context, in *OrderByIDRequest, opts ...grpc.CallOption) (*OrderByIDResponse, error) {
	out := new(OrderByIDResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersCore/OrderByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersCoreServer is the server API for OrdersCore service.
type OrdersCoreServer interface {
	// List orders on the book, for all markets, for a party.
	OrdersByParty(context.Context, *OrdersByPartyRequest) (*OrdersByPartyResponse, error)
	// List orders on the book, for a particular market.
	OrdersByPartyAndMarket(context.Context, *OrdersByPartyAndMarketRequest) (*OrdersByPartyAndMarketResponse, error)
	// Retrieve an order, if its on the book, for a particular order identifier.
	OrderByID(context.Context, *OrderByIDRequest) (*OrderByIDResponse, error)
}

func RegisterOrdersCoreServer(s *grpc.Server, srv OrdersCoreServer) {
	s.RegisterService(&_OrdersCore_serviceDesc, srv)
}

func _OrdersCore_OrdersByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersCoreServer).OrdersByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersCore/OrdersByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersCoreServer).OrdersByParty(ctx, req.(*OrdersByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersCore_OrdersByPartyAndMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByPartyAndMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersCoreServer).OrdersByPartyAndMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersCore/OrdersByPartyAndMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersCoreServer).OrdersByPartyAndMarket(ctx, req.(*OrdersByPartyAndMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersCore_OrderByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersCoreServer).OrderByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersCore/OrderByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersCoreServer).OrderByID(ctx, req.(*OrderByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrdersCore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orders.OrdersCore",
	HandlerType: (*OrdersCoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OrdersByParty",
			Handler:    _OrdersCore_OrdersByParty_Handler,
		},
		{
			MethodName: "OrdersByPartyAndMarket",
			Handler:    _OrdersCore_OrdersByPartyAndMarket_Handler,
		},
		{
			MethodName: "OrderByID",
			Handler:    _OrdersCore_OrderByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugins/orders/proto/orders.proto",
}
