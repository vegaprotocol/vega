// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/validators (interfaces: BlockchainClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	types "github.com/tendermint/tendermint/rpc/core/types"
	types0 "github.com/tendermint/tendermint/types"
	reflect "reflect"
)

// MockBlockchainClient is a mock of BlockchainClient interface
type MockBlockchainClient struct {
	ctrl     *gomock.Controller
	recorder *MockBlockchainClientMockRecorder
}

// MockBlockchainClientMockRecorder is the mock recorder for MockBlockchainClient
type MockBlockchainClientMockRecorder struct {
	mock *MockBlockchainClient
}

// NewMockBlockchainClient creates a new mock instance
func NewMockBlockchainClient(ctrl *gomock.Controller) *MockBlockchainClient {
	mock := &MockBlockchainClient{ctrl: ctrl}
	mock.recorder = &MockBlockchainClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlockchainClient) EXPECT() *MockBlockchainClientMockRecorder {
	return m.recorder
}

// GenesisValidators mocks base method
func (m *MockBlockchainClient) GenesisValidators() ([]*types0.Validator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenesisValidators")
	ret0, _ := ret[0].([]*types0.Validator)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenesisValidators indicates an expected call of GenesisValidators
func (mr *MockBlockchainClientMockRecorder) GenesisValidators() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenesisValidators", reflect.TypeOf((*MockBlockchainClient)(nil).GenesisValidators))
}

// GetStatus mocks base method
func (m *MockBlockchainClient) GetStatus(arg0 context.Context) (*types.ResultStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatus", arg0)
	ret0, _ := ret[0].(*types.ResultStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatus indicates an expected call of GetStatus
func (mr *MockBlockchainClientMockRecorder) GetStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockBlockchainClient)(nil).GetStatus), arg0)
}

// Validators mocks base method
func (m *MockBlockchainClient) Validators() ([]*types0.Validator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validators")
	ret0, _ := ret[0].([]*types0.Validator)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validators indicates an expected call of Validators
func (mr *MockBlockchainClientMockRecorder) Validators() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validators", reflect.TypeOf((*MockBlockchainClient)(nil).Validators))
}
