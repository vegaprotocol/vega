// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/core/staking (interfaces: EthOnChainVerifier)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "code.vegaprotocol.io/vega/core/types"
	gomock "github.com/golang/mock/gomock"
)

// MockEthOnChainVerifier is a mock of EthOnChainVerifier interface.
type MockEthOnChainVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockEthOnChainVerifierMockRecorder
}

// MockEthOnChainVerifierMockRecorder is the mock recorder for MockEthOnChainVerifier.
type MockEthOnChainVerifierMockRecorder struct {
	mock *MockEthOnChainVerifier
}

// NewMockEthOnChainVerifier creates a new mock instance.
func NewMockEthOnChainVerifier(ctrl *gomock.Controller) *MockEthOnChainVerifier {
	mock := &MockEthOnChainVerifier{ctrl: ctrl}
	mock.recorder = &MockEthOnChainVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEthOnChainVerifier) EXPECT() *MockEthOnChainVerifierMockRecorder {
	return m.recorder
}

// CheckStakeDeposited mocks base method.
func (m *MockEthOnChainVerifier) CheckStakeDeposited(arg0 *types.StakeDeposited) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckStakeDeposited", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckStakeDeposited indicates an expected call of CheckStakeDeposited.
func (mr *MockEthOnChainVerifierMockRecorder) CheckStakeDeposited(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckStakeDeposited", reflect.TypeOf((*MockEthOnChainVerifier)(nil).CheckStakeDeposited), arg0)
}

// CheckStakeRemoved mocks base method.
func (m *MockEthOnChainVerifier) CheckStakeRemoved(arg0 *types.StakeRemoved) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckStakeRemoved", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckStakeRemoved indicates an expected call of CheckStakeRemoved.
func (mr *MockEthOnChainVerifierMockRecorder) CheckStakeRemoved(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckStakeRemoved", reflect.TypeOf((*MockEthOnChainVerifier)(nil).CheckStakeRemoved), arg0)
}
