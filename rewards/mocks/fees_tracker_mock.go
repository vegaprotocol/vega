// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/rewards (interfaces: FeesTracker)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	vega "code.vegaprotocol.io/protos/vega"
	types "code.vegaprotocol.io/vega/types"
	gomock "github.com/golang/mock/gomock"
)

// MockFeesTracker is a mock of FeesTracker interface.
type MockFeesTracker struct {
	ctrl     *gomock.Controller
	recorder *MockFeesTrackerMockRecorder
}

// MockFeesTrackerMockRecorder is the mock recorder for MockFeesTracker.
type MockFeesTrackerMockRecorder struct {
	mock *MockFeesTracker
}

// NewMockFeesTracker creates a new mock instance.
func NewMockFeesTracker(ctrl *gomock.Controller) *MockFeesTracker {
	mock := &MockFeesTracker{ctrl: ctrl}
	mock.recorder = &MockFeesTrackerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeesTracker) EXPECT() *MockFeesTrackerMockRecorder {
	return m.recorder
}

// GetFeePartyScores mocks base method.
func (m *MockFeesTracker) GetFeePartyScores(arg0 string, arg1 vega.TransferType) []*types.FeePartyScore {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFeePartyScores", arg0, arg1)
	ret0, _ := ret[0].([]*types.FeePartyScore)
	return ret0
}

// GetFeePartyScores indicates an expected call of GetFeePartyScores.
func (mr *MockFeesTrackerMockRecorder) GetFeePartyScores(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeePartyScores", reflect.TypeOf((*MockFeesTracker)(nil).GetFeePartyScores), arg0, arg1)
}
