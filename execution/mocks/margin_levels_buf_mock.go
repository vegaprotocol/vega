// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/execution (interfaces: MarginLevelsBuf)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMarginLevelsBuf is a mock of MarginLevelsBuf interface
type MockMarginLevelsBuf struct {
	ctrl     *gomock.Controller
	recorder *MockMarginLevelsBufMockRecorder
}

// MockMarginLevelsBufMockRecorder is the mock recorder for MockMarginLevelsBuf
type MockMarginLevelsBufMockRecorder struct {
	mock *MockMarginLevelsBuf
}

// NewMockMarginLevelsBuf creates a new mock instance
func NewMockMarginLevelsBuf(ctrl *gomock.Controller) *MockMarginLevelsBuf {
	mock := &MockMarginLevelsBuf{ctrl: ctrl}
	mock.recorder = &MockMarginLevelsBufMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMarginLevelsBuf) EXPECT() *MockMarginLevelsBufMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockMarginLevelsBuf) Add(arg0 proto.MarginLevels) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0)
}

// Add indicates an expected call of Add
func (mr *MockMarginLevelsBufMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockMarginLevelsBuf)(nil).Add), arg0)
}

// Flush mocks base method
func (m *MockMarginLevelsBuf) Flush() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Flush")
}

// Flush indicates an expected call of Flush
func (mr *MockMarginLevelsBufMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockMarginLevelsBuf)(nil).Flush))
}
