// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/api (interfaces: NodeSigsService)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNodeSigsService is a mock of NodeSigsService interface
type MockNodeSigsService struct {
	ctrl     *gomock.Controller
	recorder *MockNodeSigsServiceMockRecorder
}

// MockNodeSigsServiceMockRecorder is the mock recorder for MockNodeSigsService
type MockNodeSigsServiceMockRecorder struct {
	mock *MockNodeSigsService
}

// NewMockNodeSigsService creates a new mock instance
func NewMockNodeSigsService(ctrl *gomock.Controller) *MockNodeSigsService {
	mock := &MockNodeSigsService{ctrl: ctrl}
	mock.recorder = &MockNodeSigsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodeSigsService) EXPECT() *MockNodeSigsServiceMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockNodeSigsService) GetByID(arg0 string) ([]proto.NodeSignature, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].([]proto.NodeSignature)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockNodeSigsServiceMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockNodeSigsService)(nil).GetByID), arg0)
}
