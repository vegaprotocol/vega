---
schema: schema.graphql
exec:
  filename: generated.go
model:
  filename: models.go

skip_validation: true

models:
  String:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.Uint32
  ValidatorStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.ValidatorStatus
  LiquidityProvisionStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.LiquidityProvisionStatus
  ProposalType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.ProposalType
  Interval:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.Interval
  Side:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.Side
  TradeType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.TradeType
  OrderType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.OrderType
  MarketState:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.MarketState
  MarketTradingMode:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.MarketTradingMode
  ProposalRejectionReason:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.ProposalRejectionReason
  OrderRejectionReason:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.OrderRejectionReason
  StopOrderRejectionReason:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.StopOrderRejectionReason
  PeggedReference:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.PeggedReference
  OrderTimeInForce:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.OrderTimeInForce
  OrderStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.OrderStatus
  LiquidityFeeMethod:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.LiquidityFeeMethod
  DepositStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.DepositStatus
  WithdrawalStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.WithdrawalStatus
  StakeLinkingType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.StakeLinkingType
  StakeLinkingStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.StakeLinkingStatus
  TransferStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.TransferStatus
  TransferScope:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.TransferScope
  TransferType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.TransferType
  DispatchMetric:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.DispatchMetric
  NodeStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.NodeStatus
  AssetStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.AssetStatus
  NodeSignatureKind:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.NodeSignatureKind
  OracleSpecStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.OracleSpecStatus
  PropertyKeyType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.PropertyKeyType
  ConditionOperator:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.ConditionOperator
  ProposalState:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.ProposalState
  VoteValue:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.VoteValue
  AuctionTrigger:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.AuctionTrigger
  StopOrderStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.StopOrderStatus
  StopOrderExpiryStrategy:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.StopOrderExpiryStrategy
  StopOrderTriggerDirection:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.StopOrderTriggerDirection
  Order:
    model: code.vegaprotocol.io/vega/protos/vega.Order
  OrderUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.Order
  PaginatedOrder:
    model: code.vegaprotocol.io/vega/protos/vega.Order
  TradeUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.Trade
  Trade:
    model: code.vegaprotocol.io/vega/protos/vega.Trade
  PriceLevel:
    model: code.vegaprotocol.io/vega/protos/vega.PriceLevel
  MarketDepth:
    model: code.vegaprotocol.io/vega/protos/vega.MarketDepth
  ObservableMarketDepth:
    model: code.vegaprotocol.io/vega/protos/vega.MarketDepth
  MarketDepthUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.MarketDepthUpdate
  ObservableMarketDepthUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.MarketDepthUpdate
  Candle:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.Candle
  Position:
    model: code.vegaprotocol.io/vega/protos/vega.Position
  PositionUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.Position
  AccountEvent:
    model: code.vegaprotocol.io/vega/protos/vega.Account
  AccountBalance:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AccountBalance
  AccountDetails:
    model: code.vegaprotocol.io/vega/protos/vega.AccountDetails
  AccountUpdate:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AccountBalance
  PerpetualData:
    model: code.vegaprotocol.io/vega/protos/vega.PerpetualData
  MarketData:
    model: code.vegaprotocol.io/vega/protos/vega.MarketData
  ObservableMarketData:
    model: code.vegaprotocol.io/vega/protos/vega.MarketData
  MarginLevels:
    model: code.vegaprotocol.io/vega/protos/vega.MarginLevels
  MarginLevelsUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.MarginLevels
  MarginEstimate:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarginEstimate
  LiquidationPrice:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidationPrice
  LiquidationEstimate:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidationEstimate
  NodeSignature:
    model: code.vegaprotocol.io/vega/protos/vega/commands/v1.NodeSignature
  ProposalEvent:
    model: code.vegaprotocol.io/vega/protos/vega.Proposal
  RiskFactor:
    model: code.vegaprotocol.io/vega/protos/vega.RiskFactor
  NetworkParameter:
    model: code.vegaprotocol.io/vega/protos/vega.NetworkParameter
  LiquidityOrder:
    model: code.vegaprotocol.io/vega/protos/vega.LiquidityOrder
  LiquidityProvision:
    model: code.vegaprotocol.io/vega/protos/vega.LiquidityProvision
  LiquidityProvisionWithPending:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProvision
  LiquidityProvisionUpdate:
    model: code.vegaprotocol.io/vega/protos/vega.LiquidityProvision
  LiquidityOrderReference:
    model: code.vegaprotocol.io/vega/protos/vega.LiquidityOrderReference
  Future:
    model: code.vegaprotocol.io/vega/protos/vega.Future
  Spot:
    model: code.vegaprotocol.io/vega/protos/vega.Spot
  Perpetual:
    model: code.vegaprotocol.io/vega/protos/vega.Perpetual
  TradableInstrument:
    model: code.vegaprotocol.io/vega/protos/vega.TradableInstrument
  SimpleRiskModel:
    model: code.vegaprotocol.io/vega/protos/vega.SimpleRiskModel
  SimpleRiskModelParams:
    model: code.vegaprotocol.io/vega/protos/vega.SimpleModelParams
  LogNormalRiskModel:
    model: code.vegaprotocol.io/vega/protos/vega.LogNormalRiskModel
  LogNormalModelParams:
    model: code.vegaprotocol.io/vega/protos/vega.LogNormalModelParams
  Instrument:
    model: code.vegaprotocol.io/vega/protos/vega.Instrument
  InstrumentMetadata:
    model: code.vegaprotocol.io/vega/protos/vega.InstrumentMetadata
  SuccessorMarket:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.SuccessorMarket
  StopOrder:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.StopOrderEvent
  OrderSubmission:
    model: code.vegaprotocol.io/vega/protos/vega/commands/v1.OrderSubmission
  StopOrderEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.StopOrderEdge
  StopOrderConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.StopOrderConnection
  StopOrderFilter:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.StopOrderFilter
  Market:
    model: code.vegaprotocol.io/vega/protos/vega.Market
    fields:
      orders:
        resolver: true
      trades:
        resolver: true
      depth:
        resolver: true
      data:
        resolver: true
      candles:
        resolver: true
      accounts:
        resolver: true
      accountsConnection:
        resolver: true
      orderByReference:
        resolver: true
      liquidityProvisions:
        resolver: true
      fundingPeriods:
        resolver: true
  Party:
    model: code.vegaprotocol.io/vega/protos/vega.Party
    fields:
      orders:
        resolver: true
      trades:
        resolver: true
      tradesPaged:
        resolver: true
      positions:
        resolver: true
      accounts:
        resolver: true
      accountsConnection:
        resolver: true
      margins:
        resolver: true
      delegations:
        resolver: true
  Proposal:
    model: code.vegaprotocol.io/vega/protos/vega.GovernanceData
    fields:
      votes:
        resolver: true
  ProposalRationale:
    model: code.vegaprotocol.io/vega/protos/vega.ProposalRationale
  ProposalTerms:
    model: code.vegaprotocol.io/vega/protos/vega.ProposalTerms
  ProposalDetail:
    model: code.vegaprotocol.io/vega/protos/vega.Proposal
  NewMarket:
    model: code.vegaprotocol.io/vega/protos/vega.NewMarket
  UpdateMarket:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateMarket
  UpdateNetworkParameter:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateNetworkParameter
  NewAsset:
    model: code.vegaprotocol.io/vega/protos/vega.NewAsset
  UpdateAsset:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateAsset
  NewFreeform:
    model: code.vegaprotocol.io/vega/protos/vega.NewFreeform
  NewTransfer:
    model: code.vegaprotocol.io/vega/protos/vega.NewTransfer
  CancelTransfer:
    model: code.vegaprotocol.io/vega/protos/vega.CancelTransfer
  UpdateMarketState:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateMarketState
  NewSpotMarket:
    model: code.vegaprotocol.io/vega/protos/vega.NewSpotMarket
  UpdateSpotMarket:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateSpotMarket
  UpdateReferralProgram:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateReferralProgram
  UpdateVolumeDiscountProgram:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateVolumeDiscountProgram
  InstrumentConfiguration:
    model: code.vegaprotocol.io/vega/protos/vega.InstrumentConfiguration
  SuccessorConfiguration:
    model: code.vegaprotocol.io/vega/protos/vega.SuccessorConfiguration
  FutureProduct:
    model: code.vegaprotocol.io/vega/protos/vega.FutureProduct
  SpotProduct:
    model: code.vegaprotocol.io/vega/protos/vega.SpotProduct
  PerpetualProduct:
    model: code.vegaprotocol.io/vega/protos/vega.PerpetualProduct
  UpdateSpotMarketConfiguration:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateSpotMarketConfiguration
  LiquiditySLAParameters:
    model: code.vegaprotocol.io/vega/protos/vega.LiquiditySLAParameters
  LiquidationStrategy:
    model: code.vegaprotocol.io/vega/protos/vega.LiquidationStrategy
  LiquidityFeeSettings:
    model: code.vegaprotocol.io/vega/protos/vega.LiquidityFeeSettings
  Asset:
    model: code.vegaprotocol.io/vega/protos/vega.Asset
    fields:
      infrastructureFeeAccount:
        resolver: true
  Deposit:
    model: code.vegaprotocol.io/vega/protos/vega.Deposit
  Withdrawal:
    model: code.vegaprotocol.io/vega/protos/vega.Withdrawal
    fields:
      txHash:
        resolver: true
  PeggedOrder:
    model: code.vegaprotocol.io/vega/protos/vega.PeggedOrder
  IcebergOrder:
    model: code.vegaprotocol.io/vega/protos/vega.IcebergOrder
  DataSourceSpecToFutureBinding:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceSpecToFutureBinding
  DataSourceSpecPerpetualBinding:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceSpecToPerpetualBinding
  DataSourceDefinition:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceDefinition
  DataSourceDefinitionExternal:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceDefinitionExternal
  DataSourceDefinitionInternal:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceDefinitionInternal
  DataSourceSpecConfiguration:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceSpecConfiguration
  EthCallSpec:
    model: code.vegaprotocol.io/vega/protos/vega.EthCallSpec
  DataSourceSpecConfigurationTime:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceSpecConfigurationTime
  DataSourceSpecConfigurationTimeTrigger:
    model: code.vegaprotocol.io/vega/protos/vega.DataSourceSpecConfigurationTimeTrigger
  InternalTimeTrigger:
    model: code.vegaprotocol.io/vega/protos/vega/data/v1.InternalTimeTrigger
  OracleSpec:
    model: code.vegaprotocol.io/vega/protos/vega.OracleSpec
  OracleData:
    model: code.vegaprotocol.io/vega/protos/vega.OracleData
    fields:
      broadcastAt:
        resolver: true
  Property:
    model: code.vegaprotocol.io/vega/protos/vega/data/v1.Property
  AuctionEvent:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.AuctionEvent
  FeeFactors:
    model: code.vegaprotocol.io/vega/protos/vega.FeeFactors
  Fees:
    model: code.vegaprotocol.io/vega/protos/vega.Fees
  ScalingFactors:
    model: code.vegaprotocol.io/vega/protos/vega.ScalingFactors
  MarginCalculator:
    model: code.vegaprotocol.io/vega/protos/vega.MarginCalculator
  Vote:
    model: code.vegaprotocol.io/vega/protos/vega.Vote
  VoteConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.VoteConnection
  VoteEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.VoteEdge
  MarketTimestamps:
    model: code.vegaprotocol.io/vega/protos/vega.MarketTimestamps
  NodeData:
    model: code.vegaprotocol.io/vega/protos/vega.NodeData
  EpochData:
    model: code.vegaprotocol.io/vega/protos/vega.EpochData
  Delegation:
    model: code.vegaprotocol.io/vega/protos/vega.Delegation
  Node:
    model: code.vegaprotocol.io/vega/protos/vega.Node
  Epoch:
    model: code.vegaprotocol.io/vega/protos/vega.Epoch
  EpochTimestamps:
    model: code.vegaprotocol.io/vega/protos/vega.EpochTimestamps
  Reward:
    model: code.vegaprotocol.io/vega/protos/vega.Reward
  RewardSummary:
    model: code.vegaprotocol.io/vega/protos/vega.RewardSummary
  StakeLinking:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.StakeLinking
  PartyStake:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GetStakeResponse
  KeyRotation:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.KeyRotation
  EthereumKeyRotationsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.EthereumKeyRotationsConnection
  EthereumKeyRotationEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.EthereumKeyRotationEdge
  EthereumKeyRotation:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.EthereumKeyRotation
  Transfer:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.Transfer
  TransferFees:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.TransferFees
  TransferNode:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TransferNode
  OneOffTransfer:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.OneOffTransfer
  RecurringTransfer:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.RecurringTransfer
  OneOffGovernanceTransfer:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.OneOffGovernanceTransfer
  RecurringGovernanceTransfer:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.RecurringGovernanceTransfer
  Statistics:
    model: code.vegaprotocol.io/vega/protos/vega/api/v1.Statistics
  AccountType:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.AccountType
  AccountFilter:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AccountFilter
  AggregatedBalance:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AggregatedBalance
  LedgerEntryField:
    model: code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.LedgerEntryField
  LedgerEntryFilter:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LedgerEntryFilter
  AggregatedLedgerEntry:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AggregatedLedgerEntry
  AggregatedLedgerEntriesEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AggregatedLedgerEntriesEdge
  AggregatedLedgerEntriesConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AggregatedLedgerEntriesConnection
  Timestamp:
    model: code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.Timestamp
  NetworkLimits:
    model: code.vegaprotocol.io/vega/protos/vega.NetworkLimits
  RankingScore:
    model: code.vegaprotocol.io/vega/protos/vega.RankingScore
  RewardScore:
    model: code.vegaprotocol.io/vega/protos/vega.RewardScore
  UpdateMarketConfiguration:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateMarketConfiguration
  UpdateMarketSimpleRiskModel:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateMarketConfiguration_Simple
  UpdateMarketLogNormalRiskModel:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateMarketConfiguration_LogNormal
  UpdateFutureProduct:
    model: code.vegaprotocol.io/vega/protos/vega.UpdateFutureProduct
  UpdatePerpetualProduct:
    model: code.vegaprotocol.io/vega/protos/vega.UpdatePerpetualProduct
  TradeConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TradeConnection
  TradeEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TradeEdge
  PageInfo:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PageInfo
  MarketConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarketConnection
  SuccessorMarketConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.SuccessorMarketConnection
  MarketEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarketEdge
  SuccessorMarketEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.SuccessorMarketEdge
  PositionConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PositionConnection
  PositionEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PositionEdge
  PartyConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PartyConnection
  PartyEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PartyEdge
  Pagination:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.Pagination
  OrderEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OrderEdge
  OrderConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OrderConnection
  MarginEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarginEdge
  MarginConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarginConnection
  MarketDataEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarketDataEdge
  MarketDataConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.MarketDataConnection
  RewardEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.RewardEdge
  RewardsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.RewardsConnection
  CandleEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.CandleEdge
  CandleDataConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.CandleDataConnection
  DepositEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.DepositEdge
  DepositsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.DepositsConnection
  WithdrawalEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.WithdrawalEdge
  WithdrawalsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.WithdrawalsConnection
  AssetEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AssetEdge
  AssetsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AssetsConnection
  OracleSpecEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OracleSpecEdge
  OracleSpecsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OracleSpecsConnection
  OracleDataEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OracleDataEdge
  OracleDataConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OracleDataConnection
  LiquidityProvisionsEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProvisionsEdge
  LiquidityProvisionsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProvisionsConnection
  LiquidityProvisionWithPendingEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProvisionWithPendingEdge
  LiquidityProvisionsWithPendingConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProvisionsWithPendingConnection
  LiquidityProvider:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProvider
  LiquidityProviderEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProviderEdge
  LiquidityProviderConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.LiquidityProviderConnection
  TransferEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TransferEdge
  TransferConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TransferConnection
  ProposalEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GovernanceDataEdge
  ProposalsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GovernanceDataConnection
  DelegationEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.DelegationEdge
  DelegationsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.DelegationsConnection
  NodeEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NodeEdge
  NodesConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NodesConnection
  NetworkParameterEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NetworkParameterEdge
  NetworkParametersConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NetworkParameterConnection
  NodeSignatureEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NodeSignatureEdge
  NodeSignaturesConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NodeSignaturesConnection
  KeyRotationEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.KeyRotationEdge
  KeyRotationConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.KeyRotationConnection
  StakeLinkingEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.StakeLinkingEdge
  StakesConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.StakesConnection
  AccountEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AccountEdge
  AccountsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AccountsConnection
  DateRange:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.DateRange
  AggregatedBalanceEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AggregatedBalanceEdge
  AggregatedBalanceConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.AggregatedBalanceConnection
  TransactionResult:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.TransactionResult
  HistorySegment:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.HistorySegment
  ProtocolUpgradeProposalConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ProtocolUpgradeProposalConnection
  ProtocolUpgradeProposalEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ProtocolUpgradeProposalEdge
  ProtocolUpgradeProposal:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.ProtocolUpgradeEvent
  ProtocolUpgradeProposalStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.ProtocolUpgradeProposalStatus
  OrderFilter:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.OrderFilter
  CoreSnapshotConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.CoreSnapshotConnection
  CoreSnapshotEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.CoreSnapshotEdge
  CoreSnapshotData:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.CoreSnapshotData
  RewardSummaryFilter:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.RewardSummaryFilter
  EpochRewardSummaryConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.EpochRewardSummaryConnection
  EpochRewardSummaryEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.EpochRewardSummaryEdge
  EpochRewardSummary:
    model: code.vegaprotocol.io/vega/protos/vega.EpochRewardSummary
  PositionsFilter:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PositionsFilter
  PositionStatus:
    model:
      - code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.PositionStatus
  LedgerEntry:
    model: code.vegaprotocol.io/vega/protos/vega.LedgerEntry
  ERC20MultiSigSignerAddedBundle:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ERC20MultiSigSignerAddedBundle
  ERC20MultiSigSignerRemovedBundle:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ERC20MultiSigSignerRemovedBundle
  NodeBasic:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.NodeBasic
  Entities:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ListEntitiesResponse
  FundingPeriod:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.FundingPeriod
  FundingPeriodDataPoint:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.FundingPeriodDataPoint
  FundingPeriodDataPointSource:
    model: code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.FundingPeriodDataPointSource
  FundingPeriodDataPointEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPeriodDataPointEdge
  FundingPeriodDataPointConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPeriodDataPointConnection
  FundingPeriodEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPeriodEdge
  FundingPeriodConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPeriodConnection
  PartyActivityStreak:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.PartyActivityStreak
  BenefitTier:
    model: code.vegaprotocol.io/vega/protos/vega.BenefitTier
  ReferralProgram:
    model: code.vegaprotocol.io/vega/protos/vega.ReferralProgram
  CurrentReferralProgram:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralProgram
  StakingTier:
    model: code.vegaprotocol.io/vega/protos/vega.StakingTier
  ReferralSet:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSet
  ReferralSetEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetEdge
  ReferralSetConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetConnection
  ReferralSetReferee:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetReferee
  ReferralSetRefereeEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetRefereeEdge
  ReferralSetRefereeConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetRefereeConnection
  ReferralSetStatsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetStatsConnection
  ReferralSetStatsEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetStatsEdge
  ReferralSetStats:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.ReferralSetStats
  RefereeStats:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.RefereeStats
  FeesStats:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.FeesStats
  FeesStatsForParty:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FeesStatsForParty
  PartyAmount:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.PartyAmount
  ReferrerRewardsGenerated:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.ReferrerRewardsGenerated
  MakerFeesGenerated:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.MakerFeesGenerated
  Team:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.Team
  TeamEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamEdge
  TeamConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamConnection
  TeamStatistics:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamStatistics
  QuantumRewardsPerEpoch:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.QuantumRewardsPerEpoch
  TeamStatisticsEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamStatisticsEdge
  TeamsStatisticsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamsStatisticsConnection
  TeamReferee:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamReferee
  TeamRefereeEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamRefereeEdge
  TeamRefereeConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamRefereeConnection
  TeamRefereeHistory:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamRefereeHistory
  TeamRefereeHistoryEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamRefereeHistoryEdge
  TeamRefereeHistoryConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.TeamRefereeHistoryConnection
  FundingPayment:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPayment
  FundingPaymentEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPaymentEdge
  FundingPaymentConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.FundingPaymentConnection
  VolumeBenefitTier:
    model: code.vegaprotocol.io/vega/protos/vega.VolumeBenefitTier
  VolumeDiscountProgram:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.VolumeDiscountProgram
  VolumeDiscountStatsConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.VolumeDiscountStatsConnection
  VolumeDiscountStatsEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.VolumeDiscountStatsEdge
  VolumeDiscountStats:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.VolumeDiscountStats
  PaidLiquidityFees:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.PaidLiquidityFeesStats
  PaidLiquidityFeesConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PaidLiquidityFeesConnection
  PaidLiquidityFeesEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.PaidLiquidityFeesEdge
  PartyVestingBalance:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.PartyVestingBalance
  PartyLockedBalance:
    model: code.vegaprotocol.io/vega/protos/vega/events/v1.PartyLockedBalance
  PartyVestingBalancesSummary:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GetVestingBalancesSummaryResponse
  PartyVestingStats:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GetPartyVestingStatsResponse
  DispatchStrategy:
    model: code.vegaprotocol.io/vega/protos/vega.DispatchStrategy
  RankTable:
    model: code.vegaprotocol.io/vega/protos/vega.Rank
  IndividualScope:
    model: code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.IndividualScope
  EntityScope:
    model: code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.EntityScope
  DistributionStrategy:
    model: code.vegaprotocol.io/vega/datanode/gateway/graphql/marshallers.DistributionStrategy
  TotalTransferFeeDiscount:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GetTotalTransferFeeDiscountResponse
  EstimatedTransferFee:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.EstimateTransferFeeResponse
  Game:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.Game
  GameEdge:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GameEdge
  GamesConnection:
    model: code.vegaprotocol.io/vega/protos/data-node/api/v2.GamesConnection
