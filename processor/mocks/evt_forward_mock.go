// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/processor (interfaces: EvtForward)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEvtForward is a mock of EvtForward interface
type MockEvtForward struct {
	ctrl     *gomock.Controller
	recorder *MockEvtForwardMockRecorder
}

// MockEvtForwardMockRecorder is the mock recorder for MockEvtForward
type MockEvtForwardMockRecorder struct {
	mock *MockEvtForward
}

// NewMockEvtForward creates a new mock instance
func NewMockEvtForward(ctrl *gomock.Controller) *MockEvtForward {
	mock := &MockEvtForward{ctrl: ctrl}
	mock.recorder = &MockEvtForwardMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEvtForward) EXPECT() *MockEvtForwardMockRecorder {
	return m.recorder
}

// Ack mocks base method
func (m *MockEvtForward) Ack(arg0 *proto.ChainEvent) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ack", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Ack indicates an expected call of Ack
func (mr *MockEvtForwardMockRecorder) Ack(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ack", reflect.TypeOf((*MockEvtForward)(nil).Ack), arg0)
}

// AddNodePubKey mocks base method
func (m *MockEvtForward) AddNodePubKey(arg0 []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddNodePubKey", arg0)
}

// AddNodePubKey indicates an expected call of AddNodePubKey
func (mr *MockEvtForwardMockRecorder) AddNodePubKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNodePubKey", reflect.TypeOf((*MockEvtForward)(nil).AddNodePubKey), arg0)
}

// Forward mocks base method
func (m *MockEvtForward) Forward(arg0 *proto.ChainEvent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Forward", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Forward indicates an expected call of Forward
func (mr *MockEvtForwardMockRecorder) Forward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Forward", reflect.TypeOf((*MockEvtForward)(nil).Forward), arg0)
}
