// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/evtforward (interfaces: NodeWallet)

// Package mocks is a generated GoMock package.
package mocks

import (
	nodewallet "code.vegaprotocol.io/vega/nodewallet"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNodeWallet is a mock of NodeWallet interface
type MockNodeWallet struct {
	ctrl     *gomock.Controller
	recorder *MockNodeWalletMockRecorder
}

// MockNodeWalletMockRecorder is the mock recorder for MockNodeWallet
type MockNodeWalletMockRecorder struct {
	mock *MockNodeWallet
}

// NewMockNodeWallet creates a new mock instance
func NewMockNodeWallet(ctrl *gomock.Controller) *MockNodeWallet {
	mock := &MockNodeWallet{ctrl: ctrl}
	mock.recorder = &MockNodeWalletMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodeWallet) EXPECT() *MockNodeWalletMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockNodeWallet) Get(arg0 nodewallet.Blockchain) (nodewallet.Wallet, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(nodewallet.Wallet)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockNodeWalletMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockNodeWallet)(nil).Get), arg0)
}
